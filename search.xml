<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Journal: Week 24</title>
      <link href="/journal-week-24/"/>
      <url>/journal-week-24/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><p>as i mentioned in my last journal, i went back to JB on saturday forCNY, and honestly, last week was just so much fun! finally got to spendsome quality time with my fam and relatives, catching up properly,talking more, and getting to know a little bit more about everyone. 🥰 idid so much better this time—heehee!</p><p>CNY definitely feels a little less exciting as i grow older 🥺, butno matter what, i still love the vibes. the food, the red packets, themahjong (YES, i finally learnt how to play this year! but honestly... itain't my thing heehee), the gambling (without money for me!), thelaughter, the jokes, the stories, the memories—every little moment thatmakes CNY feel like home. 🧧 even if the excitement fades a little withage, i realise it's never really about the traditions themselves, butthe people we share them with.</p><p>but deep down, watching everyone get older and the kids grow up hitsdifferently now. there's this bittersweet feeling—like i wish i couldfreeze time, just for a little while, and relive those moments again,exactly as they were. but i guess that's just life, right? we grow up,time moves forward, and all we can do is cherish what we have while westill have it. 🥲</p><p>真的，时间啊，</p><p>你怎么不在该慢的时候慢一些...</p><p>你可以在我爱的人身上流失得慢一些么</p><p>but even with these emotions lingering, there were so many beautifulmoments to hold onto. lo hey, fireworks, endless rounds of catching up,and just chilling at home with family—those were easily the best partsof the week. no matter how old i get, these are the moments i'll alwaystreasure. 🎆🧨</p><p>of course, there were some small conflicts here and there, but that'sjust part of family dynamics. misunderstandings, miscommunications—ithappens. but at the end of the day, what matters is that we learn, wegrow, and we appreciate each other more. 🤝 after all, without the lows,how would we ever truly appreciate the highs?</p><span id="more"></span><h2 id="memories">Memories</h2><p>... will add em soon! 📸</p>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 23</title>
      <link href="/journal-week-23/"/>
      <url>/journal-week-23/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><p>what a productive week at work! 🥰</p><p>i finally released the feature that i conducted UAT for last year inbeijing, and honestly, what an indescribable feeling of seeing it golive without a critical bug? OK TOUCH WOOD... 😳 <strong>it's momentslike these that remind me why i love what i do</strong>—everything justfeels worth it. very good progress overall, and i couldn't be happier!🥰💪🏼</p><p>another win this week was making strides in improving mycommunication skills. i've been focusing on active listening and givingothers the space to share their thoughts, and it's been so rewarding. ialso had a lovely lunch with a colleague from another team at parisbaguette—my virgin try! the food was really nice, and the company madeit even better.</p><p>on the fitness front, i managed to push myself to a real to-failureleg day on friday. but guys, did it hit hard... the soreness was real bysaturday, just in time for my trip to JB for chinese new yearcelebrations. 🥲 and, of course, life had a little twist waiting forme—while walking after tapping out of the mrt, i got the worst cramp inmy right calf muscle. it was so painful i had to stop walking and leanagainst the wall with my eyes closed, trying to recover.</p><p>as i stood there, i sensed someone looking at me. when i opened myeyes, i saw this guy staring at me, his expression full of concern. heraised his hand, clearly wanting to help. i shook my head and gave himan "OK" 👌🏼 sign, reassuring him i was fine. even as he walked away, hekept turning back to check on me. it's these little acts of kindnessthat restore your faith in humanity and leave a lasting impression. thatstranger? he made my day, and i'll always remember his kindness. 🥹</p><p>it reminded me that even the smallest acts can mean so much tosomeone, so i'll be sure to double it, and pass it on to the next personwhenever i can. 🌟</p><span id="more"></span><h2 id="reading-insights">Reading Insights</h2><p>i have been revisiting the book <em>Never Split the Difference</em>by Christopher Voss, making notes on the key takeaways and strategiesthat resonate with me. you may check it out <ahref="/never-split-the-difference-by-chris-voss/">here</a>.</p><blockquote><p>when you visit, it might still be a work in progress draft, but i'mworking on it! 📝</p></blockquote><h2 id="memories">Memories</h2><img data-src="/journal-week-23/IMG_1652.jpeg" class="" title="哎 后来才懂 人生就是一个不断说再见的过程 🥹"><img data-src="/journal-week-23/IMG_1658.jpeg" class="" title="午午午午餐"><img data-src="/journal-week-23/IMG_1659.jpeg" class="" title="有 mussels 哦！今天真的好吃"><img data-src="/journal-week-23/IMG_1661.jpeg" class="" title="部门请咖啡！yeah ✌🏼"><img data-src="/journal-week-23/IMG_1662.jpeg" class="" title="偷偷秀了我的凌乱的工位"><img data-src="/journal-week-23/IMG_1663.jpeg" class="" title="晚餐"><img data-src="/journal-week-23/IMG_1666.jpeg" class="" title="biceps 真的还需要继续努力"><img data-src="/journal-week-23/IMG_1667.jpeg" class="" title="👌🏼"><img data-src="/journal-week-23/IMG_1668.jpeg" class="" title="🤓"><img data-src="/journal-week-23/IMG_1671.PNG" class="" title="physique check"><img data-src="/journal-week-23/IMG_1675.jpeg" class="" title="then a typical mcd supper"><img data-src="/journal-week-23/IMG_1677.jpeg" class="" title="午餐午餐"><img data-src="/journal-week-23/IMG_1783.jpeg" class="" title="a gift from one of the sweetest friends 🥹"><img data-src="/journal-week-23/IMG_1785.jpeg" class="" title="正面是喜，后面是乐"><img data-src="/journal-week-23/IMG_1786.jpeg" class="" title="我把它挂在这儿"><img data-src="/journal-week-23/IMG_1788.jpeg" class="" title="和同事出去吃午餐~ @ paris baguette"><img data-src="/journal-week-23/IMG_1789.jpeg" class="" title="吃不饱 但是真的很好吃的 适合 business lunch 或者 casual date"><img data-src="/journal-week-23/IMG_1793.jpeg" class="" title="我买的 whey gainer, 买了 5kg 想说试试，能不能 bulk 起来"><img data-src="/journal-week-23/IMG_1794.jpeg" class="" title="希望真的能帮助我增肌"><img data-src="/journal-week-23/IMG_1795.jpeg" class="" title="耶"><img data-src="/journal-week-23/IMG_1798.jpeg" class="" title="午餐！今天超好吃！！F26！！！！"><img data-src="/journal-week-23/IMG_1799.jpeg" class="" title="awww junjie 买了蛋挞~"><img data-src="/journal-week-23/IMG_1801.PNG" class="" title="在字节的第二个春节红包~ 🧧"><img data-src="/journal-week-23/IMG_1802.jpg" class="" title="真的太感恩了 🥹"><img data-src="/journal-week-23/IMG_1803.PNG" class="" title="真的不知道说什么、但是就是很庆幸、庆幸所有的一切 😭❤️"><img data-src="/journal-week-23/IMG_1809.jpeg" class="" title="健身！"><img data-src="/journal-week-23/IMG_1814.jpeg" class="" title="公司带来的香蕉 🍌 teehee"><img data-src="/journal-week-23/IMG_1815.jpeg" class="" title="啊啊啊啊啊二房东也给了红包超级感恩 她也太好了吧！"><img data-src="/journal-week-23/IMG_1817.jpeg" class="" title="我最爱的早餐"><img data-src="/journal-week-23/IMG_1820.jpeg" class="" title="city hall 健身后出发马来！"><img data-src="/journal-week-23/IMG_1823.jpeg" class="" title="等车买了个咖啡，超贵 RM14，而且报喝，奶太重了"><img data-src="/journal-week-23/IMG_1824.PNG" class="" title="看 DOAC~"><img data-src="/journal-week-23/FC9E5A1F-F33B-4957-BDF7-35C59FF93C50.JPG" class="" title="等车ing"><img data-src="/journal-week-23/IMG_1830.jpeg" class="" title="哇家人找到这个路边买的薯片超级好吃！"><img data-src="/journal-week-23/IMG_1832.jpeg" class="" title="很特别 很香脆 又不辣！"><img data-src="/journal-week-23/IMG_1833.jpeg" class="" title="xs 蛇么都有 🐍"><img data-src="/journal-week-23/IMG_1834.jpeg" class="" title="过节传统——捞鱼生！（但是我们算是又提前捞了——上一次是和肥肥妈妈哈哈哈）"><img data-src="/journal-week-23/IMG_1850.jpeg" class="" title="爸爸妈妈打包的马来人的食物——莫名的好吃"><img data-src="/journal-week-23/IMG_1855.jpeg" class="" title="啊啊啊宵夜"><img data-src="/journal-week-23/IMG_1856.jpeg" class="" title="浅尝了一点这个啤酒！"><img data-src="/journal-week-23/IMG_1871.jpeg" class="" title="在 JB 可以吃到 jollibee 啦！这次的 cheese 是真的给的好足！🤤">]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 22</title>
      <link href="/journal-week-22/"/>
      <url>/journal-week-22/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><p>i haven't been so busy for quite a while, damn, it was such aproductive week! a few nights, i stayed up alone in the office, pouringin some extra effort just to complete things. one of the biggestaccomplishments was finishing my self-review for 2024. writing downreflections on each project i worked on really made me pause and thinkdeeply.</p><p>while writing my self-review on key outputs, i realised how much i'veparticipated in, but at the same time, i can't help but feel like icould have done more. it wasn't about slacking off, but how some tasksseemed almost too easy compared to my past experiences. don't get mewrong though—what i mean by "easy" is that it was less challenging interms of technical knowledge.</p><p>thinking back to project H (let's keep it hashed forconfidentiality), i remember how overwhelming it was at the start. therequirements were straightforward when i look at them now, but backthen? oh boy, it was another story entirely. the business chinesejargon? it felt like my brain hit a complete blank.</p><p>as someone raised in malaysia, speaking chinese, switching to malayin secondary school, and then studying in singapore for three yearsbefore settling here for over seven... let's just say my language systemgot a serious workout. juggling those languages while trying to graspthe project requirements? yeah, it was intense. i felt so out of mydepth.</p><p>when i look back at it now, (yes, i'm smiling 🥹), jinghui, you’vecome so far. you did so well! even those late nights staying up until4am, panicking about whether you'd make the deadline... you still madeit. all the mistakes you made during each project? they're the reasonyou are where you are today.</p><p>that realisation hit me deeply this week. it's moments like thesethat remind me of why i push myself—to grow, to overcome, and to keepbuilding my confidence.</p><span id="more"></span><h2 id="memories">Memories</h2><img data-src="/journal-week-22/IMG_1479.jpeg" class="" title="他们难道要把中国工区的零食带进来么 😍"><img data-src="/journal-week-22/IMG_1480.jpeg" class="" title="午餐 salmon 真的不会难吃到哪里去"><img data-src="/journal-week-22/IMG_1481.jpeg" class="" title="打包的晚餐"><img data-src="/journal-week-22/IMG_1482.jpeg" class="" title="heading to the gym!"><img data-src="/journal-week-22/IMG_1483.jpeg" class="" title="日常"><img data-src="/journal-week-22/IMG_1491.jpeg" class="" title="午餐午餐"><img data-src="/journal-week-22/IMG_1494.jpeg" class="" title="终于去拿我的一周年礼包拉~ 不知不觉的"><img data-src="/journal-week-22/IMG_1497.PNG" class="" title="TT 要被下 小红书一堆外国 IP xs"><img data-src="/journal-week-22/IMG_1501.jpeg" class="" title="好看！"><img data-src="/journal-week-22/IMG_1528.jpeg" class="" title="吃！"><img data-src="/journal-week-22/IMG_1529.jpeg" class="" title="还是吃！"><img data-src="/journal-week-22/IMG_1531.jpeg" class="" title="宵夜 夜宵"><img data-src="/journal-week-22/IMG_1533.jpeg" class="" title="吃~~~~"><img data-src="/journal-week-22/IMG_1535.jpeg" class="" title="29 真的... 有点不公平啊 我那层都不去打理的吗 huh？"><img data-src="/journal-week-22/IMG_1537.JPG" class="" title="~"><img data-src="/journal-week-22/IMG_1539.jpeg" class="" title="去和业务吃饭啦"><img data-src="/journal-week-22/IMG_1541.jpeg" class="" title="糖分+++"><img data-src="/journal-week-22/IMG_1542.jpeg" class="" title="这个是辣的辣炒年糕"><img data-src="/journal-week-22/IMG_1543.jpeg" class="" title="这个真的可以！"><img data-src="/journal-week-22/IMG_1550.jpeg" class="" title="然后还是gym！！！！！"><img data-src="/journal-week-22/IMG_1558.jpeg" class="" title="诶为什么我一直这样拍"><img data-src="/journal-week-22/IMG_1559.jpeg" class="" title="。。。"><img data-src="/journal-week-22/IMG_1567.PNG" class="" title="竞辉加油！"><img data-src="/journal-week-22/IMG_1568.jpeg" class="" title="和 leon 出去吃午餐！"><img data-src="/journal-week-22/IMG_1569.jpeg" class="" title="joe 给我的 luckin~"><img data-src="/journal-week-22/IMG_1570.jpeg" class="" title="打包的晚餐"><img data-src="/journal-week-22/IMG_1573.jpeg" class="" title="还是 gym"><img data-src="/journal-week-22/IMG_1580.jpeg" class="" title="嗯"><img data-src="/journal-week-22/IMG_1586.jpeg" class="" title="我的 go-to 早餐！🥰"><img data-src="/journal-week-22/IMG_1596.jpeg" class="" title="back to jb..."><img data-src="/journal-week-22/IMG_1602.jpeg" class="" title="配了新眼镜"><img data-src="/journal-week-22/IMG_1604.jpeg" class="" title="去旁边街上的新年摆摊 - ok 我不懂怎样叫他们 but u get me :3"><img data-src="/journal-week-22/IMG_1605.jpeg" class="" title="其实马来西亚的炮不是那么的贵的 - 好不好看就是另一回事了"><img data-src="/journal-week-22/IMG_1606.jpeg" class="" title="weee"><img data-src="/journal-week-22/IMG_1607.jpeg" class="" title="免费试吃哪里可以没有我"><img data-src="/journal-week-22/IMG_1608.jpeg" class="" title="晚餐吃苦瓜汤！"><img data-src="/journal-week-22/IMG_1611.jpeg" class="" title="嗯 这间。我给 6.8&#x2F;10"><img data-src="/journal-week-22/IMG_1613.jpeg" class="" title="整理家里找到了以前玩「animal 卡」得奖得到的衣服"><img data-src="/journal-week-22/IMG_1614.jpeg" class="" title="哎 都不知道花了多少父母的钱 ooopsie"><img data-src="/journal-week-22/IMG_1615.jpeg" class="" title="早餐 - 难吃 不会再来了 terima kasih, next"><img data-src="/journal-week-22/IMG_1616.jpeg" class="" title="OMG..."><img data-src="/journal-week-22/IMG_1617.jpeg" class="" title="hold up"><img data-src="/journal-week-22/IMG_1618.jpeg" class="" title="这个橡皮檫我真的不知道该从哪里说起"><img data-src="/journal-week-22/IMG_1619.jpeg" class="" title="小学时，学校流行「斗胶擦」就是可以用手指去按、压在上面的就是赢家 - 因为我喜欢画画，突发奇想说为什么不借此机会来卖胶擦、然后我就在上面画了一些以前流行的「弹弹堂」的武器等等来高价出售"><img data-src="/journal-week-22/IMG_1620.jpeg" class="" title="不敢相信吧 - 我也是 🥺"><img data-src="/journal-week-22/IMG_1621.jpeg" class="" title="有一说一 我还是觉得画的蛮不错的"><img data-src="/journal-week-22/IMG_1622.jpeg" class="" title="还能拼起来的 「双拼」哈哈哈哈哈哈哈"><img data-src="/journal-week-22/IMG_1627.jpeg" class="" title="ayeee"><img data-src="/journal-week-22/IMG_1628.jpeg" class="" title="你看... 有鸡 🐔"><img data-src="/journal-week-22/IMG_1630.jpeg" class="" title="AHHHH - ok 有时我的笑点真的有点莫名其妙"><img data-src="/journal-week-22/IMG_1631.jpeg" class="" title="吃饭！🍽️"><img data-src="/journal-week-22/IMG_1636.jpeg" class="" title="好喝！"><img data-src="/journal-week-22/IMG_1637.jpeg" class="" title="555 工区里的龙眼干 没想到那么好吃"><img data-src="/journal-week-22/IMG_1643.jpeg" class="" title="当然 除了 mcd 还是 mcd"><img data-src="/journal-week-22/IMG_1645.jpeg" class="" title="额 上回还夸你开给我们普通老百姓用，容许我撤回我说的话 谢谢"><blockquote><p>my note: after keeping my photos here i will be deleting most of themon my phone teeheee</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 21</title>
      <link href="/journal-week-21/"/>
      <url>/journal-week-21/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><p>this week i made a conscious effort to be more productive at work-notjust to compensate for the time spent on my beijing trip, but also tochallenge myself. i wanted to prove that with the right mindset, i couldpush my limits and achieve so much more. it's all about mentalresilience. at work, i've been handling a requirement with manageablecomplexity, but it demands a critical focus on detail. as part of mygoal this year, i'm striving to do things <strong>well</strong>, notjust get them done. it's about adopting the mindset of <ahref="/goals-2025#:~:text=Done%20vs%20Done%20Well">Done vs DoneWell</a>, and this task is no exception. i've been taking my time,ensuring that the quality of my work aligns with that principle. it'sbeen challenging, but i'm enjoying the process of learning and growingin this area. 🎯</p><span id="more"></span><p>as for the weekend, it was nothing short of amazing! i had the chanceto gather with my relatives for an earlier Lo Hey (捞鱼生) @ <ahref="https://g.co/kgs/egQyvhv">TungLok Peking Duck Novena</a>! it feltso good to reconnect with them after such a long time, and it was agreat way to kick off the lunar new year celebrations! 🧧 on top ofthat, it happened to be my aunty's birthday (肥肥妈妈). i surprised herwith a cake, and the restaraunt went extra mile-they presented the cakeon a large plate with dry ice underneath, creating an amazing fogeffect. to top it off, they played some chinese EDM birthday songs,adding to the festive vibe HAHA! loved it so much, it was such a fun andheartwarming moment. big up to 同乐 for making the celebration sospecial!</p><h2 id="reading-insights">Reading Insights</h2><p>as i have been kind of like relearning from the book of <ahref="/never-split-the-difference-by-chris-voss/">Never Split theDifferences by Chris Voss</a>, i have been trying to revise and applysome of the negotiation tactics in my daily life. it's been quiteinteresting to see how these strategies can be used in varioussituations, not just in business or high-stakes scenarios. i'm stillworking on mastering the art of tactical empathy and calibrated "no,"but i'm excited to see how these skills evolve over time. 📚</p><p>i have been utilising these methods in my conversations withcolleagues and friends, and it's been fascinating to observe the subtleshifts in dynamics and outcomes. i'm also trying to be more mindful ofmy body language and tone of voice, as these non-verbal cues play asignificant role in communication. it's a work in progress, but i'menjoying the process of learning and growing in this area. 💬</p><p>SO! i was randomly cleaning up my Spotify's playlist and saw that ihave been following The Diary Of A CEO with Steven Bartlett podcast!which i planned to listen but always forgot to... so i clicked on it andsaw a topic just caught my eye! <ahref="https://youtu.be/VHUrdELKjDw?si=6QJh_KsPTkIMvgxP">Body LanguageExpert: Stop Using This, It’s Making People Dislike You, So Are TheseSubtle Mistakes!</a> and i was like, "ok, that sounds interesting!" so iclicked on it and started listening to it. it was quite an insightfulepisode, and i learned a lot about the importance of body language incommunication, she called it the language of cues. i've always beenfascinated by the power of non-verbal cues, and this podcast episodereinforced the idea that our body language can speak volumes about ourthoughts and emotions. it's a reminder to be more aware of how i presentmyself in different situations and how i can use body language toenhance my communication skills at work and in my personal life!</p><ul><li><span class="exturl" data-url="aHR0cHM6Ly9saW5rdHIuZWUvZGlhcnlvZmFjZW9zdHVkaWVz">The Diary Of A CEOLinks - Vanessa Van Edwards<i class="fa fa-external-link-alt"></i></span></li></ul><h2 id="memories">Memories</h2><img data-src="/journal-week-21/IMG_1306.jpeg" class="" title="lunch"><img data-src="/journal-week-21/IMG_1309.jpeg" class="" title="leftover lunch for dinner"><img data-src="/journal-week-21/IMG_1312.jpeg" class="" title="a christmas gift from junjie 🥺 feeling so blessed"><img data-src="/journal-week-21/IMG_1313.jpeg" class="" title="chocolates!-and there is my favourite white choc!!! 🤍"><img data-src="/journal-week-21/IMG_1328.jpeg" class="" title="lunch"><img data-src="/journal-week-21/IMG_1329.jpeg" class="" title="a taiwan souvenir from my mentor-foolai!"><img data-src="/journal-week-21/IMG_1330.jpeg" class="" title="honestly so tasty! i want more!!"><img data-src="/journal-week-21/IMG_1333.jpeg" class="" title="there is no execuse for me to skip gym, ever."><img data-src="/journal-week-21/IMG_1334.jpeg" class="" title="supper"><img data-src="/journal-week-21/IMG_1335.jpeg" class="" title="oatmilk over diet coke-keeping it healthier"><img data-src="/journal-week-21/IMG_1337.jpeg" class="" title="started swapping biscuits for meiji yogurt at breakfast"><img data-src="/journal-week-21/IMG_1338.jpeg" class="" title="lunch"><img data-src="/journal-week-21/IMG_1342.jpeg" class="" title="same thing same thing"><img data-src="/journal-week-21/IMG_1353.jpeg" class="" title="lunchhhh"><img data-src="/journal-week-21/IMG_1357.jpeg" class="" title="leftover dinner"><img data-src="/journal-week-21/IMG_1370.jpeg" class="" title="FRIDAY WEEKLY MEETING AHHH"><img data-src="/journal-week-21/IMG_1372.jpeg" class="" title="lunch"><img data-src="/journal-week-21/IMG_1373.jpeg" class="" title="yes leftover dinner - 0 money spent only"><img data-src="/journal-week-21/IMG_1375.jpeg" class="" title="dinner time"><img data-src="/journal-week-21/IMG_1385.jpeg" class="" title="craved for this - 9 bucks"><img data-src="/journal-week-21/IMG_1387.PNG" class="" title="a podcast gem: insights from a body language expert—so fascinating"><img data-src="/journal-week-21/IMG_1389.PNG" class="" title="a chart of wormth x competence"><img data-src="/journal-week-21/IMG_1390.jpeg" class="" title="woooo my hairstyle was on point that night. i like"><img data-src="/journal-week-21/IMG_1391.PNG" class="" title="TungLok Peking Duck Novena!"><img data-src="/journal-week-21/IMG_1393.jpeg" class="" title="他们家的画、摆设，都很高级 👌🏼"><img data-src="/journal-week-21/IMG_1396.jpeg" class="" title="我们的包厢！你看这可爱的熊猫画啊啊啊"><img data-src="/journal-week-21/IMG_1465.jpeg" class="" title="sudden crave for chicken rice!!!"><img data-src="/journal-week-21/IMG_1468.jpeg" class="" title="guess whaaaaaat - it was only 4.80!? cANN U BELIEVE THAT?!">]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 20</title>
      <link href="/journal-week-20/"/>
      <url>/journal-week-20/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><p>the first part of the week was packed with practices and preparationfor the countdown performance. since i had just returned from my beijingtrip, i was a bit behind on the crew's routines and didn't get a chanceto practise with them earlier. it felt like i had to play catch-up, so iput in extra effort to get back on track. despite the challenges, wepulled it off, and the performance went really well. the fireworks werelovely, and the energy of the crowd was incredible. being part of theteam and performing on stage was such a rewarding experience, and wereally really did so well! so proud of us! 🎉</p><p>even after the performance, i managed to squeeze in some gymtime—because dedication doesn't take a break! the rest of the week wasabout catching up on sleep and easing back into my usual routine of workand gym.</p><p>i also started a loading phase of ~20g of creatine per day for 7days, beginning on 3rd january 2025. on top of that, i tried a newprotein shake flavour (surprisingly good) and treated myself to alate-night mcd's supper—it's all about balance, right? 🙊</p><p>overall, it was a short but fulfilling week, blending beatboxing,fitness, and a bit of relaxation. can't wait to see what the next weekbrings!</p><span id="more"></span><h2 id="memories">Memories</h2><img data-src="/journal-week-20/IMG_1075.jpeg" class="" title="a sudden craving for mala-went all protein, no rice, and devoured it all by myself! 🥰"><img data-src="/journal-week-20/IMG_1082.jpeg" class="" title="breakfast from the caifan store for $7... might as well have gotten mcd. never again. 💀"><img data-src="/journal-week-20/IMG_1087.jpeg" class="" title="countdown performance tonight-heres my outfit for the stage!"><img data-src="/journal-week-20/IMG_1091.jpeg" class="" title="soundcheck under singapores scorching heat... thankfully, i brought backup clothes. 🥵"><img data-src="/journal-week-20/IMG_1092.jpeg" class="" title="stepped offstage to hear how my team sounded from the crowds perspective."><img data-src="/journal-week-20/IMG_1093.jpeg" class="" title="555 treated us to five guys-i got a bacon burger, but the best part? time spent with obelisk. 🫶🏻"><img data-src="/journal-week-20/IMG_1094.jpeg" class="" title="explored the city-it rained in the evening, adding a calm vibe."><img data-src="/journal-week-20/IMG_1095.jpeg" class="" title="humid singapore weather but every step made me more excited for tonights performance."><img data-src="/journal-week-20/IMG_1096.jpeg" class="" title="backstage vibes-the anticipation was real!"><img data-src="/journal-week-20/IMG_1097.jpeg" class="" title="watched others perform and soaked in the energy backstage."><img data-src="/journal-week-20/IMG_1099.jpeg" class="" title="did a quick outfit check before going on stage-thanks handfx (luke) for the snap!"><img data-src="/journal-week-20/IMG_1101.jpeg" class="" title="headed up to the stage! 🔥"><img data-src="/journal-week-20/IMG_1110.jpeg" class="" title="post-countdown fireworks-such a magical sight!"><img data-src="/journal-week-20/IMG_1114.jpeg" class="" title="these fireworks were memorable-what a way to end the night! 😍"><img data-src="/journal-week-20/IMG_1122.jpeg" class="" title="on-stage wefie with the team! missed clark, though. 🫶🏻"><img data-src="/journal-week-20/IMG_1118.jpeg" class="" title="guess what i did post-performance? gym time, and it was leg day! dedication, always."><img data-src="/journal-week-20/IMG_1123.jpeg" class="" title="jumped around on stage but still powered through leg day... fml."><img data-src="/journal-week-20/IMG_1125.jpeg" class="" title="apple watch kept asking me to end my workout... no, i wasnt done yet! 😂"><img data-src="/journal-week-20/IMG_1126.jpeg" class="" title="needed to up my protein intake-grabbed this 22g protein bar."><img data-src="/journal-week-20/IMG_1127.jpeg" class="" title="strawberries &amp; cream protein bar-not bad, but wow, tough to chew."><img data-src="/journal-week-20/IMG_1129.jpeg" class="" title="craved kfc-ordered a 2-piece chicken meal and... why were they so tiny?! hellooo, kfc?"><img data-src="/journal-week-20/IMG_1130.jpeg" class="" title="post-kfc, waited for traffic before heading home for the gym."><img data-src="/journal-week-20/IMG_1131.jpeg" class="" title="slept till evening but still felt like a zombie... 💤"><img data-src="/journal-week-20/IMG_1132.jpeg" class="" title="started 2025 organised with bytedances new calendar!"><img data-src="/journal-week-20/IMG_1133.jpeg" class="" title="gym grind as usual-consistency was key."><img data-src="/journal-week-20/IMG_1141.jpeg" class="" title="the gyms digital clock-still in holiday mode while i wasnt!"><img data-src="/journal-week-20/IMG_1153.jpeg" class="" title="new soya drink stocked in the bytedance fridge-6.3g of protein per can. it was free, so why not spam it?!"><img data-src="/journal-week-20/IMG_1156.jpeg" class="" title="first lunch back in the singapore office after beijing-not bad, but lets not compare, alright?"><img data-src="/journal-week-20/IMG_1162.jpeg" class="" title="farewell photo session for leon-he will be missed!"><img data-src="/journal-week-20/IMG_1171.jpeg" class="" title="wished leon the best in his new role and with his newborn baby girl. 🍼✨"><img data-src="/journal-week-20/IMG_1205.jpeg" class="" title="pull day-smashed it! 💪"><img data-src="/journal-week-20/IMG_1206.jpeg" class="" title="tried a matcha protein shake for the first time... omg, it was amazing! officially obsessed."><img data-src="/journal-week-20/IMG_1207.jpeg" class="" title="late-night typical supper-double quarter pounder at mcd."><img data-src="/journal-week-20/IMG_1224.jpeg" class="" title="guess what? yogurt was back in the fridge-loved it! 😍"><img data-src="/journal-week-20/IMG_1229.jpeg" class="" title="had a casual lunch with leon while he was in town. good vibes only."><img data-src="/journal-week-20/IMG_1232.jpeg" class="" title="rendang chicken bowl saved for dinner, topped with steamed&#x2F;fried eggs-yum!"><img data-src="/journal-week-20/IMG_1233.jpeg" class="" title="not bad at all-simple but satisfying."><img data-src="/journal-week-20/IMG_1234.jpeg" class="" title="matcha protein powder packaging reveal-now you know what i was hyped about! LOL"><img data-src="/journal-week-20/IMG_1235.jpeg" class="" title="a peek at the back of the matcha protein packaging."><img data-src="/journal-week-20/IMG_1237.jpeg" class="" title="gym check"><img data-src="/journal-week-20/IMG_1242.jpeg" class="" title="leg day view-loved this feeling of pushing myself to the limit!"><img data-src="/journal-week-20/IMG_1244.jpeg" class="" title="and then, of course... more matcha protein! 😤"><img data-src="/journal-week-20/IMG_1247.PNG" class="" title="slept for over 10 hours-if sleeping was a sport, i would have won gold. 🏆"><img data-src="/journal-week-20/IMG_1250.jpeg" class="" title="yes, another mcd supper-no shame!"><img data-src="/journal-week-20/IMG_1256.jpeg" class="" title="tested out the new bytedance toy-insta360 flow pro."><img data-src="/journal-week-20/IMG_1277.jpeg" class="" title="their AI tracking? terrible. went back to my trusty old tripod. ☺️"><img data-src="/journal-week-20/IMG_1286.jpg" class="" title="physique check with insta360 flow pro-decent results when it actually worked!"><img data-src="/journal-week-20/IMG_1293.jpeg" class="" title="lunch craving hit-double mcspicy, no regrets.">]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Never Split The Difference by Chris Voss</title>
      <link href="/never-split-the-difference-by-chris-voss/"/>
      <url>/never-split-the-difference-by-chris-voss/</url>
      
        <content type="html"><![CDATA[<p>"Never Split the Difference" is a book by Chris Voss, a former FBIhostage negotiator, that offers negotiation advice you can use in dailylife. The book is centered around the idea that traditional negotiationstrategies, like "splitting the difference," are often ineffective. Vossprovides a range of psychological strategies and tactics to use innegotiations, derived from his experience in dealing with criminals,terrorists, and other high-stakes situations.</p><blockquote><p><strong>Life is negotiation.</strong></p></blockquote><p>Key concepts from the book include:</p><ol type="1"><li><strong>Mirroring</strong>: Mimicking the other person's languageand behavior to build rapport.</li><li><strong>Labeling</strong>: Verbally acknowledging the other person'ssituation, feelings, or viewpoints.</li><li><strong>The "Accusation Audit"</strong>: Preemptively addressing allof the other party's potential accusations and concerns.</li><li><strong>Tactical Empathy</strong>: Understanding the feelings andmindset of another in the moment and also hearing what is behind thosefeelings so you increase your influence in all the moments thatfollow.</li><li><strong>The "Calibrated 'No'"</strong>: Saying "No" in a way thatinvites more discussion, as opposed to shutting it down.</li><li><strong>Bargaining Strategies</strong>: Like setting an "AnchorPrice" or using odd numbers to make a price seem more exact.</li><li><strong>The "Black Swan" Rule</strong>: The idea that there areunknown, unpredictable elements in every negotiation that can be used toyour advantage.</li></ol><hr /><h2 id="chapter-1-the-new-rules">Chapter 1: The New Rules</h2><p>The majority of the interactions we have at work and at home arenegotiations that boil down to the expression of a simple, animalisticurge: <strong>I want</strong>.</p><blockquote><p>“I want you to free the hostages,” is a very relevant one to thisbook, of course.</p></blockquote><p>But so is:</p><blockquote><p>“I want you to accept that $1 million contract.”</p><p>“I want to pay $20,000 for that car.”</p><p>“I want you to give me a 10 percent raise.” and</p><p>“I want you to go to sleep at 9 p.m.”</p></blockquote><p>Negotiation serves two distinct, vital life functions—informationgathering and behaviour influencing—and includes almost any interactionwhere each party wants something from the other side.</p><blockquote><p>“I was employing what had become one of the FBI’s most potentnegotiating tools: the open-ended question. Today, after some yearsevolving these tactics for the private sector in my consultancy, TheBlack Swan Group, we call this tactic calibrated questions: queries thatthe other side can respond to but that have no fixed answers. It buysyou time. <u>It gives your counterpart the illusion of control—they arethe one with the answers and power after all—and it does all thatwithout giving them any idea of how constrained they are by it.</u>”</p></blockquote><p>Psychotherapy research shows that <u>when individuals feel listenedto, they tend to listen to themselves more carefully and to openlyevaluate and clarify their own thoughts and feelings.</u> In addition,they tend to become less defensive and oppositional and more willing tolisten to other points of view, which gets them to the calm and logicalplace where they can be good Getting to Yes problem solvers.</p><p>Getting what you want out of life is all about getting what you wantfrom—and with—other people. Conflict between two parties is inevitablein all relationships. So it’s useful—crucial, even—to know how to engagein that conflict to get what you want without inflicting damage.</p><blockquote><p>“The first step to achieving a mastery of daily negotiation is to getover your aversion to negotiating. You don’t need to like it; you justneed to understand that’s how the world works. <u>Negotiating does notmean browbeating or grinding someone down. It simply means playing theemotional game that human society is set up for. In this world, you getwhat you ask for; you just have to ask correctly. So claim yourprerogative to ask for what you think is right.</u></p><p>What this book is really about, then, is getting you to acceptnegotiation and in doing so learn how to get what you want in apsychologically aware way. You’ll learn to use your emotions, instincts,and insights in any encounter to connect better with others, influencethem, and achieve more.</p><p>Effective negotiation is applied people smarts, a psychological edgein every domain of life: how to size someone up, how to influence theirsizing up of you, and how to use that knowledge to get what youwant.”</p></blockquote><hr /><h2 id="chapter-2-be-a-mirror">Chapter 2: Be A Mirror</h2><h3 id="assumption-blinds-hypothesis-guide">Assumption blinds,hypothesis guide</h3><p>Good negotiators, going in, know they have to be ready for possiblesurprises; great negotiators aim to use their skills to reveal thesurprises they are certain exist.</p><p>In negotiation, each new psychological insight or additional piece ofinformation revealed heralds a step forward and allows one to discardone hypothesis in favor of another. You should engage the process with amindset of discovery. Your goal at the outset is to extract and observeas much information as possible. Which, by the way, is one of thereasons that really smart people often have trouble beingnegotiators—they’re so smart they think they don’t have anything todiscover.</p><blockquote><p>“until you know what you’re dealing with, you don’t know what you’redealing with.”</p></blockquote><h3 id="calm-the-schizophrenic">Calm the Schizophrenic</h3><p>Schizophrenia: everyone just listening to the voice in theirhead.</p><blockquote><p>“to avoid this, we need to apply true active listening which willdisarm the other party and make them feel heard, safe andunderstood.“</p></blockquote><blockquote><p>“Smile at someone on the street, and as a reflex they’ll smile back.Understanding that reflex and putting it into practice is critical tothe success of just about every negotiating skill there is tolearn.”</p></blockquote><h3 id="mirroring">Mirroring</h3><p><u>Mirroring, also called isopraxism</u>, is essentially imitation.It’s another neurobehavior humans (and other animals) display in whichwe copy each other to comfort each other. It can be done with speechpatterns, body language, vocabulary, tempo, and tone of voice. It’sgenerally an unconscious behavior—we are rarely aware of it when it’shappening—but it’s a sign that people are bonding, in sync, and<u>establishing the kind of rapport that leads to trust.</u></p><p>It’s a phenomenon (and now technique) that follows a very basic butprofound biological principle: <u>We fear what’s different and are drawnto what’s similar.</u>”</p><blockquote><p>“mirror” is when you <u>repeat the last three words (or the criticalone to three words) of what someone has just said</u>. Of the entiretyof the FBI’s hostage negotiation skill set, mirroring is the closest onegets to a Jedi mind trick. Simple, and yet uncannily effective.</p><p>By repeating back what people say, you trigger this mirroringinstinct and your counterpart <u>will inevitably elaborate on what wasjust said and sustain the process of connecting</u>. PsychologistRichard Wiseman created a study using waiters to identify what was themore effective method of creating a connection with strangers: mirroringor positive reinforcement.”</p></blockquote><p>and usually they will not repeat the same thing again, but willelaborate on it. This is the key to getting more information from theother party.</p><h3 id="how-to-confront-and-get-your-way-without-confrontation">How toConfront-And Get Your Way-Without Confrontation</h3><ol type="1"><li>Use the late-night FM DJ voice.</li><li>Start with “I’m sorry . . .”</li><li>Mirror.</li><li>Silence. At least four seconds, to let the mirror work its magic onyour counterpart.</li><li>Repeat.</li></ol><h3 id="key-lessons">Key lessons</h3><ul><li>A good negotiator prepares, going in, to be ready for possiblesurprises; a great negotiator aims to use her skills to reveal thesurprises she is certain to find.</li><li>Don’t commit to assumptions; instead, view them as hypotheses anduse the negotiation to test them rigorously.</li><li>People who view negotiation as a battle of arguments becomeoverwhelmed by the voices in their head. Negotiation is not an act ofbattle; it’s a process of discovery. The goal is to uncover as muchinformation as possible.</li><li>To quiet the voices in your head, make your sole andall-encompassing focus the other person and what they have to say.</li><li>Slow. It. Down. Going too fast is one of the mistakes allnegotiators are prone to making. If we’re too much in a hurry, peoplecan feel as if they’re not being heard. You risk undermining the rapportand trust you’ve built.</li><li>Put a smile on your face. When people are in a positive frame ofmind, they think more quickly, and are more likely to collaborate andproblem-solve (instead of fight and resist). Positivity creates mentalagility in both you and your counterpart.</li><li>Mirrors work magic. Repeat the last three words (or the critical oneto three words) of what someone has just said. We fear what’s differentand are drawn to what’s similar. Mirroring is the art of insinuatingsimilarity, which facilitates bonding. Use mirrors to encourage theother side to empathize and bond with you, keep people talking, buy yourside time to regroup, and encourage your counterparts to reveal theirstrategy.</li></ul><h3 id="three-voice-tones-available-to-negotiators">Three Voice TonesAvailable to Negotiators</h3><ol type="1"><li><strong>The late-night FM DJ voice</strong>: Use selectively to makea point. Inflect your voice downward, keeping it calm and slow. Whendone properly, you create an aura of authority and trustworthinesswithout triggering defensiveness.</li><li><strong>The positive/playful voice</strong>: Should be your defaultvoice. It’s the voice of an easygoing, good-natured person. Yourattitude is light and encouraging. The key here is to relax and smilewhile you’re talking.</li><li><strong>The direct or assertive voice</strong>: Used rarely. Willcause problems and create pushback.</li></ol><hr /><h2 id="chapter-3-dont-feel-their-pain-label-it">Chapter 3: Don't FeelTheir Pain, Label It</h2><blockquote><p>“How can you separate people from the problem when their emotions arethe problem?”</p></blockquote><h3 id="tactical-empathy">Tactical Empathy</h3><p>Empathy is the ability to recognise the perspective of a counterpart,and the vocalisation of that recognition</p><p>Tactical empathy is <u>understanding the feelings and mindset ofanother in the moment and also hearing what is behind those feelings</u>so you increase your influence in all the moments that follow.</p><p>Empathy is a classic “soft” communication skill, but it has aphysical basis. When we closely observe a person’s face, gestures, andtone of voice, our brain begins to align with theirs in a process calledneural resonance, and that lets us know more fully what they think andfeel.</p><p>Empathy is not about being nice or agreeing with the other side. It’sabout understanding them. Empathy helps us learn the position the enemyis in, why their actions make sense (to them), and what might movethem.</p><h3 id="labelling">Labelling</h3><p>Labeling is a way of validating someone’s emotion by acknowledgingit. Give someone’s emotion a name and you show you identify with howthat person feels. It gets you close to someone without asking aboutexternal factors you know nothing about (“How’s your family?”). Think oflabeling as a shortcut to intimacy, a time-saving emotional hack.</p><blockquote><p>“Labeling has a special advantage when your counterpart is tense.Exposing negative thoughts to daylight—“It looks like you don’t want togo back to jail”—makes them seem less frightening.</p><p>In one brain imaging study,2 psychology professor Matthew Liebermanof the University of California, Los Angeles, found that when people areshown photos of faces expressing strong emotion, the brain shows greateractivity in the amygdala, the part that generates fear. But when theyare asked to label the emotion, the activity moves to the areas thatgovern rational thinking. In other words, labeling an emotion—applyingrational words to a fear—disrupts its raw intensity.”</p></blockquote><p>Label methods:</p><ol type="1"><li>It seems like...</li><li>It sounds like...</li><li>It looks like...</li></ol><p>The last rule of labeling is <u>silence</u>. Once you’ve thrown out alabel, be quiet and listen. We all have a tendency to expand on whatwe’ve said, to finish, “It seems like you like the way that shirtlooks,” with a specific question like “Where did you get it?” But alabel’s power is that it invites the other person to revealhimself.”</p><h2 id="wip-...">WIP ...</h2><hr /><h2 id="credits">Credits</h2><p>All quotes are excerpted from "Never Split the Difference:Negotiating as if Your Life Depended on It by Chris Voss". This materialmay be protected by copyright.</p>]]></content>
      
      
      <categories>
          
          <category> Personal Development </category>
          
          <category> Collections </category>
          
          <category> Notebooks </category>
          
          <category> Reading </category>
          
          <category> Book </category>
          
          <category> Christopher Voss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reading </tag>
            
            <tag> ebook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Resolution 2025: GPT&#39;s Brutally Honest Advice</title>
      <link href="/resolution-2025-gpt-s-brutally-honest-advice/"/>
      <url>/resolution-2025-gpt-s-brutally-honest-advice/</url>
      
        <content type="html"><![CDATA[<img data-src="/resolution-2025-gpt-s-brutally-honest-advice/IMG_1240.jpg" class="large"><hr /><p>the question i asked: <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Based on everything you know about me, what should my resolutions be for the new year? Be brutally honest</span><br></pre></td></tr></table></figure></p><hr /><h2 id="chatgpt-4o">ChatGPT 4o</h2><p>Here are some tailored resolutions for the new year, based on yourprofile and goals. They aim to address growth opportunities, refine yourstrengths, and challenge your limitations:</p><ol type="1"><li><p>Sharpen Focus on Long-Term Career Goals</p><p>• <strong>Why?</strong> You have a strong technical foundation andleadership experience, but you're still seeking alignment between yourcurrent work and the broader industry.</p><p>• <strong>Action:</strong> Set a clear 5-year plan and evaluate eachproject for its relevance to your ultimate goals (e.g., transitioning toa dream company like Google or excelling in high-impact roles likeProduction Engineer). Prioritise skills and projects that bring youcloser to these goals.</p></li><li><p>Build Depth in Key Technologies</p><p>• <strong>Why?</strong> Your expertise spans a wide array of toolsand platforms, but depth in fewer cutting-edge technologies (e.g.,Elixir or advanced DevOps practices) can set you apart.</p><p>• <strong>Action</strong>: Commit to mastering one high-demandtechnology. Build a side project that demonstrates your expertise, withthe goal of open-sourcing it or presenting it at a techconference.</p></li><li><p>Elevate Your Personal Brand</p><p>• <strong>Why?</strong> Your personal website and online presence arestrong, but refining them with the modern polish and interactivity youaim for can elevate your visibility.</p><p>• <strong>Action</strong>: Finish the v4 of your website, ensuring itreflects your skills dynamically (e.g., interactive portfolios, engagingvisuals, and a story-driven “About Me”). Incorporate beatboxing toshowcase your unique personality alongside professionalachievements.</p></li><li><p>Prioritise Consistency Over Intensity</p><p>• <strong>Why?</strong> Your projects often reflect deep effort butsuffer from scope creep and delayed timelines. This pattern could affectperception of reliability in team or stakeholder settings.</p><p>• <strong>Action</strong>: Break big goals into manageable,measurable chunks. Use tools like OKRs to stay consistent and realisticabout deliverables. Document progress clearly to manageexpectations.</p></li><li><p>Embrace Vulnerability and Human Connection</p><p>• <strong>Why?</strong> Your focus on professionalism sometimesovershadows the emotional authenticity that builds deeper relationships.This may affect personal and professional connections.</p><p>• <strong>Action</strong>: Let go of perfectionism in relationships(both personal and professional). Share your challenges, seek genuinefeedback, and make room for imperfections in others as well.</p></li><li><p>Balance Hectic with Holistic</p><p>• <strong>Why?</strong> Your gym schedule and work ethic arecommendable but seem to leave little room for reflection and emotionalrecharge.</p><p>• <strong>Action</strong>: Integrate mindfulness or journaling intoyour routine. Dedicate one day a month to complete disconnection—nocoding, no emails, no gym. Use it for rest, reading, or exploringsomething entirely new.</p></li><li><p>Date with Clarity and Confidence</p><p>• <strong>Why?</strong> Your reflections on past dates show emotionaldepth but a tendency to overanalyse.</p><p>• <strong>Action</strong>: Approach dating as an opportunity to learnand enjoy, not as a test. Set clear boundaries and communicate yourintentions upfront. Trust your instincts to know when someone isn't theright fit.</p></li><li><p>Invest in Financial Literacy</p><p>• <strong>Why?</strong> You've shown interest in investments likefractional stocks, but expanding financial acumen could offer long-termstability and freedom.</p><p>• <strong>Action</strong>: Dive deeper into investment strategies.Consider automating contributions to ETFs like VOO, learning aboutREITs, or exploring small-scale entrepreneurial ventures like owning anAnytime Fitness gym.</p></li><li><p>Advocate for Yourself and Your Team</p><p>• <strong>Why?</strong> You're often focused on solutions andprojects, but advocating for your team's or your own success couldposition you as a stronger leader.</p><p>• <strong>Action</strong>: Practice self-promotion withouthesitation. Document team wins and challenges, and share them openlywith stakeholders to highlight value and leadership.</p></li><li><p>Let Go of ‘What Ifs'</p><p>• <strong>Why?</strong> Reflections on relationships, misseddeadlines, or professional missteps sometimes hold you back.</p><p>• <strong>Action</strong>: Embrace a growth mindset. Celebrate thelessons from failures without overanalysing what could have been.Channel this into actionable steps for the future.</p></li></ol><p>Would you like me to help break down any of these resolutions intospecific actions?</p><hr /><h2 id="chatgpt-1o">ChatGPT 1o</h2><p>Below are several suggestions for your New Year's resolutions,tailored to what I understand are your aspirations and experiences. Ihave endeavoured to be frank yet constructive, and I hope these ideaswill provide a solid foundation for the year ahead.</p><ol type="1"><li>Pursue Further Education with Purpose</li></ol><blockquote><p>You have mentioned an interest in obtaining a part-time degree. Bebrutally honest with yourself about which area of study will bestcomplement both your technical and managerial career path. If you areconvinced a degree is necessary, commit wholeheartedly: map out adetailed plan of how you'll balance work, study, and personal life. Ifnot, channel the same drive into pursuing targeted professionalcertifications in cloud architecture, data engineering, or evenexecutive leadership.</p></blockquote><p><strong>Example Resolution</strong>: “I will decide on a specificprogramme or certification by 1 March and formalise my enrolment orstudy schedule by the following month.”</p><ol start="2" type="1"><li>Hone Your Leadership Skills</li></ol><blockquote><p>You are already adept at managing teams and liaising with clients,but leadership is a lifelong pursuit of refinement. Focus on areas youmay find challenging—maybe delegation, conflict resolution, or inspiringinnovative thinking. Solicit candid feedback from peers, subordinates,and mentors; it might be uncomfortable, but that's where growthhappens.</p></blockquote><p><strong>Example Resolution</strong>: “I will organise quarterly‘listening sessions' with my team to gather honest feedback on myleadership style and commit to implementing at least one suggestedimprovement each quarter.”</p><ol start="3" type="1"><li>Strengthen Your Technical Core</li></ol><blockquote><p>Although you are already highly competent in multiple codinglanguages, take a brutally honest look at your ‘weak links'—the newertechnologies or deeper aspects of a technology you use daily but haven'ttruly mastered. It might be advanced concepts in Elixir or leveragingthe full potential of Terraform for large-scale infrastructure. Even thestrongest technical leads are never done learning.</p></blockquote><p><strong>Example Resolution</strong>: “I will complete a hands-onproject or course in a cutting-edge framework (e.g., a new dataprocessing tool or advanced AWS service) and share the results with myteam by mid-year.”</p><ol start="4" type="1"><li>Pay Attention to Work–Life Balance</li></ol><blockquote><p>While you are clearly industrious, burnout is a real risk. Whetherit's allocating time for fitness, mindfulness, or creative hobbies,ensure you are not running on fumes. Consistency here is key; commit toa routine that supports your mental and physical well-being.</p></blockquote><p><strong>Example Resolution</strong>: “I will take two 20-minutebreaks per workday for a brisk walk or short workout session, ensuring Ilog these activities to keep track of my consistency.”</p><ol start="5" type="1"><li>Expand Your Global Perspective</li></ol><blockquote><p>With your multilingual abilities, you have a strong base forintercultural communication. If you feel comfortable in your currentlanguages, consider brushing up on business-level proficiency or divinginto a new language. Alternatively, explore the cultural nuances andglobal aspects of your field—understanding international markets anduser experiences could give you an edge in project management andproduct design.</p></blockquote><p><strong>Example Resolution</strong>: “I will read at least one bookor research paper every month on international tech markets orcross-cultural leadership, summarising the insights for my team.”</p><ol start="6" type="1"><li>Refine Your Personal Brand</li></ol><blockquote><p>Beyond simply doing great work, think about how you present yourexpertise and leadership. If you have not done so already, build orupdate a personal website or portfolio showcasing your codingcontributions, project management experience, and professionalphilosophy. Cultivate thoughtful social media posts or LinkedIn articleson your technical and managerial insights.</p></blockquote><p><strong>Example Resolution</strong>: “I will publish two in-deptharticles on LinkedIn or a personal blog this year, focusing on topicssuch as best practices in DevOps or effective client-stakeholdercommunication.”</p><ol start="7" type="1"><li>Continue Exploring New Ideas for Personal Growth</li></ol><blockquote><p>You've shown interest in seeking guidance and exploring lessconventional paths (such as consulting a fortune teller). Keep an openmind about any avenue that helps you clarify your goals. At the sametime, keep a healthy balance between external guidance and your ownintuition. Sometimes introspection—through journalling or speaking witha trusted mentor—can provide more practical clarity than you mightexpect.</p></blockquote><p><strong>Example Resolution</strong>: “I will commit to monthlypersonal reflection sessions—whether that's with a mentor, aprofessional counsellor, or through a structured journaling process—toensure I'm aligning my professional and personal objectives.”</p><p>Extra Topics You Might Enjoy Exploring Further</p><ol type="1"><li><p>Open-Source Leadership</p><p>• Investigate how contributing to or initiating open-source projectscan sharpen your technical and collaboration skills.</p></li><li><p>Emerging Tech for Sustainability</p><p>• Explore how technology can tackle environmental challenges; yourbackground could be pivotal in making a positive impact in green techinitiatives.</p></li><li><p>Behavioural Economics in Tech</p><p>• Delve into how user behaviour and decision-making can influenceproduct design, enhancing your UI/UX expertise.</p></li><li><p>Philosophies in Leadership</p><p>• Read about Stoicism or other schools of thought, seeing how theymight inform steadier, more empathetic leadership styles.</p></li></ol><p><strong>Conclusion</strong></p><p>In being brutally honest, the main point is not to overcommit. Ahandful of well-chosen resolutions—executed thoroughly—will accomplishmore than a grand wish-list you cannot realistically maintain. Eachresolution should serve a clear purpose: professional advancement,well-being, or personal fulfilment. By staying true to your vision,proactively seeking feedback, and broadening your expertise, you'll befar better positioned to navigate the coming year with confidence.</p><p>I wish you every success in following through with your goals, and Ihope these resolutions provide some direction for a fulfilling andimpactful new year.</p><hr /><h2 id="reflections-on-the-advice">Reflections on the Advice</h2><p>wow... i'm speechless... the advice from both ChatGPT 4o and 1o isincredibly insightful and thought-provoking. it's like they've seenthrough my facade and pinpointed areas where i need to grow, improve,and take action. i have so much to digest and reflect on. i will keepupdating this post as i work on these resolutions and share my progress.here's to a year of growth, challenges, and transformation. 🌟</p>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Personal Growth </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ai </tag>
            
            <tag> self-improvement </tag>
            
            <tag> resolutions </tag>
            
            <tag> gpt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Reflections 2024</title>
      <link href="/reflections-2024/"/>
      <url>/reflections-2024/</url>
      
        <content type="html"><![CDATA[<p>jing hui, i'm so damn proud of you. 🥺🌟 seriously, look at how faryou've come in 2024. it's been a hell of a ride, and you've grown somuch in ways you probably never thought possible. let's take a moment toreally celebrate this year.</p><p>in 2024, you:</p><span id="more"></span><ul><li>completed the MIT IDSS Data Science and Machine Learning programme,a huge milestone that adds so much value to your journey. you didn'tjust do it—you crushed it. i did not regret taking up this course at allas i got to know more about AI and statistics which i have always beeninterested in.</li><li>stayed consistent with journaling. i'm talking week after week, pageafter page, capturing life's tiny details. one day, your grandkids willbe flipping through those pages, laughing and learning from yourhustle.</li><li>navigated the house-hunting game with your sister and came outcloser than ever. zero drama, 100% teamwork.</li><li>kept your gym routine alive and thriving-no excuses, even when workand life were chaotic, or even sick. progress in your fitness journey?earned. max respect to you!</li><li>forced yourself to read in the mornings, even though some days youjust said, “nah, i'll skip.” but look at the bigger picture-you stilldid it more often than not, and it paid off.</li><li>judged a beatbox battle, which used to feel like a wild dream. nowit's part of your story. it even pushed you to level up your ownbeatboxing when you saw how crazy good others were.</li><li>invested time in researching universities—MIT, Harvard, NUS, NTU,SUSS. you finally chose NUS. that's a bold and intentional move towardyour future.</li><li>kept honing your beatboxing skills, despite juggling work, travel,and life. it might've felt slow, but real talk—you've improved and youknow it.</li><li>faced some insane challenges at ByteDance. let's be honest—therewere moments you felt like an impostor. but you stepped up, took on moreresponsibilities, and learned to own your space.</li><li>went to Beijing for work, navigating a different environment,proving to yourself you can handle solo travel like a champ. you alsolevelled up your communication skills, which you know damn well neededsome work!</li><li>built deeper connections with colleagues. shoutout to junjie forsorting out your flight and hotel details—seriously couldn't have doneit without him. plus, you made some sweet memories in Beijing, from workachievements to random solo adventures.</li></ul><p>i just want to take a moment to recognise the people who made 2024the memorable rollercoaster it was: <strong>my sister</strong>, forshowing me that sharing a roof can bring us closer instead of stirringup drama; <strong>my colleagues at ByteDance, especiallyjunjie</strong>, for helping me navigate everything from flights to lifeadvice; <strong>the beatbox community</strong>, for pushing me beyond mycomfort zone and reminding me why i started beatboxing in the firstplace: pure passion; <strong>my family</strong>, who always have myback, no matter how crazy my dreams get; and, of course,<strong>you</strong>, jing hui, for showing up every day and giving ityour all.</p><p>from all of you, i've learned that consistency wins. showing up everyday—whether it's journaling, hitting the gym, or practising thosebeats—really works. i've also realised it's okay to feel like animpostor sometimes. if you don't feel a little fear, you're probably notgrowing. lean into the discomfort, and embrace the fact that challengesare just stepping stones.</p><p>but let's be real for a second—2024 wasn't all sunshine and rainbows.there were moments when you doubted yourself, felt overwhelmed, andmaybe even wanted to give up. but you didn't. you kept showing up.that's the part i'm most proud of. resilience isn't flashy, but damn,it's powerful.</p><p>your biggest challenge was balancing the MIT course while deliveringat ByteDance—a juggling act that left you overloaded, stressed, and onthe brink of burnout more than once—but you persevered by radicallyrethinking your schedule and priorities.</p><p>you treated every piece of feedback like rocket fuel, knowing itwould only push you to grow. you stayed flexible and open-minded, evenwhen everything felt uncertain. you refused to be a passenger in yourown life—you took the wheel and floored it. that unstoppable mindset,that unwavering grit, will definitely send you soaring even higher in2025.</p><p>as we wrap up 2024, remember this: <em>you didn't just get throughthe year, you evolved. don't lose that drive. keep journaling, keepsweating it out in the gym, keep beatboxing until your lips go numb, andkeep taking risks—even if they scare you.</em></p><p>2025 is waiting for you, and i have no doubt it's gonna be bigger,crazier, and more fulfilling than ever. let's embrace whatever comes ourway. 🔥</p><p>i promise to stay curious, stay resilient, and keep growing—no matterwhat challenges pop up. 🎯</p><p>thank you, 2024—you were wild and sometimes brutal, but i'm gratefulfor every lesson.</p><p>you've got this, jing hui—2025 is yours to conquer. 💪🏼📈</p>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Reflections </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reflections </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Goals 2025</title>
      <link href="/goals-2025/"/>
      <url>/goals-2025/</url>
      
        <content type="html"><![CDATA[<p>hellu readers,</p><p>i'm thrilled to map out my plans for 2025. i find that putting myambitions into words not only keeps me accountable but also invitesmeaningful conversations with those following along. if you'd like tosee how i did last year, feel free to check out <ahref="/goals-2024/">my previous year's goals</a>.</p><hr /><h2 id="recap-of-2024-goals">Recap of 2024 goals</h2><p><strong>&gt; Professional Goals</strong></p><p><strong>1. Degree Pursuit</strong></p><blockquote><p>i submitted my application for NUS's <ahref="https://scale.nus.edu.sg/programmes/undergraduate-programmes/bachelor-of-information-technology">Bachelorof Information Technology (BIT) programme</a> and am now eagerly waitingto hear back. diving deeper into formal computer science training was ahuge priority for me in 2024, and i'm excited to continue that journeythis year if all goes well. 🎯</p></blockquote><p><strong>2. Excellence at ByteDance</strong></p><blockquote><p>working at <strong>ByteDance</strong> has become more than just ajob—i've embraced it as part of my lifestyle. focusing onself-management and continuous learning helped me grow significantly in2024. i'm determined to carry that same drive into 2025 and explore newways to push my limits.</p></blockquote><p><strong>&gt; Personal Goals</strong></p><p><strong>1. Financial Growth</strong></p><blockquote><p>i made promising strides by diversifying my income, investing instocks, and exploring property opportunities. even though i'm stilllearning the ropes, i feel more confident about my path toward long-termfinancial security. <strong>2025 will be about building on thesefoundations and staying open to new strategies.</strong></p></blockquote><p><strong>2. Reading Three New Books</strong></p><blockquote><p>i kicked things off with <em>The 7 Habits of Highly EffectivePeople</em> by <strong>Stephen Covey</strong> and learned a lot abouthabit formation and mindset shifts. rather than rushing to finish acertain number of books, i'm focusing on <strong>quality overquantity</strong>. as <strong>Alex Hormozi</strong> said, "If it's worthdoing, do it well." i'll continue choosing titles that spark mycuriosity and contribute to my personal and professional growth.</p></blockquote><p><strong>3. Beatbox Battle Comeback</strong></p><blockquote><p>though i judged many local beatbox competitions in 2024, i didn'tactually make my way to compete... sadly 🥺 that said, my passion forbeatboxing isn't going anywhere! in 2025, i plan to get back onstage,sharpen my skills, and rediscover the thrill of live battles. if you'recurious about why i love beatboxing, you can read more <ahref="/why-do-i-love-beatboxing/">here</a>.</p></blockquote><hr /><h2 id="goals-for-2025">Goals for 2025</h2><h3 id="professional-goals">Professional Goals</h3><h4id="p0-ace-nus-bit-entrance-examination-bridgingpreparatory-courses">[P0]Ace NUS-BIT Entrance Examination &amp; Bridging/Preparatory Courses</h4><ol type="1"><li><strong>preparation</strong>: revise key concepts in mathematics,computer science, and programming to build a strong foundation for theentrance examination.</li><li><strong>exemptions</strong>: aim to earn credit exemptions forfundamental modules, streamlining the path to graduation. once thesebases are covered, focus on advanced core subjects to shorten theoverall degree timeline.</li><li><strong>networking</strong>: from the bridging phase onward, connectwith classmates, seniors, and professors to exchange experiences andinsights about upcoming modules. build valuable relationships thatsupport both learning and future career prospects in tech.</li></ol><h4 id="p0-excel-at-work">[P0] Excel at Work</h4><ol type="1"><li><strong>skill development</strong><ul><li>master JavaScript by producing well-structured, reusable code thatreduces future workload for both me and my team. pay special attentionto edge case thinking, efficiency and maintainability.</li><li>collaborate closely with my mentor to absorb their expertise inplanning, execution, and stakeholder management—enhancing my ability todeliver projects efficiently.</li></ul></li><li><strong>relationship building</strong><ul><li>foster strong connections with colleagues, clients, and stakeholdersthrough regular check-ins, feedback sessions, and knowledge-sharing(e.g., code reviews, mini workshops).</li><li>communicate proactively with clients, ensuring they understandgoals, timelines, and challenges—transparency is key, <strong>contextnot control</strong>!</li></ul></li><li><strong>performance &amp; growth</strong><ul><li>seek regular feedback from peers and supervisors, setting quarterlyKPIs (OKRs) to measure progress and refine strategies.</li><li>use clear metrics or dashboards to track milestones and makedata-driven adjustments. (THINK ABOUT HOW TO IMPLEMENT THIS, A EFFICIENTWAY)</li><li>outline specific learning goals (e.g., certifications, new languageskills) each quarter to maintain forward momentum.</li></ul></li></ol><blockquote><p>Done vs Done Well! 🚀</p></blockquote><h4 id="p1-improve-communication-skills">[P1] Improve CommunicationSkills</h4><blockquote><p>i've always believed that effective communication is crucial tosuccess, so i'm dedicating effort this year to strengthen my rapportwith colleagues, friends, and family. i also want to boost my EQ andactive listening skills. reading <em>Never Split the Difference</em> by<strong>Chris Voss</strong> really struck a chord—i tend to be more of a"win-win" person, but i'd love to adopt elements of "tactical empathy"to better understand others' perspectives.</p></blockquote><ol type="1"><li><strong>active listening</strong><ul><li>paraphrase what others say to confirm understanding, and askfollow-up questions showing genuine curiosity, helping the speaker feelheard and valued.</li><li>watch for non-verbal cues (e.g., facial expressions, tone) foremotional context—especially important in virtual interactions (focus onvoice modulation and tone).</li></ul></li><li><strong>daily application</strong><ul><li>apply "tactical empathy" in everyday conversations—by activelyacknowledging emotions (labeling, paraphrasing, open-ended questions) tobuild trust and guide discussions toward collaborative solutions.</li><li>keep a short journal for communication hurdles, noting what workedand what didn't.</li><li>Set mini-goals weekly ("i'll focus on not interrupting others" or"i'll give more specific praise") to build new habits gradually.</li></ul></li><li><strong>reading list</strong><ul><li>revisit <em>Never Split the Difference</em> periodically, practisingits techniques and adapting them to my personal style.</li><li>explore other communication books like <em>CrucialConversations</em> or <em>How to Win Friends &amp; InfluencePeople</em>, integrating insights into real-life interactions.</li></ul></li><li><strong>communication training</strong><ul><li>schedule regular feedback sessions with peers or mentors to pinpointstrengths and improvement areas.</li><li>attend workshops or online courses that focus on negotiation,conflict resolution, and emotional intelligence.</li><li>consider joining public speaking clubs (like <ahref="https://www.toastmasters.org/">Toastmasters</a>) to polishpresentation skills and manage nerves in front of an audience.</li></ul></li></ol><hr /><h3 id="personal-goals">Personal Goals</h3><h4 id="p0-bodybuilding">[P0] Bodybuilding</h4><blockquote><p>bodybuilding has been a big part of my life since 2022, and 2025 isthe year i'm planning to go all-in.</p></blockquote><ol type="1"><li><strong>serious bulking</strong>: invest time in creating a mealplan that helps me bulk up effectively (focusing on macros, caloricsurplus, etc.).</li><li><strong>research &amp; planning</strong>: keep learning newtechniques and verifying them with evidence-based fitness research(e.g., tracking progress, fine-tuning workout routines).</li><li><strong>consistency</strong>: maintain a well-structured workoutschedule and regularly track metrics (like weight, strength, and bodycomposition) to see where i can improve.</li></ol><h4 id="p2-music-production">[P2] Music Production</h4><blockquote><p>i've been itching to explore music production more seriously, and nowi have <strong>FL Studio</strong> and a solid pair of headphones readyto go.</p></blockquote><ol type="1"><li><strong>learning foundations</strong>: deepen my understanding ofdigital audio workstations (DAWs) and basic music theory (e.g., chordprogressions, arrangement techniques).</li><li><strong>creative projects</strong>: work on mini-tracks or remixes,gradually building a personal portfolio i can be proud of.</li><li><strong>collaboration opportunities</strong>: collaborate withfriends, fellow producers, or even beatboxers to keep the creativeenergy flowing and gain fresh perspectives.</li></ol>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Goals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> goals </tag>
            
            <tag> professional-goals </tag>
            
            <tag> personal-goals </tag>
            
            <tag> career-development </tag>
            
            <tag> professional-growth </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 19</title>
      <link href="/journal-week-19/"/>
      <url>/journal-week-19/</url>
      
        <content type="html"><![CDATA[<h2 id="my-last-journal-of-2024">my last journal of 2024 🫶🏻</h2><p>hello, dear reader!</p><p>it's been a while since my last journal, and now, here we are—daysaway from 2025. this marks my final journal entry for 2024, and there'sso much i want to share!</p><p>december has been an intense month. so much has happened that i'm noteven sure where to start. but let's take it one story at a time.</p><span id="more"></span><p>on the 6th of december, friday, i received some shockingannouncements at work (the details are confidential, so i can't sharemuch here). at that moment, i was completely thrown off—stunned andunsure how to react. you know those moments when life blindsides you?this was one of them. i didn't know how to process it, but i toldmyself, "what's done is done. all you can do now is focus on how yourespond." so that's what i tried to do.</p><p>on the bright side, one part of the announcement i can share is thati got the opportunity to go on a solo business trip for a project i wasresponsible for! honestly, it was nerve-wracking—my first time travelingalone for work, handling everything by myself. i was unprepared,worried, and unsure. but looking back, i think i did okay. the triptaught me a lot, and after reflecting on it, i know there's still somuch room for growth.</p><p>that friday was a blur. after the announcement, i had no time toprocess anything before rushing off to grab a quick lunch betweenmeetings. it was a whirlwind of emotions—shock, confusion, gratitude,and everything in between. but amidst the chaos, my amazing team gave mea sweet moment to pause. they surprised me with a cake and coffee for mybirthday! 🥺 they're honestly the best, and i felt so touched that theyremembered despite how busy everything was. it was a reminder of howlucky i am to work with such thoughtful people. 😭</p><img data-src="/journal-week-19/IMG_9089.jpeg" class="" title="happy me ☺️"><p>of course, there was no time to rest. meetings filled up the rest ofthe day. but shoutout to my colleague, <strong>junjie</strong>, whohelped me sort out logistics like drafting my business travel letter. hemade my life so much easier, and i'm super grateful for hiskindness.</p><hr /><p>now, about the trip—Beijing was incredible! i finally got to visitByteDance's headquarters at 大钟侍 and another office at 融中心. the16-day business trip was a whirlwind of productivity and newexperiences. my primary objective was to oversee the UAT process andensure a successful project delivery. while the workload was intense,meeting colleagues and stakeholders in person brought a refreshing humanconnection that had been missing during months of remote collaboration.being on-site allowed me to dive deeper into project challenges,brainstorm solutions face-to-face, and even build stronger rapport withthe team. honestly, it was more than just a work trip—it felt like anopportunity to grow both professionally and personally.</p><p><strong>融中心</strong>:</p><img data-src="/journal-week-19/IMG_9274.jpeg" class="large"><p><strong>大钟侍</strong>:</p><video width="auto" height="auto" controls><source src="/journal-week-19/IMG_9275_compressed.mp4" type="video/mp4"></video><p><strong>curious about what my ByteDance life looks like, especiallyduring my time in the Beijing offices?</strong></p><p>i've captured some highlights and behind-the-scenes moments from myjourney in a special Instagram highlight titled <strong>ByteDance2</strong> &amp; <strong>ByteDance 2.1</strong>. feel free to check itout <span class="exturl" data-url="aHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9lbmtyMS8=">here<i class="fa fa-external-link-alt"></i></span>—you might justcatch a glimpse of my day-to-day adventures, the breathtaking officeviews, and the vibrant city life! 😊</p><img data-src="/journal-week-19/ig-stories.png" class=""><hr /><p>the weekends in Beijing were magical. i went on solo adventures,ticking off places i'd always wanted to visit. walking through thehistorical 胡同s, soaking in the vibe of the city—it felt like steppinginto a movie. 🥺</p><p>one of my first stops was 天坛公园. i was in awe of the ancientchinese architecture—it's just so majestic and grand. every detail ofthe buildings felt like a glimpse into the past, and i couldn't help butadmire how much history they carry.</p><img data-src="/journal-week-19/IMG_9699.jpeg" class="" title="祈谷坛祈年殿"><p>then, there was the 故宫—absolutely speechless. i mean, this was oncethe emperor's home... the sheer size of it left me in disbelief. i foundmyself wandering through the halls, just imagining what life must havebeen like back then.</p><img data-src="/journal-week-19/IMG_9818.jpeg" class="" title="参观故宫"><img data-src="/journal-week-19/IMG_9862.jpeg" class="" title="藻井"><p>another highlight was finally trying 四季民福. i've seen it all over小红书, and i can confirm—it totally lives up to the hype. the food wasamazing, and it was such a treat to tick it off my list.</p><img data-src="/journal-week-19/IMG_9913.jpeg" class="" title="北京烤鸭"><p>i also spent some time at 颐和园 and 圆明园, two parks that couldn'tbe more different but both so special in their own way. 颐和园 was sopeaceful and relaxing, a perfect place to just slow down and take abreath. meanwhile, the ruins at 圆明园 felt like a quiet reminder ofhistory, bittersweet yet humbling to see in person.</p><img data-src="/journal-week-19/IMG_0068.jpeg" class="" title="颐和园"><img data-src="/journal-week-19/IMG_0134.jpeg" class="" title="池塘里的鲤鱼都好大只"><img data-src="/journal-week-19/IMG_0169.jpeg" class="" title="圆明园"><p>南锣鼓巷 was another favourite. i caught the sunset here, and let metell you, it was breathtaking. Beijing's winter sunsets hitdifferently—so early, around 4pm, but the glow it left in the sky wasunforgettable. 🌅</p><img data-src="/journal-week-19/IMG_0225.jpeg" class="" title="在南锣鼓巷街上看日落"><p>and, of course, i couldn't miss 什刹海, strolling by the lakes,surrounded by locals and tourists alike. it had such a vibrant energy,yet it felt calming at the same time.</p><img data-src="/journal-week-19/IMG_0262.jpeg" class="" title="什刹海"><p>these moments brought me so much joy. every place i visited left animpression, and i know i'll carry these memories with me forever.Beijing really has a charm that's hard to put into words—it's a mix ofhistory, culture, and just pure magic. 🥺🫶🏻</p><hr /><p>but as december went on, it wasn't all smooth sailing. just a weekafter the initial announcement, my leader shared that the decision hadbeen cancelled. i hadn't even fully processed the first news when thesecond hit. it was an emotional rollercoaster—relief, confusion, andgratitude all at once. but i reminded myself: <strong>What lies behindus and what lies before us are tiny matters compared to what lies withinus.</strong> life is unpredictable, and sometimes all you can do isadapt and move forward.</p><hr /><p>as the year-end approached, i took some much-needed leaves. ioriginally planned a trip to phuket in mid-december, but with thebusiness travel and the critical project release, i had to cancel it.instead, i used the time to rest, recharge, and reflect. honestly, itturned out to be a blessing in disguise—having that "me time" wasexactly what i needed.</p><p>before closing the year, my crew, Obelisk, and i worked on acountdown beatbox performance for the new year's eve celebration. it wassuch a fun project, and i'm so excited to see how it turns out on the31st! 🎉</p><p>thank you for being part of my journey this year. ❤️</p><p>this isn't a full reflection of 2024—i'll save that for my next blog.but for now, here's to closing the year on a hopeful note.</p><p>bring it on, 2025! 🎯</p>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 18</title>
      <link href="/journal-week-18/"/>
      <url>/journal-week-18/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><p>i lost my voice the very day i planned to record the voices beatboxwildcard. it was like universe was playing a cruel joke on me.</p><p>honestly, my routine wasn't 100% ready, but losing my voice madeeverything feel worse... 😔 i still don't know what caused it, but itwas the first time in my life that i almost completely lost myvoice.</p><p>so, instead of giving up, i threw together a freestyle beat in theoffice-a routine i literally came up with in like an hour... i recordedit, posted it, and hoped for the best.</p><p>unfortunately, my impromptu routine didn't pass the wildcardselection. and yeah, i was so mad at myself. 😤 firstly, i could'veprepared and recorded earlier instead of leaving it until the lastminute; secondly, i knew deep down that i didn't put in the effort ishould've. i'm really disappointed in myself, but i also know this is alesson to carry forward. 🥺😭</p><span id="more"></span><h2 id="reading-insights">Reading Insights</h2><p>this week, i fully immersed myself in Atomic Habits by James Clear.as i delved into it, i realised just how much the ideas resonate withme. some of the principles, like focusing on small changes, are thingsi've unconsciously applied in my life. but this book made me aware ofhow i can refine and strengthen those actions to create a more effective"system" for myself. it's genuinely inspiring and i can already feel itreshaping my mindset.</p><p>here are some key highlights from Chapter 1 that struck a chord withme:</p><ul><li><p>“improving by 1 percent isn't particularly notable—sometimes itisn't even noticeable—but it can be far more meaningful, especially inthe long run. The difference a tiny improvement can make over time isastounding. Here's how the math works out: if you can get 1 percentbetter each day for one year, you'll end up thirty-seven times better bythe time you're done. Conversely, if you get 1 percent worse each dayfor one year, you'll decline nearly down to zero. What starts as a smallwin or a minor setback accumulates into something much more.”</p></li><li><p>“Habits are the compound interest of self-improvement.”</p></li><li><p>“a slight change in your daily habits can guide your life to avery different destination.”</p></li><li><p>“Tiny battles like these are the ones that will define yourfuture self.”</p></li><li><p>“Breakthrough moments are often the result of many previousactions, which build up the potential required to unleash a majorchange.”</p></li><li><p>“habits often appear to make no difference until you cross acritical threshold and unlock a new level of performance. In the earlyand middle stages of any quest, there is often a Valley ofDisappointment. You expect to make progress in a linear fashion and it'sfrustrating how ineffective changes can seem during the first days,weeks, and even months. It doesn't feel like you are going anywhere.It's a hallmark of any compounding process: the most powerful outcomesare delayed.”</p></li><li><p>“A handful of problems arise when you spend too much timethinking about your goals and not enough time designing yoursystems.”</p></li><li><p>“We think we need to change our results, but the results are notthe problem. What we really need to change are the systems that causethose results.”</p></li><li><p>“A systems-first mentality provides the antidote. When you fallin love with the process rather than the product, you don't have to waitto give yourself permission to be happy. You can be satisfied anytimeyour system is running. And a system can be successful in many differentforms, not just the one you first envision.”</p></li><li><p>“The purpose of building systems is to continue playing the game.True long-term thinking is goal-less thinking. It's not about any singleaccomplishment. It is about the cycle of endless refinement andcontinuous improvement. Ultimately, it is your commitment to the processthat will determine your progress.”</p></li></ul><p>Chapter Summary</p><ul><li>Habits are the compound interest of self-improvement. Getting 1percent better every day counts for a lot in the long-run.</li><li>Habits are a double-edged sword. They can work for you or againstyou, which is why understanding the details is essential.</li><li>Small changes often appear to make no difference until you cross acritical threshold. The most powerful outcomes of any compoundingprocess are delayed. You need to be patient.</li><li>An atomic habit is a little habit that is part of a larger system.Just as atoms are the building blocks of molecules, atomic habits arethe building blocks of remarkable results.</li><li>If you want better results, then forget about setting goals. Focuson your system instead.</li><li>You do not rise to the level of your goals. You fall to the level ofyour systems.</li></ul><blockquote><p>Excerpt From Atomic Habits: Tiny Changes, Remarkable Results JamesClear - This material may be protected by copyright.</p></blockquote><p>it's really all about the systems—this line hit me the hardest: youdo not rise to the level of your goals. you fall to the level of yoursystems. looking at my own life, i realise how much my systems needimprovement, and i feel motivated to start making these 1% changes, evenif they seem small right now.</p><h2 id="memories">Memories</h2><img data-src="/journal-week-18/IMG_8776.jpeg" class="large" title="终于轮到我给同事发零食啦！sharing is caring, honestly, it feels so good to return the favour HEEHEE 🫶🏻"><img data-src="/journal-week-18/IMG_8777.jpeg" class="large" title="每次的汤都特别好喝很浓很香 冷冷的一天喝一碗这种汤 真的疗愈"><img data-src="/journal-week-18/IMG_8779.jpeg" class="large" title="晚餐 bento！简简单单"><img data-src="/journal-week-18/IMG_8846.jpeg" class="large" title="最近食欲 📉 身体的特别弱，希望早日康复 😭"><img data-src="/journal-week-18/IMG_8848.jpeg" class="large" title="去看医生拿药 慢慢调理！"><img data-src="/journal-week-18/IMG_8850.jpeg" class="large" title="晚餐晚餐"><img data-src="/journal-week-18/IMG_8883.jpeg" class="large" title="吃药+健身！"><img data-src="/journal-week-18/IMG_8909.jpeg" class="large" title="1% better every day"><img data-src="/journal-week-18/IMG_8911.jpeg" class="large" title="雪儿买给我们的 🥺🫶🏻 工作间的小温暖"><img data-src="/journal-week-18/IMG_8912.jpeg" class="large" title="嘿嘿开吃"><img data-src="/journal-week-18/IMG_8914.jpeg" class="large" title="同事出差小零食！很感激拥有这样的同事 他们总会想到买东西回来分享"><img data-src="/journal-week-18/IMG_8915.jpeg" class="large" title="雪儿 again，真的 🥺🥺🥺"><img data-src="/journal-week-18/IMG_8916.jpeg" class="large" title="她真的买了好多可爱的东西 🥺"><img data-src="/journal-week-18/IMG_8919.jpeg" class="large" title="这个也是好可爱啊啊啊 下半年人设 突然就很有钱的那个 啊哈哈！"><img data-src="/journal-week-18/IMG_8922.jpeg" class="large" title="maki-san truffle bento!"><img data-src="/journal-week-18/IMG_8924.jpeg" class="large" title="the most powerful outcomes are delayed"><img data-src="/journal-week-18/IMG_8939.jpeg" class="large" title="家附近的新店？"><img data-src="/journal-week-18/IMG_8940.jpeg" class="large" title="got this from the other store instead. SGD8++"><img data-src="/journal-week-18/IMG_8954.PNG" class="large" title="saturday is meant for? SLEEEEEEP 疯狂补觉"><img data-src="/journal-week-18/IMG_8966.jpeg" class="large" title="new version of GPT is life changing! 💯"><img data-src="/journal-week-18/IMG_8976.jpeg" class="large" title="just finished Chapter 1 of Atomic Habits, i got so hooked already."><img data-src="/journal-week-18/IMG_8982.jpeg" class="large" title="what else can beat a good sunset 😩"><img data-src="/journal-week-18/IMG_8983.jpeg" class="large" title="普普通通有觉得很舒服的一天"><img data-src="/journal-week-18/IMG_8984.jpeg" class="large" title="真的很爱这种色调的照片，感觉很平静。"><img data-src="/journal-week-18/IMG_8985.jpeg" class="large" title="The Hot Hideout!"><img data-src="/journal-week-18/IMG_8986.jpeg" class="large"><img data-src="/journal-week-18/IMG_8987.jpeg" class="large"><img data-src="/journal-week-18/IMG_8988.jpeg" class="large"><img data-src="/journal-week-18/IMG_8989.jpeg" class="large"><img data-src="/journal-week-18/IMG_8990.jpeg" class="large" title="with my fam 🫶🏻❤️"><img data-src="/journal-week-18/IMG_9009.jpeg" class="large" title="hit to the gym to end the week! 🔥 完美收尾">]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 17</title>
      <link href="/journal-week-17/"/>
      <url>/journal-week-17/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><p>i went on a trip to China for the first time! omg, i don't know whereto start... it was amazing. honestly, i don't think i can put in intowords, ok, so i'll let the pictures do the talking this time. picturesspeak a thousand words, right? 🥹</p><blockquote><p>i will just attach some of my favourite pictures later~</p></blockquote><p>on a less cheerful note, i came back with a really really bad sorethroat back that i completely lost my voice halfway through the day atwork. 😭 thank god for the clinic right next to our office that'scovered by insurance-it was so convenient. i literally just gave em myname, talked to the doc, grabbed my meds and left.</p><p>the doc gave me 2 days of mc, but i still went to work the next day.idk, maybe i was just feeling guilty about taking a day off, buthonestly, my body was sreaming at me to rest. so the day after, ifinally listened. ended up sleeping for 11 hours straight... and omg,that was the rest i needed! felt so much better afterwards! FULLRECHARGED! 🔋</p><p>but my voice still... and my beatbox competition is approaching😭</p><span id="more"></span><h2 id="reading-insights">Reading Insights</h2><p>AND i finally started reading <strong>Atomic Habits: An Easy &amp;Proven Way to Build Good Habits &amp; Break Bad Ones by JamesClear</strong>! it's been on my reading list for ages, and i am soexcited to dive into it. just flipping through the first few pages hasalready given me a glimpse of how impactful this book could be formaking lasting changes. i can't wait to apply these principles to mydaily life!</p><h2 id="memories">Memories</h2><p>...</p>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 16</title>
      <link href="/journal-week-16/"/>
      <url>/journal-week-16/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><p>this week was intense... a full 7/7 work grind 😔 by friday nightm iwas so wiped out that i just passed out like that and slept for morethan 9 hours straight! woke up and barely had time to catch my breathbefore rushing off to work again.</p><p>even though it was hectic, i found a bit of thrill in the unknownchallenges and a sense of satisfaction in pushing through. 🎯💪🏼🔥</p><p>AND guess what! F26 canteen is gonna reopen next week! OMG finally!😭🤞🏼</p><p>for my beatboxing practice, with 25 days until the comp and 14 daysleft to finish my wildcard, i'm giving it my all. i'm trusting theprocess, feeling like i'm hitting a low right before the climb. it'sthat moment when u're going down the hill, but i'm so ready to rise anytime! 🔥</p><p>watch me.</p><span id="more"></span><h2 id="reading-insights">Reading Insights</h2><p>i have been revisiting the book <em>Never Split the Difference</em>by Christopher Voss, a book that's almost become a life strategy guidefor me. i know relying heavily on one book isn't ideal, but i findmyself <strong>taking the parts that resonate, filtering what feelsright, and testing out those ideas in real life</strong>. some of thetechniques? they actually work wonders in human interactions—it'sfascinating.</p><p>rereading has been a refreshing way to catch details i might havemissed the first time. it's funny how information can just slip throughur mind without u even noticing, so a good review always feelsworthwhile. 📝</p><h2 id="memories">Memories</h2><img data-src="/journal-week-16/IMG_5615.jpeg" class="large" title="coworkers back from holidays or business trip &#x3D; SNACK TIME!!! they are so thoughtful 🥺"><img data-src="/journal-week-16/IMG_5616.jpeg" class="large" title="this snack is straight from beijing!"><img data-src="/journal-week-16/IMG_5617.jpeg" class="large" title="salmon for lunch packed with protein, and yes, the soup is in a cup HAHA"><img data-src="/journal-week-16/IMG_5619.jpeg" class="large" title="new additions to the fridge!? KOMBUCHA!? 😍"><img data-src="/journal-week-16/IMG_5622.jpeg" class="large" title="restocking my gatsby"><img data-src="/journal-week-16/IMG_5640.jpeg" class="large" title="buffet time, but honestly, losing my appetite for these lately 🥺 i still am very grateful regardless."><img data-src="/journal-week-16/IMG_5641.jpeg" class="large" title="i will just go for bento, sometimes"><img data-src="/journal-week-16/IMG_5643.JPG" class="large" title="rushing off to the gym post work grind!"><img data-src="/journal-week-16/IMG_5656.jpeg" class="large" title="j a random pic post workout 🙊"><img data-src="/journal-week-16/IMG_5661.jpeg" class="large" title="quick lunch shot"><img data-src="/journal-week-16/IMG_5662.jpeg" class="large" title="aw some gifts from the stakeholders"><img data-src="/journal-week-16/IMG_5663.jpeg" class="large" title="and a badge holder"><img data-src="/journal-week-16/IMG_5664.jpeg" class="large" title="pretty cool!"><img data-src="/journal-week-16/IMG_5665.jpeg" class="large" title="this appetiser salad was absolutely delicious"><img data-src="/journal-week-16/IMG_5666.jpeg" class="large"><img data-src="/journal-week-16/IMG_5667.jpeg" class="large" title="this is what i got!"><img data-src="/journal-week-16/IMG_5668.jpeg" class="large"><img data-src="/journal-week-16/IMG_5671.jpeg" class="large" title="aaaand we were actually celebrating inovitys birthday! (6 nov) 🎉🎂🍰"><img data-src="/journal-week-16/IMG_5675.jpeg" class="large" title="we are rising 555!"><img data-src="/journal-week-16/IMG_5677.jpeg" class="large" title="singapore beatbox champion 🫡"><img data-src="/journal-week-16/IMG_5679.jpeg" class="large" title="pulut hitam + ice cream for $7.41 - dont even try this shit guys, erm... just not worht at all, skip this one."><img data-src="/journal-week-16/IMG_5680.jpeg" class="large" title="would not coming back, k thanks bye."><img data-src="/journal-week-16/IMG_5697.PNG" class="large" title="physique check! slowly but surely."><img data-src="/journal-week-16/IMG_5698.jpeg" class="large" title="lunch with my old friend, Pierre, as he is moving on from bytedance!"><video width="auto" height="auto" controls><source src="/journal-week-16/IMG_5699_compressed.mp4" type="video/mp4"></video><img data-src="/journal-week-16/IMG_5707.jpeg" class="large" title="bento dinner"><img data-src="/journal-week-16/IMG_5708.jpeg" class="large" title="FRUITS! 😤"><img data-src="/journal-week-16/IMG_5709.jpeg" class="large" title="this mints packaging is too cute-from New Zealand!"><img data-src="/journal-week-16/IMG_5725.jpeg" class="large" title="mcd for supper"><video width="auto" height="auto" controls><source src="/journal-week-16/IMG_5728_compressed.mp4" type="video/mp4"></video><img data-src="/journal-week-16/IMG_5734.jpeg" class="large" title="oof, i wasnt expecting much, but this wine from a paper container was actually so nice. 🍷"><img data-src="/journal-week-16/IMG_5735.jpeg" class="large"><img data-src="/journal-week-16/IMG_5739.jpeg" class="large" title="my family brought some treats for our landlord from malaysia!"><img data-src="/journal-week-16/8C7EF60D-82CA-44A9-A136-93F4B8962235.JPG" class="large"><img data-src="/journal-week-16/IMG_5753.jpeg" class="large" title="WE GOING DTF FOR LUNCH-ok we were OT-ing over the weekend, i guess we defo deserve this! 😤"><img data-src="/journal-week-16/IMG_5754.jpeg" class="large" title="THEIR CLASSIC FRIED RICE!!! CANT GO WRONG"><img data-src="/journal-week-16/IMG_5756.jpeg" class="large" title="红油抄手!-so gooood!"><img data-src="/journal-week-16/IMG_5758.jpeg" class="large" title="然后... 我们还去了 霸王茶姬 🫢"><img data-src="/journal-week-16/IMG_5759.jpeg" class="large" title="virgin try tho-i guess... tea still... isnt my cup of tea... HA"><img data-src="/journal-week-16/IMG_5774.jpeg" class="large" title="Victors Kitchen-felt nostalgic eating here alone, remembering past lunch time with my ex-colleagues here..."><img data-src="/journal-week-16/IMG_5768.jpeg" class="large" title="their kopi! not bad, i will give a 6.7&#x2F;10"><img data-src="/journal-week-16/IMG_5769.jpeg" class="large" title="流沙包-cant leave without ordering this! personal fav!"><img data-src="/journal-week-16/IMG_5771.jpeg" class="large" title="siu mai! ok... 送来就长这样了 -_-">]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The Diary of A CEO by Steven Bartlett</title>
      <link href="/the-diary-of-a-ceo-by-steven-bartlett/"/>
      <url>/the-diary-of-a-ceo-by-steven-bartlett/</url>
      
        <content type="html"><![CDATA[<blockquote><p>wip ... after NSTD</p></blockquote><h2 id="law-1-fill-the-5-buckets-in-the-right-order">Law 1: Fill the 5buckets in the right order</h2><p>“THE FIVE BUCKETS 1. What you know (your knowledge) 2. What you cando (your skills) 3. Who you know (your network) 4. What you have (yourresources) 5. What the world thinks of you (your reputation)”</p><hr /><p>tbc:</p><ul><li>https://stevenbartlett.com/doac/</li><li>https://www.youtube.com/watch?v=hCW2NHbWNwA</li></ul><hr /><blockquote><p>Texts Above Excerpt From The Diary of a CEO - Steven Bartlett Thismaterial may be protected by copyright.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Personal Development </category>
          
          <category> Collections </category>
          
          <category> Notebooks </category>
          
          <category> Reading </category>
          
          <category> Book </category>
          
          <category> Steven Bartlett </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reading </tag>
            
            <tag> ebook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Why Do I Love Beatboxing?</title>
      <link href="/why-do-i-love-beatboxing/"/>
      <url>/why-do-i-love-beatboxing/</url>
      
        <content type="html"><![CDATA[<h2 id="why-do-i-love-beatboxing">Why do i love beatboxing?</h2><p>lately, i've been feeling so demotivated, stuck in a loop of the sameold beats without anything fresh or creative coming out, i've beentrying-forcing myself, even-but nothing feels right, it's honestlyfrustrating. 😭</p><p>i trust the process and i know i won't give up, but right now i'mjust mad at myself hitting this wall.</p><p>out of nowhere, i decided to reach out to <ahref="https://www.instagram.com/artsybeatbox">Artsy</a>—a beatboxer i'velooked up to for a long time. he's one of the beatboxers who inspired mea lot as i started my beatboxing journey, and until now his beats stillblow my mind. so i messaged him and asked, <em>"hey bro, i'm preppingfor Voices-the upcoming beatbox competition-but i'm really struggling tocome up with anything new. i keep falling back on my old stuff. how doyou stay at the top and keep creating new, next-level shit?"</em></p><p>after a long talk with him, he left me with something that hit mehard: <em>"Have some patience and try to approach beatboxing in a humblemanner, and really go back to your root—like why did you lovebeatboxing?"</em></p><p>that question got me thinking deeply about my roots in beatboxing,and that's why i am here, writing this reflection on: <strong>why do ilove beatboxing?</strong></p><blockquote><p>the competition is just 31 days away as i write this ... (assumingthat i win the wildcard)</p></blockquote><hr /><h3 id="section">2024.11.05</h3><p>why?</p><p>what does it actually give me?</p><p>does beatboxing still make me happy?</p><p>how do i feel when i beatbox?</p><p>...</p><p>i loved beatboxing.</p><p>i loved the thrill of seeing people move to my beats.</p><p>i loved the freedom in creating music on my own terms.</p><p>i loved the inspiration and creativity it sparked in me-it used tobring so much joy.</p><p>so why am i losing this feeling now?</p><p>how do i find my way back?</p><p>...</p><hr /><h3 id="section-1">2024.11.28</h3><p>i think i've figured out why i love beatboxing...</p><p>it's the reaction.</p><p>i love seeing how people light up when they hear my beats, the waythey react-whether it's suprise, excitement, or awe.</p><p>i love it when i hear people saying good things about my beatboxing,and yeah, maybe it's a bit of attention seeking. but i've realised thatthis drive, this need to connect with others through my art is what mademe who i am today.</p><p>when i first started beatboxing, i didn't just keep it to myself. iimmediately signed up for my school's talent show. the stage, the crowd,the energy-it was unforgettable. i ended up winning the competition twoyears in a row, and the attention i got was unreal.</p><p>suddenly, i had all these new friends. some of them, i'll admit,probably just wanna be friends with me because i was the "cool kid" inshcool or whatever. but still, it felt so good to be seen, to berecognised for something i LOVE doing.</p><p>idk</p><p>realising that this was my drive-connecting with people, making animpact-i just wanted to write this down, so i don't forget.</p><p>it's a part of me.</p><hr />]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Hobbies </category>
          
          <category> Beatboxing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
            <tag> reflection </tag>
            
            <tag> beatboxing </tag>
            
            <tag> deep-thoughts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 15</title>
      <link href="/journal-week-15/"/>
      <url>/journal-week-15/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><p>this week, i felt super productive at work, managing to wrap up mostof my tasks right on time or even ahead of schedule.</p><p>each day had a familiar rhythm—get up, commute with a good book,work, hit the gym, beatbox practice, unwind with some me-time, thensleep. it may have been routine, but there's a sense of calm in theconsistency.</p><p>i also decided to head back to malaysia to spend time with my family.my mum recently hurt her lower back, and i could feel the urge to beclose, to share some quality time and be there for her. this time withfamily, no matter how brief, always feels grounding. ❤️</p><p>another bright spot was reconnecting with my friends from secondaryschool. these are people who have been part of my journey for years, andcatching up with them brought back so many good memories. seeing themdoing so well made me genuinely happy, and i'm just grateful to havethese friendships still going strong.</p><p>普普通通 平平淡淡的一周</p><p>但是又觉得很充实 💪🏼</p><span id="more"></span><h2 id="reading-insights">Reading Insights</h2><h3 id="the-law-leverage-the-power-of-progress">THE LAW: LEVERAGE THEPOWER OF PROGRESS</h3><p>To solve problems, encourage and celebrate small wins. This providescontinuous forward momentum, which creates an atmosphere of success anda positive sense that a team is moving towards their bigger goals.Employees are most motivated when they are engaged with the work thatthey're doing, and feel like they are making a difference.</p><blockquote><p>“The most professionally rewarding feeling in the world is a sense offorward motion.”</p></blockquote><h3 id="the-law-you-must-be-an-inconsistent-leader">THE LAW: YOU MUST BEAN INCONSISTENT LEADER</h3><p>It is impossible to seamlessly blend into a team as a jigsaw pieceunless you comprehend the unique shape of each of your team members. SirAlex Ferguson's acumen in this regard was legendary, as attested to byhis former players and staff, and even rival managers. He possessed anencyclopedic knowledge of everything from the hobbies of his players'wives to the names of their pets, and as Rio Ferdinand told me, eventheir grandfathers' preferred brand of whisky. More significantly, heknew that every member of his team was propelled by vastly differentmotivators. While one player may have thrived under Ferguson's infamous‘hairdryer' treatment (where he would shout angrily at them in thedressing room or on the training ground), another may have required amore compassionate approach, and still another may have been motivatedby a more hands-off approach. This is why Ferguson didn't have to be thetactical mastermind that many assume he must have been, but rather anemotional savant. When you're in the business of motivating people,<strong>emotional management is everything.</strong></p><blockquote><p>Great leaders are fluid, flexible, and full of fluctuation. They arewhatever shape they need to be, to complete your motivation.</p></blockquote><p><em>Excerpt From The Diary of a CEO - Steven Bartlett</em></p><h2 id="memories">Memories</h2><img data-src="/journal-week-15/IMG_5440.jpeg" class="large"><img data-src="/journal-week-15/IMG_5441.jpeg" class="large" title="新加坡字节午餐打卡"><img data-src="/journal-week-15/IMG_5445.jpeg" class="large"><video width="auto" height="auto" controls><source src="/journal-week-15/IMG_5447_compressed.mp4" type="video/mp4"></video><img data-src="/journal-week-15/IMG_5448.jpeg" class="large" title="sunset without zooming in"><img data-src="/journal-week-15/IMG_5449.jpeg" class="large" title="close-up on that sunset glow 🥺👉🏼👈🏼"><img data-src="/journal-week-15/IMG_5459.jpeg" class="large"><img data-src="/journal-week-15/IMG_5462.JPG" class="large"><img data-src="/journal-week-15/IMG_5478.jpeg" class="large"><img data-src="/journal-week-15/IMG_5479.jpeg" class="large" title="ngl this is my fav bento. ❤️"><img data-src="/journal-week-15/IMG_5480.jpeg" class="large"><img data-src="/journal-week-15/IMG_5481.jpeg" class="large"><img data-src="/journal-week-15/IMG_5482.jpeg" class="large"><img data-src="/journal-week-15/IMG_5485.jpeg" class="large"><img data-src="/journal-week-15/IMG_5489.jpeg" class="large"><img data-src="/journal-week-15/IMG_5545.jpeg" class="large" title="finished The Diary of a CEO-loads of insights."><img data-src="/journal-week-15/IMG_5546.jpeg" class="large"><img data-src="/journal-week-15/IMG_5558.jpeg" class="large" title="revisiting The 7 Habits of Highly Effective People-a classic! 📝"><img data-src="/journal-week-15/IMG_5559.jpeg" class="large" title="relearning, recapping"><img data-src="/journal-week-15/IMG_5561.jpeg" class="large" title="reunion with 中学到现在的老朋友们, You Sheng"><img data-src="/journal-week-15/IMG_5562.jpeg" class="large" title="AND... Vinoth!"><img data-src="/journal-week-15/IMG_5563.jpeg" class="large"><img data-src="/journal-week-15/IMG_5565.jpeg" class="large" title="🎯"><img data-src="/journal-week-15/IMG_5566.jpeg" class="large" title="look at this huge kopi o kosong ais"><img data-src="/journal-week-15/IMG_5568.jpeg" class="large"><img data-src="/journal-week-15/IMG_5594.jpeg" class="large" title="finally, home sweet home. ❤️"><img data-src="/journal-week-15/IMG_5596.jpeg" class="large" title="some homemade steamed salmon~"><img data-src="/journal-week-15/IMG_5598.jpeg" class="large" title="爷爷种的长豆~ so grateful for these homegrown gems."><img data-src="/journal-week-15/IMG_5599.jpeg" class="large" title="姐姐调配的酱料 好吃！"><img data-src="/journal-week-15/IMG_5601.jpeg" class="large" title="妈咪爸爸做的-so much love in every single bite 🥺❤️">]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 14</title>
      <link href="/journal-week-14/"/>
      <url>/journal-week-14/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><p>this week, my priorities were on: work, gym and prepping myself forthe beatbox competition i'm planning to participate. to top it off...6th december is my birthday too! UGH</p><p>it's been over 3 years since i last battled, and i can't even beginto explain how much i miss it—the rush of adrenaline when you're onstage, the energy from the crowd, and the vibe from all the otherbeatboxers. it's not just the competition; it's the whole experiencethat i miss so much.</p><p>i've been putting in a lot of effort lately, but, to be honest, itstill feels like i could do more... but, balancing everything—work, gym,and beatboxing—is tough. after a long day at work, it's straight to thegym, and only after that do i get the time to practise beatboxing. but iknow it's all about mental. the grind never stops, and i have to pushthrough it.</p><p>my biggest challenge right now is breaking out of my usual beats andtrying to create something new. it's been about 20 days of trying, andi'm still struggling to come up with fresh routines. it's frustrating,but i know this is the part of the process where many people give up.this feeling of being stuck—that's the moment when you're on the vergeof a breakthrough. if i can just push past this, i know success is justaround the corner.</p><p>i got this. 🙌</p><span id="more"></span><h2 id="reading-insights">Reading Insights</h2><blockquote><p>"The sole reason of why people procrastinate is because they'retrying to avoid some form of ‘psyhological discomfort' in their life.The bigger the task and the less competent we feel about accomplishingit, the greater the procrastination."</p></blockquote><p>this quote really struck me. i could feel it resonate in my dailylife, especially when it comes to things like hitting the snooze buttonin the morning or mindlessly scrolling through 抖音 and instagram reels.it's like i'm delaying that sense of discomfort, avoiding the challengeahead, even though i know it's not helping me in the long run.</p><p>i know i am not alone in this, and that gives me a bit of comfort.but i also know this is a process, one that takes time andself-awareness. i'm working on it—slowly, but surely. recognising thispsychological discomfort as the root of procrastination is already astep forward for me. the next step is taking action, even when i don'tfeel ready, and learning to push through that initial resistance. it's ajourney of self-discipline and growth.</p><p>i'm not perfect—there are still days when i fall into old habits, butunderstanding why i procrastinate has shifted my mindset. i've come torealise that it's not about eliminating procrastination overnight, butabout <strong>improving little by little</strong>, showing up even onthe hard days, and building momentum. one small victory at a time.🌱</p><p>at the end of the day, <strong>progress over perfection</strong> iswhat really matters. so, while i might still have moments of distractionor hesitation, i'm committed to pushing through and becoming the bestversion of myself, one day at a time.</p><h2 id="memories">Memories</h2><img data-src="/journal-week-14/IMG_5264.jpeg" class="large" title="starting my morning with a good read as usual"><img data-src="/journal-week-14/IMG_5304.jpeg" class="large" title="pulut hitam on a monday WEEeee 😍"><img data-src="/journal-week-14/IMG_5306.jpeg" class="large" title="vicky from PM team brought us some snacks from her trip to ChengDu"><img data-src="/journal-week-14/IMG_5307.jpeg" class="large" title="the last row squat - missing tian qing tho..."><img data-src="/journal-week-14/IMG_5308.jpeg" class="large" title="havent seen such beautiful sunset in a while. 🥺❤️"><img data-src="/journal-week-14/IMG_5322.jpeg" class="large" title="snacks all over my desk, productivity fuel or distraction?"><img data-src="/journal-week-14/IMG_5325.jpeg" class="large"><img data-src="/journal-week-14/IMG_5357.jpeg" class="large"><img data-src="/journal-week-14/IMG_5358.jpeg" class="large" title="istg i just keep getting snacks from coworkers who go for business trips. 😭 so spoiled!"><img data-src="/journal-week-14/IMG_5359.jpeg" class="large" title="its matcha flavour! ughhh 💚"><img data-src="/journal-week-14/IMG_5361.jpeg" class="large"><img data-src="/journal-week-14/IMG_5371.jpeg" class="large" title="another gem from The Diary of a CEO 💡"><img data-src="/journal-week-14/IMG_5372.jpeg" class="large" title="aw, toby left me this sweet note! 🥺"><img data-src="/journal-week-14/IMG_5380.JPG" class="large" title="long story short... i left my pre in the office, went back, and forgot to bring my employee pass to open the freaking door. i was literally standing outside, but couldnt get in, real helpless."><img data-src="/journal-week-14/IMG_5382.JPG" class="large" title="guess what!? i got it in the end...!!! 😭❤️ (yall wont believe what just happened tho)"><img data-src="/journal-week-14/IMG_5403.jpeg" class="large" title="working out with a sunset like that 🥵 cant ask for more"><img data-src="/journal-week-14/IMG_5423.jpeg" class="large" title="sunday workout"><img data-src="/journal-week-14/IMG_5425.jpeg" class="large" title="sunny sunny"><video width="auto" height="auto" controls><source src="/journal-week-14/IMG_5270_compressed.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/journal-week-14/IMG_5309_compressed.mp4" type="video/mp4"></video>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Building a Dynamic and Smooth Progress Bar for Web Loading</title>
      <link href="/building-a-dynamic-and-smooth-progress-bar-for-web-loading/"/>
      <url>/building-a-dynamic-and-smooth-progress-bar-for-web-loading/</url>
      
        <content type="html"><![CDATA[<p>While developing the my <ahref="https://enkr1.github.io/platforms/">platforms (my version oflinktree)</a>, I realised my initial loading mechanism, which relied onmy customised <code>docReady</code>, was not cutting it. It missed outon crucial elements like external images and API calls, leading to aninconsistent loading experience. I knew I needed a more comprehensivesolution—one that would track every resource seamlessly, ensuring usersexperience a smooth, uninterrupted progress bar.</p><hr /><h2 id="step-by-step-breakdown-of-the-solution">Step-by-Step Breakdownof the Solution</h2><h3 id="dynamically-track-all-resources-images-and-apis">1. DynamicallyTrack All Resources: Images and APIs</h3><p>The first thing I addressed was dynamically collecting all resourcesthat needed to load—images, API calls, and any external assets.</p><p><strong>Code Snippet:</strong> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">getAllImages</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> [...<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;img&#x27;</span>)].<span class="title function_">map</span>(<span class="function"><span class="params">img</span> =&gt;</span> img.<span class="property">src</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure> This snippet collectsall the images on the page dynamically and ensures that every image istracked for loading.</p><h3 id="incremental-progress-calculation">2. Incremental ProgressCalculation</h3><p>To ensure smooth progress tracking, I calculated the progresspercentage based on the total number of resources (images + API calls).For every loaded resource, the progress is updated.</p><p><strong>Key Concept:</strong></p><ul><li><strong>Total Resources:</strong> Total number of images + APIcalls.</li><li><strong>Loaded Items:</strong> Track loaded resources and update thepercentage accordingly.</li></ul><p><strong>Code Snippet:</strong> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">updateLoadingProgress</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> percent = (loadedItems / totalItems) * <span class="number">100</span>;</span><br><span class="line">  <span class="title function_">updateLoadingProgressSmoothly</span>(percent);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure> This ensures that everytime a resource is loaded, the percentage updates progressively.</p><h3 id="smooth-progress-with-delays">3. Smooth Progress with Delays</h3><p>For a polished user experience, I added delays and smaller steps tothe progress increments. This ensures that even with a fast network, thebar doesn't jump directly to 100%.</p><p><strong>Key Concept:</strong> Adjust the delay based onprogress—slower increments at the start, faster towards the end, butalways smooth.</p><p><strong>Code Snippet:</strong> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">updateLoadingProgressSmoothly</span> = (<span class="params">targetPercent, delay = <span class="number">50</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> step = (targetPercent - currentPercent) / <span class="number">100</span>;</span><br><span class="line">  <span class="keyword">const</span> interval = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (currentPercent &lt; targetPercent) &#123;</span><br><span class="line">      currentPercent += step;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;loading-bar&#x27;</span>).<span class="property">style</span>.<span class="property">width</span> = <span class="string">`<span class="subst">$&#123;currentPercent&#125;</span>%`</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">clearInterval</span>(interval);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, delay);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure> This snippet ensuresthat the progress bar moves smoothly, even for faster connections.</p><h3 id="tracking-api-calls">4. Tracking API Calls</h3><p>In addition to images, I also needed to track API calls. Iimplemented a simple wrapper around <code>fetch()</code> to ensure eachcall was accounted for in the progress.</p><p><strong>Code Snippet:</strong> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">trackedFetch</span> = <span class="keyword">async</span> (<span class="params">url</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> apiPromise = <span class="title function_">fetch</span>(url);</span><br><span class="line">  <span class="keyword">await</span> apiPromise;</span><br><span class="line">  loadedItems++;</span><br><span class="line">  <span class="title function_">updateLoadingProgress</span>();</span><br><span class="line">  <span class="keyword">return</span> apiPromise;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure> This function trackseach API call and updates the progress bar as soon as the response isreceived.</p><h3 id="debugging-for-accurate-progress-tracking">5. Debugging forAccurate Progress Tracking</h3><p>Throughout the implementation, I used logging to debug issues likeovershooting the progress (going beyond 100%) or not reaching 100%.Debugging helped fine-tune the logic for a more reliable progressbar.</p><p><strong>Code Snippet:</strong> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;loadedItems&#125;</span>/<span class="subst">$&#123;totalItems&#125;</span> - Loading progress: <span class="subst">$&#123;percent&#125;</span>%`</span>);</span><br></pre></td></tr></table></figure> Logging every resourceloaded gave me insight into the progress flow and helped eliminateinaccuracies.</p><h3 id="hiding-the-loading-screen">6. Hiding the Loading Screen</h3><p>Once all resources are loaded and the progress bar reaches 100%, Ismoothly hide the loading screen to reveal the page.</p><p><strong>Code Snippet:</strong> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (currentPercent &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;loading-screen&#x27;</span>).<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;loading-screen&#x27;</span>).<span class="property">style</span>.<span class="property">zIndex</span> = <span class="string">&quot;-999&quot;</span>;</span><br><span class="line">  &#125;, <span class="number">300</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> This adds a slight delaybefore removing the loading screen, giving users a final touch ofpolish.</p><hr /><h2 id="my-code">My Code</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> loadedItems = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> totalItems = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> currentPercent = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> apiFetches = [</span><br><span class="line">    <span class="string">`<span class="subst">$&#123;ENDPOINT_DATA&#125;</span>/platform_obj.json`</span>,</span><br><span class="line">    <span class="string">`<span class="subst">$&#123;ENDPOINT_DATA&#125;</span>/profile.json`</span>,</span><br><span class="line">    <span class="comment">// Add more API URLs here</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Smooth progress update with easing towards the end</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateLoadingProgressSmoothly</span> = (<span class="params">targetPercent, delay = <span class="number">50</span></span>) =&gt; &#123;</span><br><span class="line">    targetPercent = <span class="title class_">Math</span>.<span class="title function_">min</span>(targetPercent, <span class="number">100</span>); <span class="comment">// Cap at 100%</span></span><br><span class="line">    <span class="keyword">const</span> step = (targetPercent - currentPercent) / <span class="number">100</span>; <span class="comment">// Smaller step for smoother progress</span></span><br><span class="line">    <span class="title function_">log</span>(<span class="string">`Updating loading progress to <span class="subst">$&#123;targetPercent&#125;</span>%, step: <span class="subst">$&#123;step&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> interval = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (currentPercent &lt; targetPercent) &#123;</span><br><span class="line">            currentPercent += step;</span><br><span class="line">            currentPercent = <span class="title class_">Math</span>.<span class="title function_">min</span>(currentPercent, targetPercent); <span class="comment">// Ensure it doesn&#x27;t overshoot</span></span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;loading-bar&#x27;</span>).<span class="property">style</span>.<span class="property">width</span> = <span class="string">`<span class="subst">$&#123;currentPercent&#125;</span>%`</span>;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;loading-text&#x27;</span>).<span class="property">innerText</span> = <span class="string">`<span class="subst">$&#123;<span class="built_in">Math</span>.floor(currentPercent)&#125;</span>%`</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">clearInterval</span>(interval);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Only hide the loading screen when 100% is reached</span></span><br><span class="line">            <span class="keyword">if</span> (currentPercent &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;loading-screen&#x27;</span>).<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;loading-screen&#x27;</span>).<span class="property">style</span>.<span class="property">zIndex</span> = <span class="string">&quot;-999&quot;</span>;</span><br><span class="line">                &#125;, <span class="number">300</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, delay);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Function to update loading progress</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateLoadingProgress</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> percent = (loadedItems / totalItems) * <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Slow down the earlier progress increments</span></span><br><span class="line">    <span class="keyword">const</span> delay = percent &lt; <span class="number">50</span> ? <span class="number">1000</span> : percent &lt; <span class="number">90</span> ? <span class="number">500</span> : <span class="number">300</span>; <span class="comment">// Adjust delay based on current progress</span></span><br><span class="line"></span><br><span class="line">    <span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;loadedItems&#125;</span>/<span class="subst">$&#123;totalItems&#125;</span> - Loading progress: <span class="subst">$&#123;percent&#125;</span>%, delay: <span class="subst">$&#123;delay&#125;</span>ms`</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">updateLoadingProgressSmoothly</span>(percent, delay);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Dynamically fetch all images from the DOM</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getAllImages</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> images = [...<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;img&#x27;</span>)].<span class="title function_">map</span>(<span class="function"><span class="params">img</span> =&gt;</span> img.<span class="property">src</span>);</span><br><span class="line">    totalItems += images.<span class="property">length</span>; <span class="comment">// Increment totalItems dynamically</span></span><br><span class="line">    <span class="keyword">return</span> images;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Track image loading with promises</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">trackImageLoading</span> = (<span class="params">src</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">        img.<span class="property">src</span> = src;</span><br><span class="line">        img.<span class="property">onload</span> = img.<span class="property">onerror</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            loadedItems++;</span><br><span class="line">            <span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;loadedItems&#125;</span>/<span class="subst">$&#123;totalItems&#125;</span> - Image loaded: <span class="subst">$&#123;src&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">            <span class="title function_">updateLoadingProgress</span>();</span><br><span class="line">            <span class="title function_">resolve</span>();</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Track API loading and fetch</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">trackedFetch</span> = <span class="keyword">async</span> (<span class="params">url</span>) =&gt; &#123;</span><br><span class="line">    totalItems++; <span class="comment">// Increment totalItems dynamically</span></span><br><span class="line">    <span class="keyword">const</span> apiPromise = <span class="title function_">fetch</span>(url);</span><br><span class="line">    <span class="keyword">await</span> apiPromise;</span><br><span class="line">    loadedItems++;</span><br><span class="line">    <span class="title function_">log</span>(<span class="string">`[DEBUG] <span class="subst">$&#123;loadedItems&#125;</span>/<span class="subst">$&#123;totalItems&#125;</span> - API loaded: <span class="subst">$&#123;url&#125;</span>`</span>);</span><br><span class="line">    <span class="title function_">updateLoadingProgress</span>();</span><br><span class="line">    <span class="keyword">return</span> apiPromise;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Start tracking resources (images and API calls)</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">startTrackingResources</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> images = <span class="title function_">getAllImages</span>(); <span class="comment">// Automatically fetch all images from the DOM</span></span><br><span class="line"></span><br><span class="line">    <span class="title function_">log</span>(<span class="string">`[DEBUG] Total initial resources to load: <span class="subst">$&#123;totalItems&#125;</span> (Images: <span class="subst">$&#123;images.length&#125;</span>, APIs: <span class="subst">$&#123;apiFetches.length&#125;</span>)`</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> imagePromises = images.<span class="title function_">map</span>(trackImageLoading);</span><br><span class="line">    <span class="keyword">const</span> fetchPromises = apiFetches.<span class="title function_">map</span>(trackedFetch);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>([...imagePromises, ...fetchPromises]);</span><br><span class="line">    <span class="title function_">updateLoadingProgress</span>(); <span class="comment">// Final call to ensure progress reaches 100%</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Start tracking resources when DOM is ready</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, startTrackingResources);</span><br></pre></td></tr></table></figure><hr /><h2 id="preview">Preview</h2><img data-src="/building-a-dynamic-and-smooth-progress-bar-for-web-loading/20241027-041546.gif" class=""><hr /><h2 id="final-thoughts">Final Thoughts</h2><p>Creating a dynamic loading bar might seem like a small detail, butI've found that it makes a <strong>huge difference</strong> in howsmooth and polished the overall experience feels for users. Whether it'stracking images, API calls, or other external assets, having everythingrun seamlessly creates that subtle, yet important, sense of reliabilityand care.</p><p>Of course, this is just one approach, and I know it's definitely<strong>NOT</strong> the best or only way to do it. I'm always learning,and I'm open to feedback from anyone who's more experienced! 🙌</p><p>I'm sure there are tons of ways to make this even better, and I'dlove to hear how the pros out there tackle similar challenges.</p><p>If you've done something similar or have tips to share, feel free todrop a comment below. Let's learn from each other and keep improving ourcraft! 🤩</p><hr /><h2 id="references">References</h2><ul><li>https://gsap.com/community/forums/topic/12201-draw-svg-plugin-to-animate-a-dashed-line/</li><li>https://codepen.io/MAW/pen/zGXvWW</li></ul>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Web Development </category>
          
          <category> Front-end </category>
          
          <category> UI/UX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> css </tag>
            
            <tag> html5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My Reading Collection</title>
      <link href="/my-reading-collection/"/>
      <url>/my-reading-collection/</url>
      
        <content type="html"><![CDATA[<hr /><p><em>Welcome to my reading collection! 📚</em></p><p>if you are a tech enthusiast, avid reader, or just someone eager todive into a treasure trove of knowledge, you have come to the rightplace! here, i have curated a growing collection of books, eBooks, andinsightful articles that i have either read, plan to read, or stumbledupon during my online explorations. this collection is ever-evolving, somake sure to check back frequently for new additions and discoveries!🚀📚✨</p><hr /><h2 id="github-repositories">GitHub Repositories</h2><h3 id="books-by-eyeke04"><ahref="https://github.com/eyeke04/Books">Books by <span class="citation"data-cites="eyeke04">@eyeke04</span></a></h3><p>A massive collection of personal development books here.</p><h3 id="mybooks-by-shamaugale"><ahref="https://github.com/ShamaUgale/myBooks">myBooks by <spanclass="citation" data-cites="ShamaUgale">@ShamaUgale</span></a></h3><p>Including Google Leetcode Question, SWE's interview prep books,etc.</p><hr /><h2 id="ebooks">eBooks</h2><blockquote><p>Inspirational Reads</p></blockquote><h3id="never-split-the-difference-negotiating-as-if-your-life-depended-on-it-by-christopher-voss">NeverSplit the Difference: Negotiating As If Your Life Depended On It byChristopher Voss</h3><p>...</p><h3 id="the-7-habits-of-highly-effective-people-by-stephen-covey"><ahref="/insights-and-reflections-on-the-7-habits-of-highly-effective-people-by-stephen-covey/">The7 Habits of Highly Effective People by Stephen Covey</a></h3><p>A classic read on <strong>personal development</strong>, offeringtimeless principles to help you live more effectively and achievesuccess in all areas of life.</p><h3 id="the-diary-of-a-ceo-by-steven-bartlett"><ahref="/insights-and-reflections-on-the-diary-of-a-ceo-by-steven-bartlett/">TheDiary of a CEO by Steven Bartlett</a></h3><h3 id="cues-master-the-secret-language-of-charismatic-communication"><ahref="/https://www.amazon.co.uk/Cues-Master-Language-Charismatic-Communication/dp/0241554934?&amp;linkCode=sl1&amp;tag=diaryofaceo0c-21&amp;linkId=0484728d5a239add83d9ebd1de90e1c2&amp;language=en_GB&amp;ref_=as_li_ss_tl">Cues:Master the Secret Language of Charismatic Communication</a></h3><hr /><h2 id="to-read">To read</h2><h3 id="atomic-habits-by-james-clear"><ahref="https://www.amazon.com/Atomic-Habits-James-Clear/dp/0735211299">AtomicHabits by James Clear</a></h3><p>One of the best books on <strong>habit formation</strong>. Learn howto build good habits, break bad ones, and master the small changes thatcan transform your life.</p><h3 id="deep-work-by-cal-newport"><ahref="https://www.calnewport.com/books/deep-work/">Deep Work by CalNewport</a></h3><p>Learn how to focus without distraction on cognitively demanding tasksand produce high-quality work. A must-read for anyone aiming to enhancetheir productivity!</p><hr /><h2 id="want-to-share">Want to Share?</h2><p>This is a <strong>living collection</strong>, so if you have anyrecommendations, feel free to drop them in the comments! I would love tocheck them out and possibly add them to this list! 💡</p><p>Stay tuned for more updates! I am planning to add more categories andcurated reading lists as I continue my reading journey!</p><hr /><p>Thank you for visiting my collection—happy reading! 😊</p>]]></content>
      
      
      <categories>
          
          <category> Personal Development </category>
          
          <category> Collections </category>
          
          <category> Notebooks </category>
          
          <category> Reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reading </tag>
            
            <tag> ebooks </tag>
            
            <tag> resources </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Design Inspirations</title>
      <link href="/design-inspirations/"/>
      <url>/design-inspirations/</url>
      
        <content type="html"><![CDATA[<h2 id="source-awwwards.com">Source: <ahref="https://www.awwwards.com/">awwwards.com</a></h2><p>Let's be real, nothing beats scrolling through a perfectly craftedwebsite that just flows. Whether it's the insane animation, killertypography, or smooth transitions that make you think, <em>wow, i needto step up my design game</em>—this is where i dump all those gems istumble upon.</p><p>Here's a list of websites that completely blew me away. 💻✨</p><blockquote><p>ain't too formal, just a place for me to keep track of designs thatspark creativity.</p></blockquote><hr /><h2 id="camichan---camille-mormal">Camichan - <ahref="https://camillemormal.com/">Camille Mormal</a></h2><p>An absolute <strong>masterpiece of animation</strong>! Thetransitions and fluid motion throughout the site make you feel likeyou're gliding. Every scroll feels like a mini work of art. Just<em>wow</em> ... 💫</p><hr /><p>as i keep finding more of these gems, i will throw them here. thisspace is a work in progress, and i will probably keep adding notes onwhat makes each site so sick, whether it's the animations, colourpalettes, or just that overall vibe.</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Notebooks </category>
          
          <category> Web Development </category>
          
          <category> Front-end </category>
          
          <category> Design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> design </tag>
            
            <tag> web-design </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 13</title>
      <link href="/journal-week-13/"/>
      <url>/journal-week-13/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><p>i completely forgot to mention something from the previous week—itslipped my mind while writing! 💀 i guess the gym story took thespotlight for me.</p><p>i had the honour of being a judge at the <ahref="https://www.instagram.com/p/DAI7HN8IOxN/">Ignition Beatbox AcademyEvent</a> by the <span class="exturl" data-url="aHR0cHM6Ly81NTViZWF0Ym94c2luZ2Fwb3JlLmNvbS8=">555 BeatboxInitiative<i class="fa fa-external-link-alt"></i></span> on 12th October 2024. the judging panel includedClarkceds, Varen, and myself, and it was such a privilege to be a partof it. we judged the level 2 students' showcases and the level 3 battle.watching them perform was a proud moment. i still remember seeing someof these students on their first day, and now, to witness how farthey've come—it's honestly incredible.</p><p>okay, let's talk about this week!</p><p>this week was pretty chill overall. i had a few gym sessions withInovity, and honestly, having someone push you to failure just hitsdifferent! 🔥</p><p>seeing my coworkers travelling for business trips did make me feel alittle envious—i'd love to go on one soon. they've been travelling sooften, and i'm really happy for them! i'm just waiting for my chance andfeeling excited for whenever that happens, or maybe i will have to fightfor it? idk, it is a mix of feelings 🥹🤞🏼 but at the end of the day, iknow that everyone has their own timing. i will keep pushing myself anddoing my best, knowing that my opportunity will come when it is meantto. turning that envy into motivation is what keeps me going—i havelearned to celebrate others while still working towards my own goals.🫶🏻</p><p>on the work front, i've been feeling more motivated and superproductive. i made it a point to be proactive, asking more questions(not the dumb kind tho 😂). i always try things myself first beforeseeking help.</p><p>overall, this week was a productive one!</p><p>下周继续加油 竞辉！💪🏼</p><span id="more"></span><h2 id="memories">Memories</h2><img data-src="/journal-week-13/IMG_5142.jpeg" class="large" title="quote from Steve Jobs. inspiration."><img data-src="/journal-week-13/IMG_5143.jpeg" class="large" title="rainy monday. perfect weather for coffee and reflection."><img data-src="/journal-week-13/IMG_5147.jpeg" class="large" title="grabbed a bento instead, i was STILL HUNGRYY!"><img data-src="/journal-week-13/IMG_5149.jpeg" class="large" title="desmond brought us some snacks from thailand! 🤩"><img data-src="/journal-week-13/IMG_5150.jpeg" class="large" title="dinner dinner"><img data-src="/journal-week-13/IMG_5153.JPG" class="large" title="555 group picture by Kelvin Kek 🫶🏻"><img data-src="/journal-week-13/IMG_5154.JPG" class="large" title="lovely people 🫶🏻"><img data-src="/journal-week-13/IMG_5161.jpeg" class="large" title="protein-focused lunch"><img data-src="/journal-week-13/IMG_5165.jpeg" class="large"><img data-src="/journal-week-13/IMG_5176.jpeg" class="large" title="49kg for inward leg kiap (honestly dk what is it called LOL)"><img data-src="/journal-week-13/IMG_5185.jpg" class="large"><img data-src="/journal-week-13/IMG_5193.jpeg" class="large" title="instead of just reading The Diary of a CEO, i just wanna read some books to improve my logical thinking!"><img data-src="/journal-week-13/IMG_5194.jpeg" class="large" title="one of my colleagues from another team brought us some amazing snacks from his business trip to Dubai 😍"><img data-src="/journal-week-13/IMG_5200.jpeg" class="large" title="close up of what is inside! 👀"><img data-src="/journal-week-13/IMG_5195.jpeg" class="large" title="and more snacks! so SWEEET!"><img data-src="/journal-week-13/IMG_5197.jpeg" class="large"><video width="auto" height="auto" controls><source src="/journal-week-13/IMG_5188_compressed.mp4" type="video/mp4"></video><blockquote><p>i was really touched when i saw this security guard helping a ladywith her baby stroller on the escalator. she was holding a baby, withtwo other kids around, and this moment just felt so heartwarming. 🥺</p></blockquote><img data-src="/journal-week-13/IMG_5208.jpeg" class="large"><img data-src="/journal-week-13/IMG_5210.jpeg" class="large"><img data-src="/journal-week-13/IMG_5212.jpeg" class="large"><img data-src="/journal-week-13/IMG_5233.PNG" class="large" title="saturday for me is for the recovery! 😴 bUT man... 12 hours!? was not planning it, but i guess i needed it."><img data-src="/journal-week-13/IMG_5240.PNG" class="large" title="just as i was about to record my gym set, a work call came in. still got the workout done tho 🔥"><img data-src="/journal-week-13/IMG_5243.jpeg" class="large" title="🫡🔥"><img data-src="/journal-week-13/IMG_5248.jpeg" class="large" title="fatty caifan meal which cost me SGD 6.50"><img data-src="/journal-week-13/IMG_5263.jpeg" class="large" title="SGD 7.30 for this 💀"><h2 id="credits">Credits</h2><ul><li>555 Pictures by <ahref="https://www.instagram.com/avariciously/">Kelvin Kek</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo: How to Set Up a Subdomain on GitHub Pages and Fix CNAME Issues</title>
      <link href="/hexo-how-to-set-up-a-subdomain-on-github-pages-and-fix-cname-issues/"/>
      <url>/hexo-how-to-set-up-a-subdomain-on-github-pages-and-fix-cname-issues/</url>
      
        <content type="html"><![CDATA[<h2 id="introduction">Introduction:</h2><p>Running into the <code>InvalidDNSError</code> while trying to set upa subdomain on GitHub Pages? You're not alone! I recently faced thisissue when I tried to set up <code>blog.enkr1.com</code>. After a bit ofback and forth with DNS settings, I figured it out, and here's how youcan do it, too.</p><p>Why did I even bother? Well, it turns out that without setting up thesubdomain, Firestore's visitor tracking wasn't working properly due tocross-domain issues (which I only found out after <strong>sixmonths</strong> when I got an inactivity email from the database! 😂).So, here we go!</p><hr /><h2 id="steps-to-configure-a-subdomain-on-github-pages">Steps toConfigure a Subdomain on GitHub Pages</h2><h3 id="set-up-the-cname-record-in-your-dns-provider">1. Set Up theCNAME Record in Your DNS Provider</h3><p>The first thing you need to do is tell your DNS provider where tosend traffic for your subdomain. Here's how to add a CNAME record:</p><ul><li><p><strong>Log in to your DNS provider</strong> (Dynadot (I am usingthis), GoDaddy, Namecheap, Cloudflare, etc.).</p></li><li><p>Head to the <strong>DNS Management</strong> section for yourdomain (<code>enkr1.com</code>).</p></li><li><p><strong>Create a new CNAME record</strong> with thesedetails:</p><ul><li><strong>Type</strong>: CNAME</li><li><strong>Host</strong>: <code>blog</code> (this is yoursubdomain)</li><li><strong>Points to</strong>: <code>enkr1.github.io</code> (replace<code>enkr1</code> with your GitHub username if different)</li><li><strong>TTL</strong>: Leave it at the default setting (usually 1hour or automatic)</li></ul><p>Example: <figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Type</span><span class="punctuation">:</span> <span class="string">CNAME</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">:</span> <span class="string">blog</span></span><br><span class="line"><span class="attribute">Points to</span><span class="punctuation">:</span> <span class="string">enkr1.github.io</span></span><br></pre></td></tr></table></figure></p></li><li><p><strong>Save</strong> the record and wait for DNS propagation(anywhere from a few minutes to 24 hours, depending on yourprovider).</p></li></ul><hr /><h3 id="verify-the-dns-record">2. Verify the DNS Record</h3><p>Once you've set up the CNAME record, it's time to check if it'spointing in the right direction:</p><ul><li>Use <span class="exturl" data-url="aHR0cHM6Ly9kbnNjaGVja2VyLm9yZy8=">DNSChecker<i class="fa fa-external-link-alt"></i></span> (or a similartool).</li><li>Enter <code>blog.enkr1.com</code> and select<strong>CNAME</strong>.</li><li>Ensure it's correctly pointing to <code>enkr1.github.io</code>.</li></ul><p>If everything looks good, you're ready for the next step!</p><hr /><h3 id="configure-the-custom-domain-in-github-pages">3. Configure theCustom Domain in GitHub Pages</h3><p>Next, let GitHub know about your shiny new subdomain.</p><ul><li>Open the <strong>GitHub repository</strong> where your website ishosted (in my case, for <code>blog.enkr1.com</code>).</li><li>Go to <strong>Settings</strong> → <strong>Pages</strong>.</li><li>In the <strong>Custom Domain</strong> field, type<code>blog.enkr1.com</code> and click <strong>Save</strong>.</li></ul><p>This will create a <code>CNAME</code> file in your repository,linking your site to the subdomain.</p><hr /><h3id="enable-https-fixing-the-cname-issue-after-deploying-with-hexo">4.Enable HTTPS &amp; Fixing the CNAME Issue After Deploying with Hexo</h3><p>After the DNS propagation finishes (again, this could take up to 24hours), you'll want to secure your site with HTTPS.</p><ul><li>Return to <strong>Settings</strong> → <strong>Pages</strong> in yourGitHub repository.</li><li>Check the <strong>Enforce HTTPS</strong> option (if it'savailable).</li></ul><p>Once HTTPS is enforced, your site will load over a secureconnection.</p><p><strong>OR;</strong></p><p>If you're using Hexo to deploy your site to GitHub Pages, you mightrun into an issue where the CNAME gets reset after every deployment,causing your custom domain to disappear from the GitHub Pages settings.I faced this issue as well, and here's a quick fix for it.</p><p>To prevent the CNAME from getting wiped during deployment, simplycreate a <code>CNAME</code> file in the <code>source/</code> folder ofyour Hexo project.</p><p>Here's how:</p><ol type="1"><li><p><strong>Navigate to your Hexo project's sourcedirectory</strong>: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/hexo/source</span><br></pre></td></tr></table></figure></p></li><li><p><strong>Create a <code>CNAME</code> file</strong> in the<code>source/</code> directory: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;blog.enkr1.com&quot;</span> &gt; CNAME</span><br></pre></td></tr></table></figure></p><p>Replace <code>blog.enkr1.com</code> with your custom domain.</p></li><li><p><strong>Deploy your Hexo site</strong>: Run your normal deploycommand: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></p></li></ol><p>Now, the <code>CNAME</code> file will be deployed along with yoursite, ensuring that your custom domain stays intact after eachdeployment.</p><hr /><h3 id="wait-for-propagation-and-test-your-subdomain">5. Wait forPropagation and Test Your Subdomain</h3><p>Now it's just a waiting game. Once DNS propagation is complete:</p><ul><li>Go to <code>https://blog.enkr1.com</code> and make sure your GitHubPages site loads correctly.</li><li>Double-check in <strong>Settings</strong> that HTTPS isenabled.</li></ul><p>If everything is working, congratulations—you've just set up asubdomain on GitHub Pages! 🎉</p><hr /><h2 id="troubleshooting">Troubleshooting</h2><p>Even if you follow the steps perfectly, there are always thoseannoying issues that can pop up. Here are a few possible solutions ifyou hit a roadblock:</p><ul><li><strong>InvalidDNSError</strong>:<ul><li>This usually means your CNAME record isn't configured correctly orhasn't propagated yet. Use tools like <strong>DNSChecker</strong> toensure that <code>blog.enkr1.com</code> points to<code>enkr1.github.io</code>.</li><li>Double-check the DNS entry at your domain provider—small typos orincorrect hostnames are common issues.</li><li>Make sure your GitHub Pages repository is <strong>public</strong>.Private repos won't work with custom domains unless you're on GitHub'spaid plan.</li></ul></li><li><strong>HTTPS Unavailable</strong>:<ul><li>If you can't enable HTTPS, it's likely that the DNS propagationhasn't completed. Give it a bit more time and check again.</li><li>If you're still having issues, make sure there aren't conflictingDNS records (like an A record) for the same subdomain.</li></ul></li><li><strong>Cross-Domain Issues with Firestore or OtherServices</strong>:<ul><li>Make sure you've correctly set up CORS (Cross-Origin ResourceSharing) in your Firestore rules to avoid visitor tracking issues.</li></ul></li></ul><hr /><h2 id="conclusion">Conclusion:</h2><p>Setting up a subdomain on GitHub Pages can feel a little frustratingat first—especially with DNS propagation times and potential errors—butit's all worth it in the end. I hope this guide helps you avoid the sameheadaches I had when setting up <code>blog.enkr1.com</code>. If you runinto any issues, don't hesitate to reach out, or check the official <ahref="https://docs.github.com/en/pages">GitHub Pagesdocumentation</a>.</p><p>Your site should now be live, secure, and ready to go! 🚀</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Configurations </category>
          
          <category> DNS </category>
          
          <category> Frameworks </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dns </tag>
            
            <tag> hexo </tag>
            
            <tag> github-pages </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 12</title>
      <link href="/journal-week-12/"/>
      <url>/journal-week-12/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><p>this week, something really struck me during one of my workoutsessions with toby. i had been casually "coaching" him, showing him myworkout style and sharing techniques i've picked up over the years. butwhat came next hit me like a life metaphor that i didn't see coming.</p><span id="more"></span><p><strong>"Work is like working out"</strong>, toby said.</p><p>you can start off pushing hard—whether it's at work or in the gym.sometimes, you overdo it, like putting in long hours at work without theright strategy, or hitting the gym with bad form. the funny thing is, ifno one points out that you're doing it wrong, you might not even realiseit. that's where a personal trainer (PT) in the gym—or a mentor atwork—comes in. they're there to guide you, correct your form, and showyou the correct way, the better way, refine your technique, and show youa more effective path—one that not only helps you reach your goals butalso gets you there faster and with greater precision. but here's thekey difference: in work, people aren't going to proactively correct you,you have to be <strong>proactive</strong> yourself. ask the rightquestions, observe, listen, learn, and most importantly, <strong>beconsistent</strong>. success comes down to consistently showing up andputting in the work, whether it's in the gym or in life.</p><p><strong>ByteDance and the Gym</strong></p><p>toby pointed out something else that really hit home for me. he saidworking at ByteDance is a lot like working out. there's a "7-2-1"approach there, where you dive into the deep end (the "7") without firstmastering the basics (the "1"). it reminded me of when i first startedgymming two years ago. i was clueless about proper form or technique,yet i still managed to get into shape by watching a few YouTubetutorials. but looking back, i wonder—<strong>was all the time i spentreally worth it?</strong> would i have gotten there faster if i hadinvested in a PT early on? work is the same. you can't expect people tohold your hand. you have to seek out mentors, guidance, and constantlyrefine your "form." 💪</p><p><strong>Life Lessons from the Gym</strong></p><p>then toby dropped a truth bomb: <em>"you've succeeded in the gym,going from a skinny guy to a 'buff load,' so why not apply the sameconcept to life?"</em> 💡</p><p>that hit me hard. the way i push myself to the failure in the gym,the way i visualise each exercise to make sure it works—those sameprinciples can be applied to life. and toby made me realise that i'veactually been influencing others, showing them how to push themselvesbeyond their limits. now, it's my turn to find someone who can<strong>influence me</strong> and take me to the next level, just like ihelped toby.</p><p>we also talked about how important it is to be specific incommunication. vague feedback like "this is good" or "i think it'sworking" won't help anyone grow. you need to explain <em>why</em>something is good, and avoid phrases like "i feel like..." that leavethings too open-ended. clarity and precision are what help peopleimprove.</p><p><strong>Meeting Niq, the PT</strong></p><p>later in the week, we met niq, a PT at Fitness First, and he was justdifferent. there was no ego, no attitude—just genuine passion forworking out. he was sharing machines with us and offering small tips,like we were all gym buddies. at first, i didn't even know he was a PT.but when he dropped a tip on how to engage our triceps better duringpushdowns, it clicked for me. it was one of those moments where youthink you know something, but you're not applying it properly. it mademe realise how important these small adjustments are. 💪</p><p>what really set niq apart from other PTs i've met was how freely andpassionately he shared his knowledge, expecting nothing in return. itreminded me of how i approach things—i genuinely love helping people,without expecting anything back. seeing that same energy in niq made merealise that's the vibe i want to continue spreading in my life too.</p><p><strong>Reflections</strong></p><p>this week really opened my eyes to how the lessons we learn in onearea—whether it's the gym, work, or relationships—can apply to others.consistency, communication, and the willingness to learn are the keys tosuccess, no matter what you're striving for. just like in the gym, inlife, you need the right form, the right guidance, and the right mindsetto reach your goals.</p><p><strong>life and work are like a gym session—it's all about findingthe right balance, asking the right questions, and putting in the effortevery day, even when it's tough.</strong> 🧠</p><h2 id="reading-insights">Reading Insights</h2><p>"Being selective about how you spend your time, and who you spendyour time with, is the greatest sign of self-respect."</p><h2 id="memories">Memories</h2><img data-src="/journal-week-12/0BA961D3-FECB-40C6-A4D0-F58B9298374D.JPG" class="large" title="mcd seaweed shaker fries is back!"><img data-src="/journal-week-12/IMG_4996.jpeg" class="large" title="sharpening a variety of complementary and rare skills that industry values - become the kind of talent competitor cannot ignore."><img data-src="/journal-week-12/IMG_4998.jpeg" class="large" title="fueling up for the day with theseee"><img data-src="/journal-week-12/IMG_5003.jpeg" class="large"><img data-src="/journal-week-12/IMG_5016.jpeg" class="large" title="my duckies"><img data-src="/journal-week-12/IMG_5021.jpeg" class="large" title="Maki-San bento - was straight up a bomb, no joke"><img data-src="/journal-week-12/IMG_5055.jpeg" class="large"><img data-src="/journal-week-12/IMG_5062.jpeg" class="large"><img data-src="/journal-week-12/IMG_5071.jpeg" class="large" title="post-gym session w ino - this time, it was my treat. cant believe its been over a year since we performed for Pop Toy. nostalgic"><img data-src="/journal-week-12/IMG_5075.jpeg" class="large" title="be selective."><img data-src="/journal-week-12/IMG_5079.jpeg" class="large" title="pulut hitam snacks!? and its product of malaysia HA"><img data-src="/journal-week-12/IMG_5080.jpeg" class="large"><img data-src="/journal-week-12/IMG_5083.jpeg" class="large"><img data-src="/journal-week-12/IMG_5088.jpeg" class="large" title="once in a while"><img data-src="/journal-week-12/IMG_5093.jpeg" class="large" title="caifan mMmm"><img data-src="/journal-week-12/IMG_5096.jpeg" class="large" title="honoured to judge at Ignition 2024! 🔥"><img data-src="/journal-week-12/IMG_5106.jpeg" class="large" title="after the show, we returned to our old 555 hangout spot from the covid days 🥺 it was like a flood of memories rushing back"><img data-src="/journal-week-12/IMG_5119.PNG" class="large" title="one of the best moments from the battle by Javier vs Kambing 😭"><img data-src="/journal-week-12/IMG_5134.PNG" class="large" title="huge congratulations to Rae for taking 1st place; Henzi came in 2nd and Javier took 3rd - what an incredible competition."><img data-src="/journal-week-12/IMG_5107.jpeg" class="large" title="bugis AF be wilding... look at this deco 💀"><img data-src="/journal-week-12/IMG_5126.jpeg" class="large" title="the most confusing machine i have ever seen"><img data-src="/journal-week-12/IMG_5139.jpeg" class="large" title="555 AF club"><img data-src="/journal-week-12/IMG_5140.jpeg" class="large" title="$9 - recommended by Henzi, honestly one of the solid ones out there, soup was thicc and mee pok sauce was flavourful - worth a try!">]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 11</title>
      <link href="/journal-week-11/"/>
      <url>/journal-week-11/</url>
      
        <content type="html"><![CDATA[<h2 id="a-fulfilling-week">A Fulfilling Week</h2><p>on the 2nd of october, my siblings and i jumped on a call with mymom, right at midnight sg time, to wish her a happy birthday! it wasspecial because this year, we were all in different countries, but westill made the time to connect, no matter the distance. we promised tocelebrate properly with dinner when my sis gets back on saturday, can'twait! ❤️</p><p>toby invited me for a 3-day free trial session at Fitness First. hementioned our gym sessions were even more valuable than his private ones🥺.</p><p>AND daidai whipped up 刀削面 for me at his place, it was so good-whoknew instant noodles could taste that scrumptious!? have you ever hadinstant noodles so good you wouldn't believe they came from a packet?!that's what he cooked up for me! the view from his condo and the comfortof those noodles-it was all just what i needed. OH, and let me notforget—he has the cutest cat! 😭</p><p>unfortunately, our plan to celebrate my mom's birthday got delayedbecause of my sis' flight being rescheduled 😔. but i am really lookingforward to when she is back and we can have that family momenttogether.</p><span id="more"></span><h2 id="reading-insights-negative-manifestation">Reading Insights:Negative Manifestation</h2><ol type="1"><li><strong>"Failure tempts people to lose focus as motivation andbelief decrease, but success tempts people to lose focus even more, asopportunities, offers, and capabilities increase."</strong> this made methink—sometimes, when things are going well, it's easier to getdistracted by new offers and ideas, and you lose sight of the core goal.<ol type="1"><li><strong>Failure and Loss of Focus</strong>: when people experiencefailure, their motivation and self-belief often diminish. this leads toa loss of focus because their confidence in achieving their goals hasbeen shaken. in other words, <strong>failure makes it harder to stay ontrack due to the discouragement it creates.</strong></li><li><strong>Success and Loss of Focus</strong>: the surprising insighthere is that success can be an even bigger challenge to focus. Whenpeople experience success, it can open up many new opportunities,offers, and capabilities. while this sounds like a positive situation,it can also lead to a dilution of focus. success brings distractions inthe form of new projects, side ventures, or alternative paths.<strong>the challenge here is to maintain the same level of disciplineand singular focus</strong> that helped achieve success in the firstplace.</li></ol></li></ol><blockquote><p>while failure demotivates, success overwhelms with possibilities,both of which can cause a loss of focus. the key takeaway is the<strong>importance of staying focused</strong> no matter the externalcircumstances—whether in the face of failure or success.</p></blockquote><ol start="2" type="1"><li><p><strong>"You can predict someone's success in any area of theirlife by observing how willing and capable they are at dealing withuncomfortable conversations. Your personal progression is trapped behindan uncomfortable conversation."</strong> it's a reminder for me that thepath to growth often comes through discomfort, especially when it comesto communication.</p></li><li><p><strong>"Embracing this duality of thought – balancing positivitywith negativity – equips us with the wisdom, fortitude and foresight toforge a more successful path forward."</strong></p></li></ol><h2 id="memories">Memories</h2><img data-src="/journal-week-11/8df6f5df-1ed8-4364-a45b-b090321aade3.JPG" class="large" title="妈咪生日快乐 ❤️ 24.10.02"><img data-src="/journal-week-11/IMG_4879.jpeg" class="large"><img data-src="/journal-week-11/IMG_4881.jpeg" class="large" title="back to this breakfast combo i had everyday when i first joined bd, cept that they used to have better fruits ..."><img data-src="/journal-week-11/IMG_4883.jpeg" class="large"><img data-src="/journal-week-11/IMG_4891.jpeg" class="large" title="3-day free trial session at Fitness First!"><img data-src="/journal-week-11/IMG_4900.JPG" class="large" title="mcd as supper"><img data-src="/journal-week-11/IMG_4901.jpeg" class="large"><img data-src="/journal-week-11/IMG_4902.jpg" class="large" title="got a random compliment out of the blue from one of my best friends on my personal portfolio that i built from scratch"><img data-src="/journal-week-11/IMG_4903.jpeg" class="large"><img data-src="/journal-week-11/IMG_4906.jpeg" class="large" title="boditrax"><img data-src="/journal-week-11/IMG_4907.jpeg" class="large"><img data-src="/journal-week-11/IMG_4908.jpeg" class="large"><img data-src="/journal-week-11/IMG_4909.jpeg" class="large"><img data-src="/journal-week-11/IMG_4910.jpeg" class="large"><img data-src="/journal-week-11/IMG_4912.jpeg" class="large" title="Lucky number?!"><img data-src="/journal-week-11/IMG_4915.jpeg" class="large" title="刀削面 by daidai. i didnt know instant noodles can be this scrumptious ... 🥺"><img data-src="/journal-week-11/IMG_4917.jpeg" class="large" title="a book that daidai has, from his leader, the title already got me - immediately added to my to-read list"><img data-src="/journal-week-11/IMG_4919.jpeg" class="large" title="a kyushu white instant noodle to start my friday ..."><img data-src="/journal-week-11/IMG_4920.jpeg" class="large"><img data-src="/journal-week-11/IMG_4924.jpeg" class="large"><img data-src="/journal-week-11/IMG_4932.jpeg" class="large" title="supper at Lau Pa Sat"><img data-src="/journal-week-11/IMG_4933.jpeg" class="large" title="but i was eating the extra bento that i got from lunch"><img data-src="/journal-week-11/IMG_4935.jpeg" class="large" title="last day of the 3-day free trial - amazing experience"><img data-src="/journal-week-11/IMG_4939.jpeg" class="large" title="first time visiting Octobox (1)"><img data-src="/journal-week-11/IMG_4942.jpeg" class="large" title="the snack i like the most at bd costs $1.10?!"><img data-src="/journal-week-11/IMG_4944.jpeg" class="large" title="they got most of the day-to-day things you need!"><img data-src="/journal-week-11/IMG_4945.jpeg" class="large" title="impressed."><img data-src="/journal-week-11/IMG_4946.jpeg" class="large" title="my lunch before my saturday workout!"><img data-src="/journal-week-11/IMG_4947.jpeg" class="large" title="push day let" alt="s go! 🔥"><img data-src="/journal-week-11/IMG_4958.jpg" class="large" title="resonated. (2)"><img data-src="/journal-week-11/IMG_4972.jpeg" class="large"><h2 id="references">References</h2><ol type="1"><li><ahref="https://www.enterprisesg.gov.sg/resources/inspiring-stories/others/octobox">Octobox</a></li><li><ahref="https://www.forbes.com/sites/jodiecook/2021/02/22/pressure-is-a-privilege/">Pressureis a Privilege</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode Notebook</title>
      <link href="/leetcode-notebook/"/>
      <url>/leetcode-notebook/</url>
      
        <content type="html"><![CDATA[<h2 id="snakes-and-ladders"><ahref="https://leetcode.com/problems/snakes-and-ladders/description/?envType=study-plan-v2&amp;envId=top-interview-150">909.Snakes and Ladders</a></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ <span class="number">0</span>, -<span class="number">1</span>, <span class="number">15</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, <span class="number">35</span>, -<span class="number">1</span>, -<span class="number">1</span>, <span class="number">13</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span> ]</span><br></pre></td></tr></table></figure><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">   <span class="number">0</span>, -<span class="number">1</span>, <span class="number">15</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>,</span><br><span class="line">  -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>,</span><br><span class="line">  -<span class="number">1</span>, -<span class="number">1</span>, <span class="number">35</span>, -<span class="number">1</span>, -<span class="number">1</span>, <span class="number">13</span>,</span><br><span class="line">  -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>,</span><br><span class="line">  -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>,</span><br><span class="line">  -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br></pre></td><td class="code"><pre><span class="line">=== Start of Loop (Move 1) ===</span><br><span class="line">Current Queue: Queue &#123; _elements: [ 1 ], _offset: 0 &#125;</span><br><span class="line">Queue size: 1</span><br><span class="line">Processing position: 1</span><br><span class="line">Enqueued: 15 (from position 2)</span><br><span class="line">Enqueued: 3 (from position 3)</span><br><span class="line">Enqueued: 4 (from position 4)</span><br><span class="line">Enqueued: 5 (from position 5)</span><br><span class="line">Enqueued: 6 (from position 6)</span><br><span class="line">Enqueued: 7 (from position 7)</span><br><span class="line">=== End of Loop (Move 1) ===</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">=== Start of Loop (Move 2) ===</span><br><span class="line">Current Queue: Queue &#123; _elements: [ 15, 3, 4, 5, 6, 7 ], _offset: 0 &#125;</span><br><span class="line">Queue size: 6</span><br><span class="line">Processing position: 15</span><br><span class="line">Enqueued: 16 (from position 16)</span><br><span class="line">Enqueued: 13 (from position 17)</span><br><span class="line">Enqueued: 18 (from position 18)</span><br><span class="line">Enqueued: 19 (from position 19)</span><br><span class="line">Enqueued: 20 (from position 20)</span><br><span class="line">Enqueued: 21 (from position 21)</span><br><span class="line">Processing position: 3</span><br><span class="line">Visited: 4 (from position 4)</span><br><span class="line">Visited: 5 (from position 5)</span><br><span class="line">Visited: 6 (from position 6)</span><br><span class="line">Visited: 7 (from position 7)</span><br><span class="line">Enqueued: 8 (from position 8)</span><br><span class="line">Enqueued: 9 (from position 9)</span><br><span class="line">Processing position: 4</span><br><span class="line">Visited: 5 (from position 5)</span><br><span class="line">Visited: 6 (from position 6)</span><br><span class="line">Visited: 7 (from position 7)</span><br><span class="line">Visited: 8 (from position 8)</span><br><span class="line">Visited: 9 (from position 9)</span><br><span class="line">Enqueued: 10 (from position 10)</span><br><span class="line">Processing position: 5</span><br><span class="line">Visited: 6 (from position 6)</span><br><span class="line">Visited: 7 (from position 7)</span><br><span class="line">Visited: 8 (from position 8)</span><br><span class="line">Visited: 9 (from position 9)</span><br><span class="line">Visited: 10 (from position 10)</span><br><span class="line">Enqueued: 11 (from position 11)</span><br><span class="line">Processing position: 6</span><br><span class="line">Visited: 7 (from position 7)</span><br><span class="line">Visited: 8 (from position 8)</span><br><span class="line">Visited: 9 (from position 9)</span><br><span class="line">Visited: 10 (from position 10)</span><br><span class="line">Visited: 11 (from position 11)</span><br><span class="line">Enqueued: 12 (from position 12)</span><br><span class="line">Processing position: 7</span><br><span class="line">Visited: 8 (from position 8)</span><br><span class="line">Visited: 9 (from position 9)</span><br><span class="line">Visited: 10 (from position 10)</span><br><span class="line">Visited: 11 (from position 11)</span><br><span class="line">Visited: 12 (from position 12)</span><br><span class="line">Visited: 13 (from position 13)</span><br><span class="line">=== End of Loop (Move 2) ===</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">=== Start of Loop (Move 3) ===</span><br><span class="line">Current Queue: Queue &#123;</span><br><span class="line">  _elements: [</span><br><span class="line">    15,  3,  4,  5,  6, 7, 16,</span><br><span class="line">    13, 18, 19, 20, 21, 8,  9,</span><br><span class="line">    10, 11, 12</span><br><span class="line">  ],</span><br><span class="line">  _offset: 6</span><br><span class="line">&#125;</span><br><span class="line">Queue size: 11</span><br><span class="line">Processing position: 16</span><br><span class="line">Visited: 13 (from position 17)</span><br><span class="line">Visited: 18 (from position 18)</span><br><span class="line">Visited: 19 (from position 19)</span><br><span class="line">Visited: 20 (from position 20)</span><br><span class="line">Visited: 21 (from position 21)</span><br><span class="line">Enqueued: 22 (from position 22)</span><br><span class="line">Processing position: 13</span><br><span class="line">Enqueued: 35 (from position 14)</span><br><span class="line">Visited: 15 (from position 15)</span><br><span class="line">Visited: 16 (from position 16)</span><br><span class="line">Visited: 13 (from position 17)</span><br><span class="line">Visited: 18 (from position 18)</span><br><span class="line">Visited: 19 (from position 19)</span><br><span class="line">Processing position: 18</span><br><span class="line">Visited: 19 (from position 19)</span><br><span class="line">Visited: 20 (from position 20)</span><br><span class="line">Visited: 21 (from position 21)</span><br><span class="line">Visited: 22 (from position 22)</span><br><span class="line">Enqueued: 23 (from position 23)</span><br><span class="line">Enqueued: 24 (from position 24)</span><br><span class="line">Processing position: 19</span><br><span class="line">Visited: 20 (from position 20)</span><br><span class="line">Visited: 21 (from position 21)</span><br><span class="line">Visited: 22 (from position 22)</span><br><span class="line">Visited: 23 (from position 23)</span><br><span class="line">Visited: 24 (from position 24)</span><br><span class="line">Enqueued: 25 (from position 25)</span><br><span class="line">Processing position: 20</span><br><span class="line">Visited: 21 (from position 21)</span><br><span class="line">Visited: 22 (from position 22)</span><br><span class="line">Visited: 23 (from position 23)</span><br><span class="line">Visited: 24 (from position 24)</span><br><span class="line">Visited: 25 (from position 25)</span><br><span class="line">Enqueued: 26 (from position 26)</span><br><span class="line">Processing position: 21</span><br><span class="line">Visited: 22 (from position 22)</span><br><span class="line">Visited: 23 (from position 23)</span><br><span class="line">Visited: 24 (from position 24)</span><br><span class="line">Visited: 25 (from position 25)</span><br><span class="line">Visited: 26 (from position 26)</span><br><span class="line">Enqueued: 27 (from position 27)</span><br><span class="line">Processing position: 8</span><br><span class="line">Visited: 9 (from position 9)</span><br><span class="line">Visited: 10 (from position 10)</span><br><span class="line">Visited: 11 (from position 11)</span><br><span class="line">Visited: 12 (from position 12)</span><br><span class="line">Visited: 13 (from position 13)</span><br><span class="line">Visited: 35 (from position 14)</span><br><span class="line">Processing position: 9</span><br><span class="line">Visited: 10 (from position 10)</span><br><span class="line">Visited: 11 (from position 11)</span><br><span class="line">Visited: 12 (from position 12)</span><br><span class="line">Visited: 13 (from position 13)</span><br><span class="line">Visited: 35 (from position 14)</span><br><span class="line">Visited: 15 (from position 15)</span><br><span class="line">Processing position: 10</span><br><span class="line">Visited: 11 (from position 11)</span><br><span class="line">Visited: 12 (from position 12)</span><br><span class="line">Visited: 13 (from position 13)</span><br><span class="line">Visited: 35 (from position 14)</span><br><span class="line">Visited: 15 (from position 15)</span><br><span class="line">Visited: 16 (from position 16)</span><br><span class="line">Processing position: 11</span><br><span class="line">Visited: 12 (from position 12)</span><br><span class="line">Visited: 13 (from position 13)</span><br><span class="line">Visited: 35 (from position 14)</span><br><span class="line">Visited: 15 (from position 15)</span><br><span class="line">Visited: 16 (from position 16)</span><br><span class="line">Visited: 13 (from position 17)</span><br><span class="line">Processing position: 12</span><br><span class="line">Visited: 13 (from position 13)</span><br><span class="line">Visited: 35 (from position 14)</span><br><span class="line">Visited: 15 (from position 15)</span><br><span class="line">Visited: 16 (from position 16)</span><br><span class="line">Visited: 13 (from position 17)</span><br><span class="line">Visited: 18 (from position 18)</span><br><span class="line">=== End of Loop (Move 3) ===</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">=== Start of Loop (Move 4) ===</span><br><span class="line">Current Queue: Queue &#123;</span><br><span class="line">  _elements: [</span><br><span class="line">    21,  8,  9, 10, 11, 12,</span><br><span class="line">    22, 35, 23, 24, 25, 26,</span><br><span class="line">    27</span><br><span class="line">  ],</span><br><span class="line">  _offset: 6</span><br><span class="line">&#125;</span><br><span class="line">Queue size: 7</span><br><span class="line">Processing position: 22</span><br><span class="line">Visited: 23 (from position 23)</span><br><span class="line">Visited: 24 (from position 24)</span><br><span class="line">Visited: 25 (from position 25)</span><br><span class="line">Visited: 26 (from position 26)</span><br><span class="line">Visited: 27 (from position 27)</span><br><span class="line">Enqueued: 28 (from position 28)</span><br><span class="line">Processing position: 35</span><br><span class="line">Enqueued: 36 (from position 36)</span><br><span class="line">Processing position: 23</span><br><span class="line">Visited: 24 (from position 24)</span><br><span class="line">Visited: 25 (from position 25)</span><br><span class="line">Visited: 26 (from position 26)</span><br><span class="line">Visited: 27 (from position 27)</span><br><span class="line">Visited: 28 (from position 28)</span><br><span class="line">Enqueued: 29 (from position 29)</span><br><span class="line">Processing position: 24</span><br><span class="line">Visited: 25 (from position 25)</span><br><span class="line">Visited: 26 (from position 26)</span><br><span class="line">Visited: 27 (from position 27)</span><br><span class="line">Visited: 28 (from position 28)</span><br><span class="line">Visited: 29 (from position 29)</span><br><span class="line">Enqueued: 30 (from position 30)</span><br><span class="line">Processing position: 25</span><br><span class="line">Visited: 26 (from position 26)</span><br><span class="line">Visited: 27 (from position 27)</span><br><span class="line">Visited: 28 (from position 28)</span><br><span class="line">Visited: 29 (from position 29)</span><br><span class="line">Visited: 30 (from position 30)</span><br><span class="line">Enqueued: 31 (from position 31)</span><br><span class="line">Processing position: 26</span><br><span class="line">Visited: 27 (from position 27)</span><br><span class="line">Visited: 28 (from position 28)</span><br><span class="line">Visited: 29 (from position 29)</span><br><span class="line">Visited: 30 (from position 30)</span><br><span class="line">Visited: 31 (from position 31)</span><br><span class="line">Enqueued: 32 (from position 32)</span><br><span class="line">Processing position: 27</span><br><span class="line">Visited: 28 (from position 28)</span><br><span class="line">Visited: 29 (from position 29)</span><br><span class="line">Visited: 30 (from position 30)</span><br><span class="line">Visited: 31 (from position 31)</span><br><span class="line">Visited: 32 (from position 32)</span><br><span class="line">Enqueued: 33 (from position 33)</span><br><span class="line">=== End of Loop (Move 4) ===</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">=== Start of Loop (Move 5) ===</span><br><span class="line">Current Queue: Queue &#123;</span><br><span class="line">  _elements: [</span><br><span class="line">    28, 36, 29, 30,</span><br><span class="line">    31, 32, 33</span><br><span class="line">  ],</span><br><span class="line">  _offset: 0</span><br><span class="line">&#125;</span><br><span class="line">Queue size: 7</span><br><span class="line">Processing position: 28</span><br><span class="line">Visited: 29 (from position 29)</span><br><span class="line">Visited: 30 (from position 30)</span><br><span class="line">Visited: 31 (from position 31)</span><br><span class="line">Visited: 32 (from position 32)</span><br><span class="line">Visited: 33 (from position 33)</span><br><span class="line">Enqueued: 34 (from position 34)</span><br><span class="line">Processing position: 36</span><br><span class="line">Reached the end at position 36! Total moves: 4</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 10</title>
      <link href="/journal-week-10/"/>
      <url>/journal-week-10/</url>
      
        <content type="html"><![CDATA[<h2 id="reflections">Reflections</h2><p>this week, i went back to malaysia to celebrate 79th birthday(华人生日) of my grandpa (爷爷) 👴🏽. it was such a priceless momentseeing him so happy that night 🥺❤️. time really does fly—it feels likejust yesterday he was still the strong, sharp grandpa, but now, he'saged. seeing him now, young at heart but older in body, is bothheartwarming and heartbreaking. it reminds me <strong>how fragile timeis, how every moment we spend together is precious.</strong> seeing mygrandparents, my parents, my nieces, everyone age... it's hard toaccept... and i don't want to face that reality, but, seeing how wellthey are all doing, seeing the love we share, somehow makes it easier.it's like a wave of bittersweet emotions all at once, it's complex.</p><p>i've been thinking a lot about time lately, how quickly it passes,and how i spent it. i want to be more present, to focus on what reallymatters—family, love, connection. i've started small, hiding most of mysocial media apps, and honestly, it's helping. it's a little step, butit feels like the right one. <strong>i don't want to look back andrealise i've missed out on the important things because i was too busystaring at a screen.</strong> i want to really know my family,understand them better, and love them even more. ❤️</p><p>time, please don't fly so fast... 🥺🥲😭 let me soak in these momentsjust a little longer.</p><span id="more"></span><h2 id="reading-insights-from-the-diary-of-a-ceo">Reading Insights from<strong>The Diary of a CEO</strong>:</h2><ol type="1"><li><strong>Be a Plan-A thinker</strong>: while i don't entirely agreewith this mindset, it does make sense in some situations. being a Plan-Athinker forces you to focus on your goal with no distractions—there's nobackup plan to fall back on. like the book says, "Having a backup plan,or even considering one, has been shown to potentially hinder yourperformance by making you less driven to hit your primary goal." withoutplan B, u have no choice but to work harder.</li><li><strong>Perseverance &amp; consistency</strong>: <strong>"Pain inevery walk of life is unavoidable, but the pain that we create by tryingto avoid pain is avoidable."</strong> this really resonated with me.it's a reminder that trying to avoid discomfort or pain often createsmore problems than facing it head-on.</li><li><strong>Pressure is a Privilege</strong>: stress and pressure aren'tthe same thing. while pressure can lead to stress, it can also be adriving force for growth when handled well. <strong>"Comfortable andEasy are short-term friends but long-term enemies. If you're looking forgrowth, choose the challenge."</strong> choosing challenges over comfortis what leads to real growth.</li></ol><h2 id="memories">Memories</h2><img data-src="/journal-week-10/IMG_4686.jpeg" class="large"><img data-src="/journal-week-10/IMG_4687.jpeg" class="large"><img data-src="/journal-week-10/IMG_4689.jpeg" class="large" title="grateful 🥺"><img data-src="/journal-week-10/IMG_4690.jpeg" class="large" title="fit check"><img data-src="/journal-week-10/IMG_4695.jpeg" class="large" title="company dinner at Keng Eng Kee Seafood @ Alexandra Village"><img data-src="/journal-week-10/IMG_4699.jpeg" class="large" title="this is bomb!"><img data-src="/journal-week-10/IMG_4700.jpeg" class="large"><img data-src="/journal-week-10/IMG_4701.jpeg" class="large"><img data-src="/journal-week-10/IMG_4703.jpeg" class="large"><img data-src="/journal-week-10/IMG_4704.jpeg" class="large" title="first time visiting terminal 2 at changi - sending my sis off for her business trip"><img data-src="/journal-week-10/IMG_4705.jpeg" class="large"><img data-src="/journal-week-10/IMG_4706.jpeg" class="large"><img data-src="/journal-week-10/IMG_4707.jpeg" class="large"><img data-src="/journal-week-10/IMG_4708.jpeg" class="large"><img data-src="/journal-week-10/IMG_4723.jpeg" class="large" title="was not as impressive, but still, wow."><img data-src="/journal-week-10/IMG_4742.jpeg" class="large" title="damn."><img data-src="/journal-week-10/IMG_4743.jpeg" class="large"><img data-src="/journal-week-10/IMG_4775.jpeg" class="large"><img data-src="/journal-week-10/IMG_4776.jpeg" class="large"><img data-src="/journal-week-10/IMG_4778.jpeg" class="large"><img data-src="/journal-week-10/IMG_4779.jpeg" class="large"><img data-src="/journal-week-10/IMG_4780.jpeg" class="large"><img data-src="/journal-week-10/IMG_4782.jpeg" class="large" title="home sweet home ❤️"><img data-src="/journal-week-10/IMG_4783.jpeg" class="large" title="a birthday gift for my grandpa ❤️"><img data-src="/journal-week-10/IMG_4784.jpeg" class="large">]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linked List Notebook</title>
      <link href="/linked-list-notebook/"/>
      <url>/linked-list-notebook/</url>
      
        <content type="html"><![CDATA[<h2 id="wip-...">WIP ...</h2><h2 id="how-to-reverse-a-singly-linked-list">How to reverse a SinglyLinked List</h2><p>The <code>reverseList</code> function reverses a singly linked list.It uses a <strong>dummy node</strong> to simplify the insertion of nodesat the beginning of the new list. Here's the function for reference:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val, next) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.next = (next===undefined ? null : next)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">ListNode</span>&#125; <span class="variable">head</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">ListNode</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">reverseList</span> = (<span class="params">head</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> dummy = <span class="keyword">new</span> <span class="title class_">ListNode</span>()</span><br><span class="line">    <span class="keyword">let</span> new_head = dummy;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (head !== <span class="literal">null</span>) &#123;</span><br><span class="line">        dummy.<span class="property">next</span> = <span class="keyword">new</span> <span class="title class_">ListNode</span>(head.<span class="property">val</span>, dummy.<span class="property">next</span>);</span><br><span class="line">        head = head.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> new_head.<span class="property">next</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="key-components">Key Components:</h3><ul><li><strong>Dummy Node (<code>dummy</code>)</strong>: Acts as aplaceholder to help build the reversed list.</li><li><strong>New Head (<code>new_head</code>)</strong>: Initially pointsto <code>dummy</code> and will eventually point to the head of thereversed list.</li><li><strong>Original List (<code>head</code>)</strong>: The input linkedlist that we want to reverse.</li></ul><h3 id="step-by-step-visualisation">Step-by-Step Visualisation</h3><p>Let's walk through an example to see how the function works. Supposewe have the following linked list:</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Original List:</span><br><span class="line"><span class="number">1</span> -&gt; <span class="number">2</span> -&gt; <span class="number">3</span> -&gt; <span class="literal">null</span></span><br></pre></td></tr></table></figure><h3 id="initial-setup">Initial Setup</h3><ol type="1"><li><strong>Create <code>dummy</code> and<code>new_head</code>:</strong></li></ol><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">dummy</span> -&gt;</span> null</span><br><span class="line"><span class="function"><span class="title">new_head</span> -&gt;</span> dummy</span><br></pre></td></tr></table></figure><ol start="2" type="1"><li><strong>Original List (<code>head</code>):</strong></li></ol><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head points to <span class="keyword">node</span> <span class="title">with</span> value <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="iteration-1-processing-node-with-value-1">Iteration 1:Processing Node with Value 1</h3><ol type="1"><li><strong>Create a New Node and Insert at the Beginning:</strong></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dummy.<span class="property">next</span> = <span class="keyword">new</span> <span class="title class_">ListNode</span>(head.<span class="property">val</span>, dummy.<span class="property">next</span>);</span><br></pre></td></tr></table></figure><ul><li><code>head.val</code> is <code>1</code>.</li><li><code>dummy.next</code> was <code>null</code>, so the new nodepoints to <code>null</code>.</li></ul><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dummy -&gt; <span class="number">1</span> -&gt; <span class="literal">null</span></span><br><span class="line">new_head -&gt; dummy</span><br></pre></td></tr></table></figure><ol start="2" type="1"><li><strong>Move <code>head</code> to the Next Node:</strong><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head points to <span class="keyword">node</span> <span class="title">with</span> value <span class="number">2</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="iteration-2-processing-node-with-value-2">Iteration 2:Processing Node with Value 2</h3><ol type="1"><li><strong>Create a New Node and Insert at the Beginning:</strong><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dummy.<span class="property">next</span> = <span class="keyword">new</span> <span class="title class_">ListNode</span>(head.<span class="property">val</span>, dummy.<span class="property">next</span>);</span><br></pre></td></tr></table></figure></li></ol><ul><li><code>head.val</code> is <code>2</code>.</li><li><code>dummy.next</code> is currently <code>1 -&gt; null</code>, sothe new node points to <code>1 -&gt; null</code>.</li></ul><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dummy -&gt; <span class="number">2</span> -&gt; <span class="number">1</span> -&gt; <span class="literal">null</span></span><br><span class="line">new_head -&gt; dummy</span><br></pre></td></tr></table></figure><ol start="2" type="1"><li><strong>Move <code>head</code> to the Next Node:</strong><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head points to <span class="keyword">node</span> <span class="title">with</span> value <span class="number">3</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="iteration-3-processing-node-with-value-3">Iteration 3:Processing Node with Value 3</h3><ol type="1"><li><strong>Create a New Node and Insert at the Beginning:</strong><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dummy.<span class="property">next</span> = <span class="keyword">new</span> <span class="title class_">ListNode</span>(head.<span class="property">val</span>, dummy.<span class="property">next</span>);</span><br></pre></td></tr></table></figure></li></ol><ul><li><code>head.val</code> is <code>3</code>.</li><li><code>dummy.next</code> is currently<code>2 -&gt; 1 -&gt; null</code>, so the new node points to<code>2 -&gt; 1 -&gt; null</code>.</li></ul><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dummy -&gt; <span class="number">3</span> -&gt; <span class="number">2</span> -&gt; <span class="number">1</span> -&gt; <span class="literal">null</span></span><br><span class="line">new_head -&gt; dummy</span><br></pre></td></tr></table></figure><ol start="2" type="1"><li><strong>Move <code>head</code> to the Next Node:</strong><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head <span class="keyword">is</span> now <span class="literal">null</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="final-step-returning-the-reversed-list">Final Step: Returningthe Reversed List</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> new_head.<span class="property">next</span>;</span><br></pre></td></tr></table></figure><ul><li><code>new_head</code> points to <code>dummy</code>.</li><li><code>new_head.next</code> points to<code>3 -&gt; 2 -&gt; 1 -&gt; null</code>, which is the reversedlist.</li></ul><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Reversed List:</span><br><span class="line"><span class="number">3</span> -&gt; <span class="number">2</span> -&gt; <span class="number">1</span> -&gt; <span class="literal">null</span></span><br></pre></td></tr></table></figure><h2 id="detailed-explanation-of-dummy-and-new_head">Detailed Explanationof <code>dummy</code> and <code>new_head</code></h2><h3 id="why-use-dummy">Why Use <code>dummy</code>?</h3><ul><li><strong>Simplifies Edge Cases:</strong> Using a dummy node avoidshaving to handle special cases for the head of the new list. It providesa consistent starting point.</li><li><strong>Easy Insertion:</strong> Each new node is inserted rightafter the dummy node, effectively building the reversed list byprepending nodes.</li></ul><h3 id="role-of-new_head">Role of <code>new_head</code></h3><ul><li><p><strong>Initial Assignment:</strong> <code>new_head</code> isassigned to <code>dummy</code> at the beginning.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> new_head = dummy;</span><br></pre></td></tr></table></figure></li><li><p><strong>Not Updated in the Loop:</strong> <code>new_head</code>remains pointing to <code>dummy</code> throughout the loop. This isintentional because <code>dummy.next</code> is continuously updated topoint to the new head of the reversed list.</p></li><li><p><strong>Accessing the Reversed List:</strong> After the loop,<code>new_head.next</code> points to the actual head of the reversedlist.</p></li></ul><h3 id="how-dummy.next-works">How <code>dummy.next</code> Works</h3><ul><li><p><strong>Building the List:</strong> In each iteration,<code>dummy.next</code> is updated to a new node that points to thecurrent start of the reversed list.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dummy.<span class="property">next</span> = <span class="keyword">new</span> <span class="title class_">ListNode</span>(head.<span class="property">val</span>, dummy.<span class="property">next</span>);</span><br></pre></td></tr></table></figure></li><li><p><strong>Effectively Prepending:</strong> This line creates a newnode with <code>head.val</code> and sets its <code>next</code> to thecurrent <code>dummy.next</code>, effectively inserting it at thebeginning.</p></li><li><p><strong>Maintaining the Link:</strong> Since<code>new_head</code> points to <code>dummy</code>, and<code>dummy.next</code> is always the latest node added,<code>new_head.next</code> will always point to the head of the reversedlist.</p></li></ul><h2 id="visual-summary">Visual Summary</h2><p>Let's summarise the process with a table showing the state of thelist after each iteration:</p><table><colgroup><col style="width: 12%" /><col style="width: 14%" /><col style="width: 30%" /><col style="width: 42%" /></colgroup><thead><tr class="header"><th>Iteration</th><th><code>head.val</code></th><th><code>dummy.next</code></th><th><code>new_head</code> Points To</th></tr></thead><tbody><tr class="odd"><td>Start</td><td>1</td><td><code>null</code></td><td><code>dummy -&gt; null</code></td></tr><tr class="even"><td>1</td><td>1</td><td><code>1 -&gt; null</code></td><td><code>dummy -&gt; 1 -&gt; null</code></td></tr><tr class="odd"><td>2</td><td>2</td><td><code>2 -&gt; 1 -&gt; null</code></td><td><code>dummy -&gt; 2 -&gt; 1 -&gt; null</code></td></tr><tr class="even"><td>3</td><td>3</td><td><code>3 -&gt; 2 -&gt; 1 -&gt; null</code></td><td><code>dummy -&gt; 3 -&gt; 2 -&gt; 1 -&gt; null</code></td></tr><tr class="odd"><td>End</td><td><code>null</code></td><td><code>3 -&gt; 2 -&gt; 1 -&gt; null</code></td><td><code>dummy -&gt; 3 -&gt; 2 -&gt; 1 -&gt; null</code></td></tr></tbody></table><ul><li><strong>Final Return:</strong> <code>new_head.next</code> →<code>3 -&gt; 2 -&gt; 1 -&gt; null</code></li></ul><h2 id="why-new_head-isnt-updated">Why <code>new_head</code> Isn'tUpdated</h2><ul><li><strong>Fixed Reference:</strong> <code>new_head</code> is a fixedreference to <code>dummy</code>. It doesn't need to be updated because<code>dummy.next</code> is where the dynamic changes happen.</li><li><strong>Access Point:</strong> By keeping <code>new_head</code>pointing to <code>dummy</code>, you have a consistent way to access thehead of the reversed list via <code>new_head.next</code>.</li></ul><h2 id="final-visualisation">Final Visualisation</h2><p>Here's a simplified text-based diagram showing the progression:</p><ol type="1"><li><strong>Initial:</strong></li></ol><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dummy -&gt; <span class="literal">null</span></span><br><span class="line">new_head -&gt; dummy</span><br><span class="line">head -&gt; <span class="number">1</span> -&gt; <span class="number">2</span> -&gt; <span class="number">3</span> -&gt; <span class="literal">null</span></span><br></pre></td></tr></table></figure><ol start="2" type="1"><li><strong>After Inserting 1:</strong></li></ol><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dummy -&gt; <span class="number">1</span> -&gt; <span class="literal">null</span></span><br><span class="line">new_head -&gt; dummy</span><br><span class="line">head -&gt; <span class="number">2</span> -&gt; <span class="number">3</span> -&gt; <span class="literal">null</span></span><br></pre></td></tr></table></figure><ol start="3" type="1"><li><strong>After Inserting 2:</strong></li></ol><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dummy -&gt; <span class="number">2</span> -&gt; <span class="number">1</span> -&gt; <span class="literal">null</span></span><br><span class="line">new_head -&gt; dummy</span><br><span class="line">head -&gt; <span class="number">3</span> -&gt; <span class="literal">null</span></span><br></pre></td></tr></table></figure><ol start="4" type="1"><li><strong>After Inserting 3:</strong></li></ol><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dummy -&gt; <span class="number">3</span> -&gt; <span class="number">2</span> -&gt; <span class="number">1</span> -&gt; <span class="literal">null</span></span><br><span class="line">new_head -&gt; dummy</span><br><span class="line">head -&gt; <span class="literal">null</span></span><br></pre></td></tr></table></figure><ol start="5" type="1"><li><strong>Final Reversed List Returned:</strong></li></ol><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_head.next -&gt; <span class="number">3</span> -&gt; <span class="number">2</span> -&gt; <span class="number">1</span> -&gt; <span class="literal">null</span></span><br></pre></td></tr></table></figure><h2 id="conclusion">Conclusion</h2><ul><li><strong><code>dummy</code> Node:</strong> Acts as a placeholder tosimplify the insertion process.</li><li><strong><code>new_head</code>:</strong> Keeps a fixed reference to<code>dummy</code> to access the reversed list via<code>new_head.next</code>.</li><li><strong><code>dummy.next</code>:</strong> Continuously updated topoint to the new head of the reversed list by prepending nodes.</li></ul><p>By using a dummy node and always inserting new nodes at the beginning(<code>dummy.next</code>), the function efficiently builds the reversedlist. The <code>new_head</code> remains pointing to <code>dummy</code>,ensuring that <code>new_head.next</code> always references the head ofthe reversed list.</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Data Structures &amp; Algorithms </category>
          
          <category> Notebooks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> data-structures </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 9</title>
      <link href="/journal-week-9/"/>
      <url>/journal-week-9/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><p>this past week felt pretty normal, but not in a bad way. it wasmid-autumn festival, and i had a quick gathering with my relatives. theweather, though, wasn't having it—it rained so heavily, felt like icould see things flying around! despite that, it was a good time withthe family.</p><span id="more"></span><h2 id="little-lesson">Little Lesson</h2><p>one little lesson that i relearned this week is how <strong>"If youdon't care about tiny details you'll produce bad work because good workis the culmination of hundreds of tiny details. The world's mostsuccessful people sweat the small stuff"</strong>. this really hit homefor me, especially when i think about beatboxing—something i know well.i've realised that the key to becoming great in any area, especially inbeatboxing, is focusing on the smallest details. the moments when i stepback and refine those tiny things are what push my skills to the nextlevel.</p><h2 id="memories">Memories</h2><img data-src="/journal-week-9/IMG_4592.jpeg" class="large" title="Facts."><img data-src="/journal-week-9/IMG_4578.jpeg" class="large" title="和亲戚庆祝中秋 🎑"><img data-src="/journal-week-9/IMG_4579.jpeg" class="large"><img data-src="/journal-week-9/IMG_4580.jpeg" class="large"><img data-src="/journal-week-9/IMG_4570.jpeg" class="large" title="同事从北京带回来的手信 🥺"><img data-src="/journal-week-9/IMG_4574.jpeg" class="large" title="可爱的蜡笔小新！"><img data-src="/journal-week-9/IMG_4637.jpeg" class="large" title="啊啊啊啊 🔥"><img data-src="/journal-week-9/IMG_4618.jpeg" class="large" title="午饭后、休息休息"><img data-src="/journal-week-9/IMG_4623.jpeg" class="large" title="Back to 135kg per side."><img data-src="/journal-week-9/IMG_4634.jpeg" class="large" title="OT..."><img data-src="/journal-week-9/IMG_4601.jpeg" class="large" title="同事从上海带回来的字节月饼啊啊啊 🥮 ❤️"><img data-src="/journal-week-9/IMG_4593.jpeg" class="large" title="好精致！"><img data-src="/journal-week-9/IMG_4599.jpeg" class="large" title="字在时光 月伴好梦"><img data-src="/journal-week-9/IMG_4629.jpeg" class="large"><img data-src="/journal-week-9/IMG_4646.jpeg" class="large" title="saturday is meant for sleep in!"><img data-src="/journal-week-9/IMG_4668.jpeg" class="large">]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-139: Word Break</title>
      <link href="/leetcode-139-word-break/"/>
      <url>/leetcode-139-word-break/</url>
      
        <content type="html"><![CDATA[<h2 id="word-break"><ahref="https://leetcode.com/problems/word-break/description/?envType=study-plan-v2&amp;envId=top-interview-150">139.Word Break</a></h2><ul><li><strong>Goal</strong>: Determine if a string <code>s</code> can besegmented into a space-separated sequence of one or more dictionarywords from <code>wordDict</code>.</li><li><strong>Constraints</strong>:<ul><li><code>1 &lt;= s.length &lt;= 300</code></li><li><code>1 &lt;= wordDict.length &lt;= 1000</code></li><li><code>1 &lt;= wordDict[i].length &lt;= 20</code></li><li><code>s</code> and <code>wordDict[i]</code> consist of onlylowercase English letters.</li><li>All the strings of <code>wordDict</code> are unique.</li></ul></li></ul><h3 id="understanding-the-problem">Understanding the Problem</h3><p>Given a string <code>s</code> and a list of words<code>wordDict</code>, we need to check if <code>s</code> can be brokendown into a sequence of one or more words from <code>wordDict</code>.The same word from the dictionary can be used multiple times.</p><h4 id="analogy-puzzle-pieces">Analogy: Puzzle Pieces</h4><ul><li><strong>String <code>s</code></strong>: Think of <code>s</code> as along puzzle strip.</li><li><strong>Dictionary Words (<code>wordDict</code>)</strong>: Each wordis like a puzzle piece.</li><li><strong>Goal</strong>: Use the puzzle pieces to completely cover thepuzzle strip without gaps or overlaps.</li></ul><h3 id="example">Example</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Input: s = &quot;leetcode&quot;, wordDict = [&quot;leet&quot;, &quot;code&quot;]</span><br><span class="line">Output: true</span><br><span class="line"></span><br><span class="line">Explanation:</span><br><span class="line">We can segment &quot;leetcode&quot; as &quot;leet code&quot;.</span><br></pre></td></tr></table></figure><hr /><h2 id="quick-steps-for-solving-the-problem">Quick Steps for Solving theProblem</h2><h3 id="use-dynamic-programming-dp">1. Use Dynamic Programming (DP)</h3><ul><li><strong>Define Subproblems</strong>: Determine if substrings<code>s[0..i]</code> can be segmented using <code>wordDict</code>.</li><li><strong>DP Array (<code>dp</code>)</strong>: Create an array<code>dp</code> where <code>dp[i]</code> is <code>true</code> if<code>s[0..i-1]</code> can be segmented.</li></ul><h3 id="initialise-the-dp-array">2. Initialise the DP Array</h3><ul><li>Set <code>dp[0] = true</code> since an empty string can always besegmented.</li></ul><h3 id="fill-the-dp-array">3. Fill the DP Array</h3><ul><li>For each position <code>i</code> from <code>1</code> to<code>s.length</code>:<ul><li>For each <code>j</code> from <code>max(0, i - maxWordLength)</code>to <code>i</code>:<ul><li>If <code>dp[j]</code> is <code>true</code> and<code>s[j..i-1]</code> is in <code>wordDict</code>, set<code>dp[i] = true</code> and break the inner loop.</li></ul></li></ul></li></ul><blockquote><p><code>maxWordLength</code> is a way to optimise - without it, youinner loop can go over longest length from dict.</p></blockquote><h3 id="return-the-result">4. Return the Result</h3><ul><li>Return <code>dp[s.length]</code>, which indicates whether<code>s</code> can be segmented.</li></ul><hr /><h2 id="step-by-step-implementation">Step-by-Step Implementation</h2><h3 id="initialise-variables">1. Initialise Variables</h3><ul><li><strong><code>N</code></strong>: Length of the string<code>s</code>.</li><li><strong><code>wordSet</code></strong>: A <code>Set</code> containingwords from <code>wordDict</code> for efficient lookup.</li><li><strong><code>maxWordLength</code></strong>: The maximum length ofwords in <code>wordDict</code> (denoted as<strong><code>L</code></strong>).</li></ul><h3 id="compute-maxwordlength">2. Compute<code>maxWordLength</code></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> maxWordLength = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> word <span class="keyword">of</span> wordDict) &#123;</span><br><span class="line">  maxWordLength = <span class="title class_">Math</span>.<span class="title function_">max</span>(maxWordLength, word.<span class="property">length</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="initialise-dp-array">3. Initialise DP Array</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> dp = <span class="keyword">new</span> <span class="title class_">Array</span>(N + <span class="number">1</span>).<span class="title function_">fill</span>(<span class="literal">false</span>);</span><br><span class="line">dp[<span class="number">0</span>] = <span class="literal">true</span>; <span class="comment">// Base case: empty string</span></span><br></pre></td></tr></table></figure><h3 id="fill-the-dp-array-using-dp-algorithm">4. Fill the DP Array UsingDP Algorithm</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">0</span>, i - maxWordLength); j &lt; i; j++) &#123; <span class="comment">// Directly starts off from j where fits the max word length</span></span><br><span class="line">    <span class="keyword">if</span> (dp[j] &amp;&amp; wordSet.<span class="title function_">has</span>(s.<span class="title function_">substring</span>(j, i))) &#123;</span><br><span class="line">      dp[i] = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">break</span>; <span class="comment">// Early exit for efficiency</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>e.g. if we dont break: <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">s</span>[<span class="number">0</span>:<span class="number">1</span>]: c</span><br><span class="line"><span class="attribute">s</span>[<span class="number">0</span>:<span class="number">2</span>]: ca</span><br><span class="line"><span class="attribute">s</span>[<span class="number">1</span>:<span class="number">2</span>]: a</span><br><span class="line"><span class="attribute">s</span>[<span class="number">0</span>:<span class="number">3</span>]: cat</span><br><span class="line"><span class="attribute">s</span>[<span class="number">1</span>:<span class="number">3</span>]: at // As you can see its still to look up, even tho the current dp[j] is already set to true. To be more efficient. Even there is <span class="string">&quot;ca&quot;</span>, <span class="string">&quot;at&quot;</span> in the list, this will always be true regardless.</span><br><span class="line"><span class="attribute">s</span>[<span class="number">2</span>:<span class="number">3</span>]: t</span><br><span class="line"><span class="attribute">s</span>[<span class="number">0</span>:<span class="number">4</span>]: cats</span><br></pre></td></tr></table></figure></p><p>if we break: <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">s</span>[<span class="number">0</span>:<span class="number">1</span>]: c</span><br><span class="line"><span class="attribute">s</span>[<span class="number">0</span>:<span class="number">2</span>]: ca</span><br><span class="line"><span class="attribute">s</span>[<span class="number">1</span>:<span class="number">2</span>]: a</span><br><span class="line"><span class="attribute">s</span>[<span class="number">0</span>:<span class="number">3</span>]: cat</span><br><span class="line"><span class="attribute">break</span>.</span><br><span class="line"><span class="attribute">s</span>[<span class="number">0</span>:<span class="number">4</span>]: cats</span><br><span class="line"><span class="attribute">s</span>[<span class="number">1</span>:<span class="number">5</span>]: atsa</span><br><span class="line"><span class="attribute">s</span>[<span class="number">2</span>:<span class="number">5</span>]: tsa</span><br><span class="line"><span class="attribute">s</span>[<span class="number">3</span>:<span class="number">5</span>]: sa</span><br><span class="line"><span class="attribute">s</span>[<span class="number">4</span>:<span class="number">5</span>]: a</span><br></pre></td></tr></table></figure> &gt; it optimises a lot when we dealingwith longer strings.</p><h3 id="return-the-result-1">5. Return the Result</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> dp[N];</span><br></pre></td></tr></table></figure><hr /><h2 id="javascript-implementation">JavaScript Implementation</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">s</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string[]</span>&#125; <span class="variable">wordDict</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">boolean</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> wordBreak = <span class="keyword">function</span> (<span class="params">s, wordDict</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> wordSet = <span class="keyword">new</span> <span class="title class_">Set</span>(wordDict);</span><br><span class="line">    <span class="keyword">let</span> maxWordLength = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> word <span class="keyword">of</span> wordDict) &#123;</span><br><span class="line">        maxWordLength = <span class="title class_">Math</span>.<span class="title function_">max</span>(maxWordLength, word.<span class="property">length</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// console.log(`wordSet`, wordSet)</span></span><br><span class="line">    <span class="comment">// console.log(`maxWordLength`, maxWordLength)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> N = s.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">let</span> dp = <span class="keyword">new</span> <span class="title class_">Array</span>(N + <span class="number">1</span>).<span class="title function_">fill</span>(<span class="literal">false</span>);</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">// console.log(`dp`, dp)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Dynamic programming requires checking all possible partition points to ensure correctness.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">        <span class="comment">// console.log(&quot;&gt; j:&quot;, Math.max(0, i - maxWordLength))</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">0</span>, i - maxWordLength); j &lt; i; j++) &#123;</span><br><span class="line">            <span class="keyword">let</span> subStr = s.<span class="title function_">substring</span>(j, i); <span class="comment">// i = exclusive</span></span><br><span class="line">            <span class="comment">// console.log(`s[$&#123;j&#125;:$&#123;i&#125;]:`, subStr);</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (dp[j] &amp;&amp; wordSet.<span class="title function_">has</span>(subStr)) &#123;</span><br><span class="line">                dp[i] = <span class="literal">true</span>;</span><br><span class="line">                <span class="comment">// Efficiency: The break statement exits the inner loop as soon as we find a valid segmentation for the substring s[0..i-1].</span></span><br><span class="line">                <span class="comment">// No Further Checks Needed: Once dp[i] is set to true, it means we have found at least one way to segment s[0..i-1]. Checking further j values won&#x27;t change dp[i].</span></span><br><span class="line">                <span class="comment">// console.log(&quot;break.&quot;)</span></span><br><span class="line">                <span class="keyword">break</span>; <span class="comment">// break inner loop</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// console.log(`dp: $&#123;dp&#125;`)</span></span><br><span class="line">            <span class="comment">// if (isSubStr) &#123;</span></span><br><span class="line">            <span class="comment">//     dp[i] = true;</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// console.log(`dp`, dp)</span></span><br><span class="line">    <span class="keyword">return</span> dp[N];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="time-space-complexity-expressions">Time &amp; space complexityexpressions:</h3><ul><li><strong>O(N * L)</strong>:<ul><li><strong>N</strong>: The length of the input string<code>s</code>.</li><li><strong>L</strong>: The maximum length of the words in thedictionary <code>wordDict</code>.</li></ul></li><li><strong>O(N + W)</strong>:<ul><li><strong>N</strong>: The length of the input string<code>s</code>.</li><li><strong>W</strong>: The total number of words in<code>wordDict</code>.</li></ul></li></ul><hr /><h2 id="detailed-explanation">Detailed Explanation</h2><h3 id="understanding-the-dp-array-dp">Understanding the DP Array(<code>dp</code>)</h3><ul><li><strong><code>dp[i]</code></strong>: A boolean value indicatingwhether the substring <code>s[0..i-1]</code> can be segmented into wordsfrom <code>wordDict</code>.</li></ul><h3 id="why-use-maxwordlength">Why Use <code>maxWordLength</code>?</h3><ul><li><strong>Purpose</strong>: To optimize the inner loop by limiting therange of <code>j</code>.</li><li><strong>Effect</strong>: Reduces the number of iterations, improvingthe time complexity.</li><li><strong>Definition of <code>L</code></strong>: The maximum length ofwords in <code>wordDict</code>.</li></ul><h3 id="time-and-space-complexity">Time and Space Complexity</h3><ul><li><strong>Time Complexity</strong>: O(N * L), where:<ul><li><strong>N</strong>: Length of the string <code>s</code>.</li><li><strong>L</strong>: Maximum length of the words in<code>wordDict</code>.</li></ul></li><li><strong>Space Complexity</strong>: O(N + W), where:<ul><li><strong>N</strong>: Length of the string <code>s</code> (for the<code>dp</code> array).</li><li><strong>W</strong>: Total number of words in <code>wordDict</code>(for the <code>wordSet</code>).</li></ul></li></ul><hr /><h2 id="example-walkthrough">Example Walkthrough</h2><h3 id="example-s-leetcode-worddict-leet-code">Example:<code>s = "leetcode"</code>,<code>wordDict = ["leet", "code"]</code></h3><h4 id="initialisation">Initialisation</h4><ul><li><code>N = 8</code> (length of "leetcode")</li><li><code>maxWordLength = 4</code> (max length of words in<code>wordDict</code>)</li><li><code>dp = [true, false, false, false, false, false, false, false, false]</code></li></ul><h4 id="filling-the-dp-array">Filling the DP Array</h4><ol type="1"><li><strong>i = 4</strong><ul><li><strong>j from max(0, 4 - 4) = 0 to 3</strong><ul><li><strong>j = 0</strong>: <code>s[0:4] = "leet"</code> is in<code>wordDict</code>, and <code>dp[0]</code> is <code>true</code>.</li><li>Set <code>dp[4] = true</code> and break.</li></ul></li></ul></li><li><strong>i = 8</strong><ul><li><strong>j from max(0, 8 - 4) = 4 to 7</strong><ul><li><strong>j = 4</strong>: <code>s[4:8] = "code"</code> is in<code>wordDict</code>, and <code>dp[4]</code> is <code>true</code>.</li><li>Set <code>dp[8] = true</code> and break.</li></ul></li></ul></li></ol><h4 id="final-dp-array">Final DP Array</h4><p><code>dp = [true, false, false, false, true, false, false, false, true]</code></p><h4 id="result">Result</h4><p>Since <code>dp[8] = true</code>, the string "leetcode" can besegmented.</p><hr /><h2 id="additional-notes">Additional Notes</h2><h3 id="why-use-break-in-the-inner-loop">Why Use <code>break</code> inthe Inner Loop?</h3><ul><li><strong>Efficiency</strong>: Once we find a valid segmentation atposition <code>i</code>, there's no need to check further.</li><li><strong>Early Termination</strong>: Improves performance by reducingunnecessary iterations.</li></ul><h3 id="handling-edge-cases">Handling Edge Cases</h3><ul><li><strong>Empty String</strong>: <code>dp[0] = true</code> ensuresthat we can handle an empty string.</li><li><strong>Words Longer Than <code>maxWordLength</code></strong>: Theinner loop accounts for this by starting from<code>max(0, i - maxWordLength)</code>.</li></ul><hr /><h2 id="summary">Summary</h2><ul><li><strong>Dynamic Programming</strong>: An effective approach forsolving the Word Break problem by breaking it down intosubproblems.</li><li><strong>Optimization with <code>maxWordLength</code></strong>:Limits the inner loop iterations, improving time complexity.</li><li><strong>Time Complexity</strong>: <span class="math inline">\(O(N *L)\)</span>, efficient for the given constraints; <spanclass="math inline">\(L\)</span>: The maximum length of the words in thedictionary wordDict.</li><li><strong>Space Complexity</strong>: <span class="math inline">\(O(N +W)\)</span>, acceptable given the problem size; <spanclass="math inline">\(W\)</span>: The total number of words inwordDict.</li></ul><hr /><h2 id="conclusion">Conclusion</h2><p>By understanding the dynamics of the problem and applying dynamicprogramming with appropriate optimisations, we can efficiently solve theWord Break problem. Remember to:</p><ul><li><strong>Define the DP State Clearly</strong>: Know what each elementin your DP array represents.</li><li><strong>Optimise Loops</strong>: Use variables like<code>maxWordLength</code> to reduce unnecessary computations.</li><li><strong>Practice</strong>: Apply similar strategies to other DPproblems to reinforce your understanding.</li></ul><h3 id="reminder-from-gpt">Reminder from GPT:</h3><p>Dynamic Programming (DP) is a powerful tool for solving problems withoverlapping subproblems and optimal substructure, like the Word Breakproblem. By meticulously defining subproblems, optimising iterations,and utilising appropriate data structures, you can craft efficient andeffective solutions.</p><ul><li><strong>Define Clear States</strong>: Understand what each state inyour DP array represents. Optimise Loops: Use constraints like<code>maxWordLength</code> to limit unnecessary computations.</li><li><strong>Early Exits</strong>: Implement break statements whereapplicable to enhance performance.</li><li>Keep practicing similar DP problems to reinforce these concepts, andyou'll gain deeper intuition and mastery over such algorithms.</li></ul><hr /><h2 id="practice-problems">Practice Problems</h2><p>To strengthen your understanding, consider practicing these relatedproblems:</p><ul><li><strong>LeetCode 140</strong>: Word Break II</li><li><strong>LeetCode 472</strong>: Concatenated Words</li></ul>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Coding Problems </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> javascript </tag>
            
            <tag> leetcode </tag>
            
            <tag> leetcode-medium </tag>
            
            <tag> interview-preparation </tag>
            
            <tag> dynamic-programming </tag>
            
            <tag> top-interview-150 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-97: Interleaving String</title>
      <link href="/leetcode-97-interleaving-string/"/>
      <url>/leetcode-97-interleaving-string/</url>
      
        <content type="html"><![CDATA[<h2 id="interleaving-string"><ahref="https://leetcode.com/problems/interleaving-string/">97.Interleaving String</a></h2><ul><li><strong>Goal</strong>: Determine if string <code>s3</code> is formedby an <strong>interleaving</strong> of strings <code>s1</code> and<code>s2</code>. &gt; <strong>Interleaving</strong>: Combining twostrings by merging their characters while preserving the original orderof characters from each string.</li><li><strong>Constraints</strong>:<ul><li><code>0 &lt;= s1.length, s2.length &lt;= 100</code></li><li><code>0 &lt;= s3.length &lt;= 200</code></li><li>All strings consist of lowercase English letters.</li></ul></li><li><strong>Follow-up</strong>: Can you solve it using only O(s2.length)additional memory space?</li></ul><h3 id="understanding-the-problem">Understanding the Problem</h3><p>Given three strings <code>s1</code>, <code>s2</code>, and<code>s3</code>, we need to check if <code>s3</code> can be formed byinterleaving <code>s1</code> and <code>s2</code>. An<strong>interleaving</strong> means that we can shuffle <code>s1</code>and <code>s2</code> together, maintaining the order of characters ineach string, to get <code>s3</code>.</p><h4 id="key-points">Key Points:</h4><ul><li><strong>Order Preservation</strong>: The order of characters in<code>s1</code> and <code>s2</code> must be maintained in<code>s3</code>.</li><li><strong>Interleaving</strong>: At each step, you can choose acharacter from either <code>s1</code> or <code>s2</code>.</li></ul><h3 id="example">Example</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s1 = &quot;aabcc&quot;</span><br><span class="line">s2 = &quot;dbbca&quot;</span><br><span class="line">s3 = &quot;aadbbcbcac&quot;</span><br></pre></td></tr></table></figure><blockquote><p>output: <code>true</code></p></blockquote><hr /><h2 id="quick-steps-for-solving-the-problem">Quick Steps for Solving theProblem</h2><h3 id="check-lengths">1. Check Lengths</h3><ul><li><strong>Condition</strong>: If<code>s1.length + s2.length != s3.length</code>, return<code>false</code>.</li><li><strong>Rationale</strong>: If the total length doesn't match, it'simpossible for <code>s3</code> to be an interleaving of <code>s1</code>and <code>s2</code>.</li></ul><h3 id="initialise-a-2d-dp-table">2. Initialise a 2D DP Table</h3><ul><li><strong>Purpose</strong>: Use Dynamic Programming to storesubproblem results.</li><li><strong>Structure</strong>: Create a 2D array <code>dp</code> ofsize <code>(s1.length + 1) x (s2.length + 1)</code>.</li><li><strong>Base Case</strong>: Set <code>dp[0][0] = true</code> (emptystrings can form an empty string).</li></ul><h3 id="fill-the-first-row-and-first-column">3. Fill the First Row andFirst Column</h3><ul><li><strong>First Column (<code>dp[i][0]</code>)</strong>:<ul><li><code>dp[i][0] = dp[i - 1][0] &amp;&amp; s1[i - 1] == s3[i - 1]</code></li><li><strong>Meaning</strong>: Can <code>s3</code> up to length<code>i</code> be formed by <code>s1</code> up to length<code>i</code>?</li></ul></li><li><strong>First Row (<code>dp[0][j]</code>)</strong>:<ul><li><code>dp[0][j] = dp[0][j - 1] &amp;&amp; s2[j - 1] == s3[j - 1]</code></li><li><strong>Meaning</strong>: Can <code>s3</code> up to length<code>j</code> be formed by <code>s2</code> up to length<code>j</code>?</li></ul></li></ul><h3 id="fill-the-rest-of-the-dp-table">4. Fill the Rest of the DPTable</h3><ul><li><strong>For Each Cell <code>dp[i][j]</code></strong>:<ul><li><strong>Option 1</strong>: If <code>dp[i - 1][j]</code> is<code>true</code> and <code>s1[i - 1] == s3[i + j - 1]</code>, then<code>dp[i][j] = true</code>.<ul><li><strong>Meaning</strong>: If we can form <code>s3</code> up to<code>i + j - 1</code> by adding <code>s1[i - 1]</code>.</li></ul></li><li><strong>Option 2</strong>: If <code>dp[i][j - 1]</code> is<code>true</code> and <code>s2[j - 1] == s3[i + j - 1]</code>, then<code>dp[i][j] = true</code>.<ul><li><strong>Meaning</strong>: If we can form <code>s3</code> up to<code>i + j - 1</code> by adding <code>s2[j - 1]</code>.</li></ul></li><li><strong>Else</strong>: <code>dp[i][j] = false</code>.</li></ul></li></ul><h3 id="return-the-result">5. Return the Result</h3><ul><li><strong>Answer</strong>: <code>dp[s1.length][s2.length]</code><ul><li><strong>Meaning</strong>: Whether <code>s3</code> can be formed byinterleaving <code>s1</code> and <code>s2</code>.</li></ul></li></ul><hr /><h2 id="analogy-to-simplify-understanding">Analogy to SimplifyUnderstanding</h2><p>Imagine you have two queues of characters:</p><ul><li><strong>Queue A (<code>s1</code>)</strong>: A line of people waitingin order.</li><li><strong>Queue B (<code>s2</code>)</strong>: Another line of peoplewaiting in order.</li><li><strong>Goal</strong>: Form a new line (<code>s3</code>) by mergingthese two queues, taking one person at a time from either queue, withoutchanging the order in each queue.</li></ul><p><strong>Rules</strong>:</p><ul><li>You can pick the next person from <strong>either</strong> Queue A orQueue B.</li><li>You cannot skip or rearrange people within a queue.</li><li>The final line (<code>s3</code>) must have everyone from bothqueues, in some order that respects the above rules.</li></ul><hr /><h2 id="step-by-step-implementation">Step-by-Step Implementation</h2><h3 id="check-total-length">1. Check Total Length</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (s1.<span class="property">length</span> + s2.<span class="property">length</span> !== s3.<span class="property">length</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><h3 id="initialise-dp-table">2. Initialise DP Table</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> N = s1.<span class="property">length</span>;</span><br><span class="line"><span class="keyword">const</span> M = s2.<span class="property">length</span>;</span><br><span class="line"><span class="keyword">const</span> dp = <span class="title class_">Array</span>.<span class="title function_">from</span>(&#123; <span class="attr">length</span>: N + <span class="number">1</span> &#125;, <span class="function">() =&gt;</span> <span class="keyword">new</span> <span class="title class_">Array</span>(M + <span class="number">1</span>).<span class="title function_">fill</span>(<span class="literal">false</span>));</span><br><span class="line">dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="literal">true</span>; <span class="comment">// Base case</span></span><br></pre></td></tr></table></figure><h3 id="fill-first-row-and-first-column">3. Fill First Row and FirstColumn</h3><h4 id="fill-first-column-dpi0">Fill First Column(<code>dp[i][0]</code>)</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">  dp[i][<span class="number">0</span>] = dp[i - <span class="number">1</span>][<span class="number">0</span>] &amp;&amp; s1[i - <span class="number">1</span>] === s3[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="fill-first-row-dp0j">Fill First Row (<code>dp[0][j]</code>)</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= M; j++) &#123;</span><br><span class="line">  dp[<span class="number">0</span>][j] = dp[<span class="number">0</span>][j - <span class="number">1</span>] &amp;&amp; s2[j - <span class="number">1</span>] === s3[j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="fill-the-rest-of-the-dp-table-1">4. Fill the Rest of the DPTable</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= M; j++) &#123;</span><br><span class="line">    <span class="keyword">const</span> k = i + j - <span class="number">1</span>;</span><br><span class="line">    dp[i][j] =</span><br><span class="line">      (dp[i - <span class="number">1</span>][j] &amp;&amp; s1[i - <span class="number">1</span>] === s3[k]) ||</span><br><span class="line">      (dp[i][j - <span class="number">1</span>] &amp;&amp; s2[j - <span class="number">1</span>] === s3[k]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="return-the-result-1">5. Return the Result</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> dp[N][M];</span><br></pre></td></tr></table></figure><hr /><h2 id="javascript-implementation">JavaScript Implementation</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">s1</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">s2</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">s3</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">boolean</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> isInterleave = <span class="keyword">function</span> (<span class="params">s1, s2, s3</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> N = s1.<span class="property">length</span>;</span><br><span class="line">  <span class="keyword">const</span> M = s2.<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Step 1: Check Lengths</span></span><br><span class="line">  <span class="keyword">if</span> (N + M !== s3.<span class="property">length</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Step 2: Initialise DP Table</span></span><br><span class="line">  <span class="keyword">const</span> dp = <span class="title class_">Array</span>.<span class="title function_">from</span>(&#123; <span class="attr">length</span>: N + <span class="number">1</span> &#125;, <span class="function">() =&gt;</span> <span class="keyword">new</span> <span class="title class_">Array</span>(M + <span class="number">1</span>).<span class="title function_">fill</span>(<span class="literal">false</span>));</span><br><span class="line">  dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Step 3: Fill First Row and First Column</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">    dp[i][<span class="number">0</span>] = dp[i - <span class="number">1</span>][<span class="number">0</span>] &amp;&amp; s1[i - <span class="number">1</span>] === s3[i - <span class="number">1</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= M; j++) &#123;</span><br><span class="line">    dp[<span class="number">0</span>][j] = dp[<span class="number">0</span>][j - <span class="number">1</span>] &amp;&amp; s2[j - <span class="number">1</span>] === s3[j - <span class="number">1</span>];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Step 4: Fill the Rest of the DP Table</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= N; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= M; j++) &#123;</span><br><span class="line">      <span class="keyword">const</span> k = i + j - <span class="number">1</span>;</span><br><span class="line">      dp[i][j] =</span><br><span class="line">        (dp[i - <span class="number">1</span>][j] &amp;&amp; s1[i - <span class="number">1</span>] === s3[k]) ||</span><br><span class="line">        (dp[i][j - <span class="number">1</span>] &amp;&amp; s2[j - <span class="number">1</span>] === s3[k]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Step 5: Return the Result</span></span><br><span class="line">  <span class="keyword">return</span> dp[N][M];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr /><h2 id="detailed-explanation">Detailed Explanation</h2><h3 id="understanding-the-dp-table">Understanding the DP Table</h3><ul><li><strong>Dimensions</strong>:<code>(s1.length + 1) x (s2.length + 1)</code></li><li><strong><code>dp[i][j]</code> Meaning</strong>: Whether<code>s3</code> up to length <code>i + j</code> can be formed byinterleaving <code>s1</code> up to length <code>i</code> and<code>s2</code> up to length <code>j</code>.</li></ul><h3 id="base-cases">Base Cases</h3><ul><li><strong><code>dp[0][0] = true</code></strong>: Empty <code>s1</code>and <code>s2</code> can form empty <code>s3</code>.</li><li><strong>First Row and Column</strong>:<ul><li>We check if <code>s3</code> up to length <code>i</code> or<code>j</code> matches <code>s1</code> or <code>s2</code>respectively.</li></ul></li></ul><h3 id="filling-the-dp-table">Filling the DP Table</h3><p>At each cell <code>dp[i][j]</code>, we consider twopossibilities:</p><ol type="1"><li><strong>Taking a character from <code>s1</code></strong>:<ul><li>If <code>dp[i - 1][j]</code> is <code>true</code> (we can form<code>s3</code> up to <code>i + j - 2</code> with<code>s1[0..i-2]</code> and <code>s2[0..j-1]</code>).</li><li>And if <code>s1[i - 1]</code> matches<code>s3[i + j - 1]</code>.</li></ul></li><li><strong>Taking a character from <code>s2</code></strong>:<ul><li>If <code>dp[i][j - 1]</code> is <code>true</code> (we can form<code>s3</code> up to <code>i + j - 2</code> with<code>s1[0..i-1]</code> and <code>s2[0..j-2]</code>).</li><li>And if <code>s2[j - 1]</code> matches<code>s3[i + j - 1]</code>.</li></ul></li></ol><p>If either possibility is <code>true</code>, we set<code>dp[i][j] = true</code>.</p><h3 id="example-walkthrough">Example Walkthrough</h3><p>Let's consider <code>s1 = "abc"</code>, <code>s2 = "def"</code>,<code>s3 = "adbcef"</code>.</p><ul><li><strong>dp[1][1]</strong>:<ul><li><code>dp[0][1]</code> is <code>false</code>, so first conditionfails.</li><li><code>dp[1][0]</code> is <code>true</code> and<code>s1[0] == s3[1]</code> (<code>'a' == 'd'</code>) is<code>false</code>.</li><li><code>dp[1][1]</code> remains <code>false</code>.</li></ul></li><li><strong>dp[1][2]</strong>:<ul><li>Similar checks, <code>dp[1][2]</code> remains<code>false</code>.</li></ul></li><li><strong>dp[2][1]</strong>:<ul><li><code>dp[1][1]</code> is <code>false</code>.</li><li><code>dp[2][0]</code> is <code>false</code>.</li><li><code>dp[2][1]</code> remains <code>false</code>.</li></ul></li><li><strong>dp[3][3]</strong>:<ul><li><code>dp[2][3]</code> is <code>false</code>.</li><li><code>dp[3][2]</code> is <code>true</code> and<code>s2[2] == s3[5]</code> (<code>'f' == 'f'</code>) is<code>true</code>.</li><li>So, <code>dp[3][3] = true</code>.</li></ul></li></ul><p><strong>Final Result</strong>: Since <code>dp[3][3] = true</code>,<code>s3</code> is an interleaving of <code>s1</code> and<code>s2</code>.</p><hr /><h2 id="summary">Summary</h2><ul><li><strong>Dynamic Programming</strong>: We use a 2D DP table to keeptrack of possible interleavings up to each point in <code>s1</code> and<code>s2</code>.</li><li><strong>Key Concepts</strong>:<ul><li><strong>Preserving Order</strong>: We must maintain the sequence ofcharacters in <code>s1</code> and <code>s2</code>.</li><li><strong>State Transition</strong>: Each state depends on previousstates, considering characters from <code>s1</code> and<code>s2</code>.</li></ul></li><li><strong>Analogy</strong>: Merging two queues without changing theorder within each queue.</li><li><strong>Time Complexity</strong>: O(N * M)</li><li><strong>Space Complexity</strong>: O(N * M), can be optimised toO(M)</li></ul><hr /><h2 id="further-understanding-and-tips">Further Understanding andTips</h2><h3 id="why-use-dpij">Why Use <code>dp[i][j]</code>?</h3><ul><li><strong><code>dp[i][j]</code> represents a subproblem</strong>:Whether <code>s3</code> up to length <code>i + j</code> can be formed byinterleaving <code>s1</code> up to length <code>i</code> and<code>s2</code> up to length <code>j</code>.</li><li><strong>Breaking Down the Problem</strong>: By solving smallersubproblems, we build up to the final solution.</li></ul><h3 id="handling-edge-cases">Handling Edge Cases</h3><ul><li><strong>Empty Strings</strong>: If <code>s1</code> or<code>s2</code> is empty, we need to check if <code>s3</code> matchesthe other string.</li><li><strong>Initialization</strong>: Properly initializing the first rowand column is crucial for these cases.</li></ul><h3 id="visualization">Visualization</h3><ul><li><strong>DP Table as a Grid</strong>: Visualise the DP table as agrid where each cell represents a state.</li><li><strong>Path Finding</strong>: Finding a path from<code>dp[0][0]</code> to <code>dp[N][M]</code> corresponds tointerleaving <code>s1</code> and <code>s2</code> to form<code>s3</code>.</li></ul><hr /><h2 id="practice-problems-for-2d-dynamic-programming">Practice Problemsfor 2D Dynamic Programming</h2><p>To strengthen your understanding of 2D DP, consider practicing thefollowing problems:</p><ul><li><strong>LeetCode 62</strong>: Unique Paths</li><li><strong>LeetCode 1143</strong>: Longest Common Subsequence</li><li><strong>LeetCode 221</strong>: Maximal Square</li><li><strong>LeetCode 72</strong>: Edit Distance</li></ul><hr /><h2 id="final-thoughts">Final Thoughts</h2><p>Dynamic Programming can be challenging, but breaking down the probleminto subproblems and understanding the state transitions makes itmanageable. Remember to:</p><ul><li><strong>Define the DP State Clearly</strong>: Know what each elementin your DP table represents.</li><li><strong>Initialise Properly</strong>: Base cases are crucial forcorrect results.</li><li><strong>Think Recursively</strong>: How can you build the currentstate from previous states?</li><li><strong>Practice</strong>: The more problems you solve, the betteryou'll understand DP patterns.</li></ul><p>Happy coding!</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Coding Problems </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> javascript </tag>
            
            <tag> leetcode </tag>
            
            <tag> leetcode-medium </tag>
            
            <tag> interview-preparation </tag>
            
            <tag> dynamic-programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 8</title>
      <link href="/journal-week-8/"/>
      <url>/journal-week-8/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><p>this week felt like a calm wave—steady and uneventful, but beneaththe surface, there were hidden wins. i had a briefing meeting about aproject that recently went live. hearing from the leaders that i managedto impress one of the toughest stakeholders? that hit me. hearing "youmust've done a good job" felt like the validation i didn't even realisei needed. it's that kind of praise that fuels your spirit, knowing allthe hard work really counts. 🥺</p><span id="more"></span><h2 id="reading-insights">Reading Insights</h2><p>on the reading front, i'm still deep into <strong>The Diary of aCEO</strong>, and i stumbled upon a few ideas that truly resonated withme this week:</p><ol type="1"><li><p><strong>"If you change the frame, you change yourmessage"</strong>—this is communication at its finest. i've come to seehow true this is. it's not just about having the best ideas, but HOW youdeliver them. the way you frame an idea can transform how it'sreceived—this is something i see in my day-to-day work. even the mostbrilliant idea can fall flat if it's not presented in the right context.framing is an art that can make all the difference between confusion andclarity, and it's been a game-changer for me in how i communicate atwork. it doesn't matter how brilliant or innovative you are, if youcan't frame your ideas right, they will never land with theaudience.</p></li><li><p><strong>"The easiest way to do big things is by focusing on thesmall things"</strong>—this resonates so deeply with me because itmirrors my philosophy on growth. it's easy to overlook the smalldetails, but it's in those small steps that the big leaps happen. forme, there's no shortcut to success. focusing on the little things everyday, bit by bit, is what eventually leads to achieving the big goals.and when you trust the process, even the most impossible things start tofeel within reach.</p></li><li><p><strong>"When a hobby becomes a job, the motivationdrops."</strong>-while beatboxing isn't my career, i started to feelthis shift when my team Obelisk began prepping for paid performances.the fun we used to have during our jam sessions faded a little once wehad to focus on delivering for an audience. it felt like the carefreecreativity was replaced by structured rehearsals and deadlines, makingit feel like a job. but despite this, i am pushing to keep the funalive. it's a reminder that even when passions evolve, <strong>it'simportant to hold on to the spark that started it all.</strong></p></li></ol><h2 id="visuals-of-the-week">Visuals of the Week:</h2><img data-src="/journal-week-8/IMG_4523.jpeg" class="large"><img data-src="/journal-week-8/IMG_4547.jpeg" class="large"><img data-src="/journal-week-8/IMG_4548.heic.jpeg" class="large"><img data-src="/journal-week-8/IMG_4554.jpeg" class="large">]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Greedy Algorithm: Optimal Solutions for Local Decisions</title>
      <link href="/greedy-algorithm-optimal-solutions-for-local-decisions/"/>
      <url>/greedy-algorithm-optimal-solutions-for-local-decisions/</url>
      
        <content type="html"><![CDATA[<h2 id="what-is-the-greedy-approach">What is the Greedy Approach?</h2><p>A <strong>greedy algorithm</strong> is a type of algorithmic strategywhere we make the best possible decision <strong>at each step</strong>without worrying about the future consequences. In other words, we<strong>choose the locally optimal solution</strong> at each stage withthe hope that these local solutions will lead to the <strong>globaloptimum</strong> (the best overall solution).</p><h3 id="greedy-algorithms-as-an-umbrella-term">Greedy Algorithms as anUmbrella Term</h3><p><strong>Greedy</strong> is an <strong>umbrella term</strong> used todescribe a broad class of algorithms that follow a specific strategy:making the best possible choice (local optimal choice) at each step withthe hope that this will lead to the best global solution. However, notall algorithms are greedy—only those that follow this decision-makingprocess at every step. The <strong>greedy approach</strong> is aproblem-solving paradigm, much like <strong>dynamic programming</strong>or <strong>divide and conquer</strong>. It is applied to a variety ofalgorithms across different domains, but only in scenarios where makinglocal decisions (without considering future consequences) leads to aglobally optimal solution.</p><h3id="greedy-algorithm-example-best-time-to-buy-and-sell-stock-ii">GreedyAlgorithm Example: <ahref="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/">BestTime to Buy and Sell Stock II</a></h3><p>In this context, the greedy approach makes sense because we areallowed to make multiple transactions (buy/sell as many times as wewant). So, <strong>every time there's a price increase</strong>, themost "greedy" thing to do is to sell the stock and capture the profitfrom that small increase. By summing up all the small profits, we end upwith the maximum profit. <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">prices</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> maxProfit = <span class="keyword">function</span> (<span class="params">prices</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> N = prices.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">let</span> accProfit = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i + <span class="number">1</span> == N) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">let</span> next = prices[i + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">let</span> curr = prices[i];</span><br><span class="line">        <span class="keyword">if</span> (next &gt; curr) &#123;</span><br><span class="line">            accProfit += next - curr; <span class="comment">// Take profit on every price rise</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> accProfit;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h4 id="why-is-this-a-greedy-algorithm">Why is this a GreedyAlgorithm?</h4><ol type="1"><li><strong>Immediate decisions</strong>: At every step, we check if thenext day's price is higher than today's. If it is, we "sell"immediately, taking the profit without looking further into thefuture.</li><li><strong>No looking back</strong>: Once we take the profit, we don'tgo back or reconsider the decision. We only focus on the current gain,not future possibilities.</li><li><strong>Efficient</strong>: This algorithm runs in <spanclass="math inline">\(O(n)\)</span> time, making it fast and scalable.Even though it's simple, this greedy approach guarantees the maximumprofit because it captures every price increase.</li></ol><h4 id="why-does-the-greedy-approach-work-here">Why Does the GreedyApproach Work Here?</h4><p>The greedy approach is effective because the problem allows eachlocal profit (from a price increase) to contribute directly to theoverall solution. In this scenario, there are no penalties orconstraints for making multiple transactions. Each price increaserepresents an independent opportunity for profit, and by capturing everysmall gain, the total profit is maximised. This is why the greedystrategy is both efficient and optimal—it seizes each profit opportunitywithout the need for backtracking or complex calculations.</p><h2 id="algorithms-applying-the-greedy-approach">Algorithms Applying theGreedy Approach</h2><p>The greedy approach is a well-established strategy in algorithmdesign, especially for <strong>optimisation problems</strong> wherelocal decisions lead to a globally optimal solution. This strategyfocuses on making the best choice at each step without considering theentire problem, which often results in simpler and fasteralgorithms.</p><h3 id="is-this-really-an-algorithm">Is This Really an Algorithm?</h3><p>Yes, this is a valid and efficient algorithm! The greedy approach isrecognised for its ability to solve problems that can be broken downinto smaller, independent parts. By making a series of locally optimalchoices, the algorithm can arrive at the best possible solution withoutneeding complex calculations or backtracking.</p><h3 id="why-does-it-seem-so-simple">Why Does It Seem So Simple?</h3><p>The beauty of the greedy approach is that it often leads to verysimple and efficient solutions for problems that can be broken down intosmaller, independent steps. It's one of the reasons greedy algorithmsare widely used—they're often easy to implement and very efficient, eventhough they may not always guarantee the optimal solution for everyproblem (but in this case, it does!).</p><h3 id="algorithms-using-the-greedy-approach">Algorithms Using theGreedy Approach</h3><p>Here are some well-known algorithms that fall under the greedyumbrella, with examples of problems to practice:</p><ol type="1"><li><strong>Dijkstra's Algorithm</strong> (Shortest Path in Graphs):<ul><li>At each step, Dijkstra's algorithm <strong>greedily</strong> selectsthe node with the smallest known distance from the start node.</li><li><strong>Practice Problems</strong>:<ol type="1"><li><ahref="https://leetcode.com/problems/shortest-path-in-binary-matrix/">ShortestPath in a Grid</a> — Given a binary matrix, find the shortest path fromthe top-left to the bottom-right.</li><li><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbmV0d29yay1kZWxheS10aW1lLw==">NetworkDelay Time<i class="fa fa-external-link-alt"></i></span> — Find how long it takes for all nodes to receive asignal sent from a specific node.</li><li><ahref="https://leetcode.com/problems/cheapest-flights-within-k-stops/">CheapestFlights Within K Stops</a> — Find the cheapest flight route from onecity to another within K stops.</li></ol></li></ul></li><li><strong>Prim's and Kruskal's Algorithms</strong> (Minimum SpanningTree):<ul><li><strong>Kruskal's Algorithm</strong>: Greedily adds the smallestedge that doesn't create a cycle, ensuring the minimum total weight ofedges in the spanning tree.</li><li><strong>Prim's Algorithm</strong>: Greedily adds the lowest weightedge that connects to an unvisited node.</li><li><strong>Practice Problems</strong>:<ol type="1"><li><ahref="https://leetcode.com/problems/min-cost-to-connect-all-points/">MinimumCost to Connect All Points</a> — Find the minimum cost to connect allpoints in a 2D plane.</li><li><ahref="https://leetcode.com/problems/connecting-cities-with-minimum-cost/">ConnectingCities with Minimum Cost</a> — Given cities connected by roads, find theminimum cost to connect all cities.</li><li><ahref="https://www.hackerrank.com/challenges/kruskalmstrsub/problem">MinimumSpanning Tree</a> — A classic problem involving Kruskal's algorithm tofind the minimum spanning tree of a graph.</li></ol></li></ul></li><li><strong>Huffman Coding</strong> (Data Compression):<ul><li>Greedily combines the two nodes with the smallest frequencies tobuild a <strong>prefix tree</strong>. This ensures an optimal way ofcompressing data by using shorter codes for more frequentcharacters.</li><li><strong>Practice Problems</strong>:<ol type="1"><li><ahref="https://www.hackerrank.com/challenges/tree-huffman-decoding/problem">HuffmanDecoding</a> — Implement Huffman decoding for compressed strings.</li><li><ahref="https://www.geeksforgeeks.org/optimal-file-merge-patterns/">OptimalFile Merge Patterns</a> — Find the optimal way to merge files,minimizing the total cost of merging.</li><li><ahref="https://www.geeksforgeeks.org/shannon-fano-algorithm-for-data-compression/">Shannon-FanoAlgorithm</a> — Implement a Huffman-like greedy algorithm for datacompression.</li></ol></li></ul></li><li><strong>Activity Selection Problem</strong>:<ul><li>Greedily selects the next activity that finishes the earliest,ensuring maximum non-overlapping activities in the schedule.</li><li><strong>Practice Problems</strong>:<ol type="1"><li><ahref="https://www.geeksforgeeks.org/activity-selection-problem-greedy-algo-1/">ActivitySelection</a> — Classic problem where you maximize the number ofactivities without overlap.</li><li><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvbWVldGluZy1yb29tcy1paS8=">MeetingRooms II<i class="fa fa-external-link-alt"></i></span> — Given a list of meeting time intervals, find the minimumnumber of conference rooms required.</li><li><ahref="https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended/">MaximumNumber of Events That Can Be Attended</a> — Attend the maximum number ofevents without overlaps.</li></ol></li></ul></li><li><strong>Fractional Knapsack Problem</strong>:<ul><li>Greedily chooses the item with the highest value-to-weight ratio andcontinues until the knapsack is full, ensuring maximum profit.</li><li><strong>Practice Problems</strong>:<ol type="1"><li><ahref="https://www.geeksforgeeks.org/fractional-knapsack-problem/">FractionalKnapsack</a> — Given weights and values, find the maximum value that canfit in a knapsack.</li><li><span class="exturl" data-url="aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvcGFydGl0aW9uLWxhYmVscy8=">PartitionLabels<i class="fa fa-external-link-alt"></i></span> — Partition a string into as many parts as possible such thateach letter appears in at most one part.</li><li><ahref="https://leetcode.com/problems/maximum-units-on-a-truck/">MaximumUnits on a Truck</a> — Given box types with their corresponding units,maximize the units you can load onto a truck.</li></ol></li></ul></li></ol><h3 id="why-arent-all-algorithms-greedy">Why Aren't All AlgorithmsGreedy?</h3><p>Not all problems can be optimally solved using the greedy approachbecause:</p><ul><li><strong>Greedy algorithms make decisions based on the localoptimum</strong>, which may not always result in the globaloptimum.</li><li>Some problems, like the <strong>0/1 Knapsack Problem</strong>,require considering multiple combinations of items (or solutions) toguarantee an optimal outcome, which the greedy strategy does notexplore.</li></ul><h4 id="examples-of-where-greedy-fails">Examples of where greedyfails:</h4><ul><li><strong>0/1 Knapsack Problem</strong>: A greedy strategy of pickingthe highest value-to-weight ratio may leave behind items that could haveprovided a better total value when combined with other items.</li><li><strong>Job Scheduling Problem</strong>: A greedy approach thatselects jobs based on their profit might miss an optimal schedule thatmaximizes total profit.</li></ul><p>In contrast, <strong>dynamic programming</strong> and <strong>divideand conquer</strong> algorithms systematically explore multiple options,solving subproblems and combining them for the globally optimalsolution.</p><h2id="characteristics-of-problems-suitable-for-greedy-algorithms">Characteristicsof Problems Suitable for Greedy Algorithms:</h2><ol type="1"><li><strong>Greedy Choice Property</strong>: A globally optimal solutioncan be arrived at by making a series of locally optimal choices.</li><li><strong>Optimal Substructure</strong>: The problem can be brokendown into subproblems that can be solved independently, and the solutionto the problem can be built from the solutions to the subproblems.</li></ol><p>If both of these properties hold, a greedy algorithm is likely togive you the correct solution. However, not all problems have theseproperties, and that's why greedy algorithms aren't always the rightchoice.</p><h3 id="summary">Summary:</h3><p>A <strong>greedy algorithm</strong> solves problems by making thebest possible choice at each step, without considering the broaderconsequences of those decisions. It works well for problems where localoptimal choices lead to a global optimal solution. The keycharacteristics of greedy algorithms are the <strong>Greedy ChoiceProperty</strong> (making local decisions leads to the best overallsolution) and <strong>Optimal Substructure</strong> (the problem can bebroken into smaller, solvable subproblems). Examples include<strong>Dijkstra's</strong> and <strong>Kruskal's</strong> algorithms,but greedy methods don't always work, like in the <strong>0/1 KnapsackProblem</strong>, where a dynamic programming approach is required toensure the best solution.</p><hr /><h2 id="jump-game-i-ii">Jump Game I &amp; II</h2><h3 id="greedy-algorithm-for-jump-game-i-and-ii">Greedy Algorithm forJump Game I and II</h3><p><strong>Jump Game I (LeetCode 55)</strong>: Given an array<code>nums</code>, where each element represents your maximum jumplength at that position, determine whether you can reach the last indexstarting from index 0.</p><p><strong>Jump Game II (LeetCode 45)</strong>: Similarly, given anarray <code>nums</code>, find the <strong>minimum number ofjumps</strong> required to reach the last index, starting from index0.</p><hr /><h3 id="why-use-a-greedy-approach-for-both-problems">Why Use a GreedyApproach for Both Problems?</h3><p>The greedy algorithm works for both problems because it makes<strong>locally optimal choices</strong> at each step to ensure anefficient solution. The core idea is to track how far you can jump fromeach position and decide when to commit to a jump (in the case of JumpGame II).</p><hr /><h3 id="greedy-approach-for-jump-game-i">Greedy Approach for<strong>Jump Game I</strong>:</h3><h4 id="goal">Goal:</h4><p>Determine if you can reach the last index from the startingposition.</p><h4 id="strategy">Strategy:</h4><ol type="1"><li><strong>Track Farthest Reach</strong>: As you traverse the array,keep track of the farthest point you can reach(<code>furthestIndex</code>).</li><li><strong>Check Reachability</strong>: If at any point the currentindex exceeds the farthest reachable index, return <code>false</code>since you can't proceed further.</li><li><strong>End Condition</strong>: If the farthest reachable index isgreater than or equal to the last index, return <code>true</code>.</li></ol><h4 id="code">Code:</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">boolean</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> canJump = <span class="keyword">function</span> (<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> furthestIndex = <span class="number">0</span>; <span class="comment">// Farthest index we can reach</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; nums.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt; furthestIndex) <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// If we can&#x27;t reach this index</span></span><br><span class="line">        furthestIndex = <span class="title class_">Math</span>.<span class="title function_">max</span>(furthestIndex, i + nums[i]); <span class="comment">// Update farthest reach</span></span><br><span class="line">        <span class="keyword">if</span> (furthestIndex &gt;= nums.<span class="property">length</span> - <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// If we can reach the end</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="key-points">Key Points:</h4><ul><li><strong>Locally Optimal</strong>: The algorithm checks whether youcan reach the last index by calculating the farthest index you can jumpto at each step.</li><li><strong>Efficient</strong>: Runs in <strong>O(n)</strong> time,making a single pass through the array.</li></ul><hr /><h3 id="greedy-approach-for-jump-game-ii">Greedy Approach for<strong>Jump Game II</strong>:</h3><h4 id="goal-1">Goal:</h4><p>Find the minimum number of jumps needed to reach the last index.</p><h4 id="strategy-1">Strategy:</h4><ol type="1"><li><strong>Track Farthest Reach</strong>: Just like in Jump Game I,track the farthest index you can reach(<code>furthestIndex</code>).</li><li><strong>Decide When to Jump</strong>: Keep track of when you<strong>must</strong> make a jump by monitoring the current jump's range(<code>jumpAtIndex</code>). When you reach the end of this range, make ajump and update the range to the farthest point you can reach.</li><li><strong>Early Exit</strong>: As soon as you find that you can reachor surpass the last index, return the jump count.</li></ol><h4 id="code-1">Code:</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> jump = <span class="keyword">function</span> (<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> N = nums.<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> jumpAtIndex = nums[<span class="number">0</span>]; <span class="comment">// The current jump range</span></span><br><span class="line">    <span class="keyword">let</span> furthestIndex = nums[<span class="number">0</span>]; <span class="comment">// Farthest we can reach</span></span><br><span class="line">    <span class="keyword">let</span> nbOfJump = <span class="number">1</span>; <span class="comment">// Minimum 1 jump if N &gt; 1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; N - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// Update the farthest reachable index</span></span><br><span class="line">        furthestIndex = <span class="title class_">Math</span>.<span class="title function_">max</span>(nums[i] + i, furthestIndex);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// When we reach the end of the current jump range</span></span><br><span class="line">        <span class="keyword">if</span> (jumpAtIndex === i) &#123;</span><br><span class="line">            nbOfJump++; <span class="comment">// Increment jump count</span></span><br><span class="line">            jumpAtIndex = furthestIndex; <span class="comment">// Update jump range</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// If we can reach the last index, return the jump count</span></span><br><span class="line">            <span class="keyword">if</span> (furthestIndex &gt;= N - <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> nbOfJump;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> nbOfJump;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="key-points-1">Key Points:</h4><ul><li><strong>Locally Optimal</strong>: Each time you decide to jump, youaim to reach the farthest point possible, ensuring the fewest number ofjumps.</li><li><strong>Efficient</strong>: Runs in <strong>O(n)</strong> time,making a single pass through the array.</li></ul><hr /><h3 id="summary-of-greedy-approach">Summary of Greedy Approach:</h3><ul><li><strong>Jump Game I</strong> focuses on checking whether the lastindex is reachable, while <strong>Jump Game II</strong> focuses onminimizing the number of jumps needed.</li><li>In both problems, we use the greedy strategy to <strong>track thefarthest point</strong> reachable at every step and decide when to jump(in Jump Game II).</li><li><strong>Greedy algorithms</strong> are effective here because theyallow us to make local decisions (the farthest jump at each step) thatlead to the global solution (whether we can reach the end or minimizejumps).</li></ul><p>This greedy approach ensures efficiency and correctness for bothproblems, providing an optimal solution in linear time.</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Data Structures &amp; Algorithms </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> greedy-algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-189: Rotate Array</title>
      <link href="/leetcode-189-rotate-array/"/>
      <url>/leetcode-189-rotate-array/</url>
      
        <content type="html"><![CDATA[<h2 id="rotate-array"><ahref="https://leetcode.com/problems/rotate-array/description/?envType=study-plan-v2&amp;envId=top-interview-150">189.Rotate Array</a></h2><h2 id="solution">Solution</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">k</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">void</span>&#125; Do not return anything, modify nums in-place instead.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> rotate = <span class="keyword">function</span> (<span class="params">nums, k</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> N = nums.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">let</span> startElementIndex = N - k;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Step 1: Normalise k, in case k is larger than N</span></span><br><span class="line">    <span class="comment">// console.log(`k (before)`, k);</span></span><br><span class="line">    k = k % N;</span><br><span class="line">    <span class="comment">// console.log(`k (after)`, k);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Step 2: Helper function to reverse part of the array</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">reverse</span> = (<span class="params">start, end</span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">while</span> (start &lt; end) &#123;</span><br><span class="line">            [nums[start], nums[end]] = [nums[end], nums[start]]; <span class="comment">// Swap</span></span><br><span class="line">            start++;</span><br><span class="line">            end--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Step 3: Reverse the entire array</span></span><br><span class="line">    <span class="title function_">reverse</span>(<span class="number">0</span>, N - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Step 4: Reverse the first k elements</span></span><br><span class="line">    <span class="title function_">reverse</span>(<span class="number">0</span>, k - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Step 5: Reverse the remaining N-k elements</span></span><br><span class="line">    <span class="title function_">reverse</span>(k, N - <span class="number">1</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Coding Problems </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> javascript </tag>
            
            <tag> leetcode </tag>
            
            <tag> interview-preparation </tag>
            
            <tag> leetcode-easy </tag>
            
            <tag> array-manipulation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 7</title>
      <link href="/journal-week-7/"/>
      <url>/journal-week-7/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><ul><li><strong>Work Achievement:</strong> i finally got the project i'vebeen working on published online! this was a big milestone for me.looking back, i'm proud of how i managed the stress, handled all theedge cases, and adapted to sudden changes. when i first got thisproject, it felt impossible. but it reminded me of how many "impossible"projects i've overcome before. honestly, i'm so proud of myself forpushing through it all. 🥺</li><li><strong>Family Time:</strong> this week, we said goodbye to mybrother, busy pang. i spent a lot of time with my family, which reallymade me reflect on how fast time flies. we're all adults now—my brotheris finishing his studies next year, and soon, we'll all be workingadults. it feels surreal.</li><li><strong>Beatboxing:</strong> i've had so many creative ideas thisweek for beatboxing. i started my beatbox sessions in the toilet again!this time, i'm recording myself to capture those moments of inspiration.i already have a few good ones that will help me get closer to mybeatboxing goals, and i couldn't be more excited!</li></ul><span id="more"></span><h2 id="memories">Memories</h2><img data-src="/journal-week-7/IMG_4278.jpeg" class="large"><img data-src="/journal-week-7/IMG_4282.jpeg" class="large" title="a finely-aged 10-year whisky, with a hint of oak and a nice, warm finish. just the right amount of smokiness to keep it interesting. 🤌🏼👌🏼"><img data-src="/journal-week-7/IMG_4284.jpeg" class="large"><img data-src="/journal-week-7/IMG_4285.jpeg" class="large"><img data-src="/journal-week-7/IMG_4286.jpeg" class="large"><img data-src="/journal-week-7/IMG_4288.jpeg" class="large"><img data-src="/journal-week-7/IMG_4289.jpeg" class="large"><img data-src="/journal-week-7/IMG_4294.jpeg" class="large"><img data-src="/journal-week-7/IMG_4297.jpeg" class="large"><img data-src="/journal-week-7/IMG_4300.jpeg" class="large" title="二姑做的~"><img data-src="/journal-week-7/IMG_4301.jpeg" class="large" title="竞贤送的~"><img data-src="/journal-week-7/IMG_4302.jpeg" class="large" title="装饰品很美 - 但是好像是可以泡茶的哈哈哈"><img data-src="/journal-week-7/IMG_4304.jpeg" class="large" title="时间过得最快的一晚，未尽的温馨与不舍，难以言表 😭"><img data-src="/journal-week-7/IMG_4307.jpeg" class="large" title="1st thing to do when i arrive to the office heehee"><img data-src="/journal-week-7/IMG_4313.JPG" class="large" title="some biscuits 🥱"><img data-src="/journal-week-7/IMG_4314.JPG" class="large" title="no appetite for lunch :&#x2F;"><img data-src="/journal-week-7/IMG_4315.jpeg" class="large" title="同事业务方送月饼给我们团队 🥺"><img data-src="/journal-week-7/IMG_4318.jpeg" class="large" title="my typical supper post-gym"><img data-src="/journal-week-7/IMG_4322.jpeg" class="large" title="me otw to work"><img data-src="/journal-week-7/IMG_4324.jpeg" class="large" title="first course of action at work, coffee!"><img data-src="/journal-week-7/IMG_4366.PNG" class="large" title="us saying goodbyes - me in the gym"><img data-src="/journal-week-7/IMG_4375.jpeg" class="large" title="just another normal weekend of me heading to the gym">]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Boyer-Moore Voting Algorithm: Finding the Majority Element</title>
      <link href="/boyer-moore-voting-algorithm-finding-the-majority-element/"/>
      <url>/boyer-moore-voting-algorithm-finding-the-majority-element/</url>
      
        <content type="html"><![CDATA[<h2 id="what-is-boyer-moore-voting-algorithm">What is Boyer-Moore VotingAlgorithm?</h2><p>The <strong>Boyer-Moore Voting Algorithm</strong> is a highlyefficient way to find the majority element in an array in linear time<span class="math inline">\(O(n)\)</span> and constant space <spanclass="math inline">\(O(1)\)</span>.</p><h2id="boyer-moore-voting-algorithm-simple-analogy-in-my-own-word">Boyer-MooreVoting Algorithm (Simple analogy in my own word)</h2><p>Imagine you have a notebook where you're tracking everyone's shirtcolour at a party. Each time you see a new colour, you write it down andgive it a count of 1. If you see the same colour again, you increase thecount.</p><p>If you see a different colour, you decrease the count. Eventually,when the count reaches zero, it's like saying, "I've paired off thiscolour with other colours enough times, now I'll start fresh." At thispoint, you reset the colour to whatever you're seeing now and set thecount to 1 again.</p><p>By the time you've gone through the whole crowd, you'll haveeliminated all the "balanced/matched" pairs of colours. The colour leftstanding with the positive count is the one that showed up the most—itis the majority colour.</p><h2 id="code-implementation-js">Code Implementation (JS)</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> majorityElement = <span class="keyword">function</span> (<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> N = nums.<span class="property">length</span></span><br><span class="line">    <span class="keyword">let</span> major = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">let</span> count = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; N; i++) &#123; <span class="comment">// Starts with 2nd element</span></span><br><span class="line">        <span class="keyword">if</span> (count === <span class="number">0</span>) &#123;</span><br><span class="line">            major = nums[i];</span><br><span class="line">            count = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (major === nums[i]) &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            count--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> major;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="example-walkthroughs">Example Walkthroughs</h2><h3 id="example-1">Example 1</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Input:</span> [<span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="attr">Initial candidate:</span> <span class="number">3</span><span class="string">,</span> <span class="attr">count:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Step 1:</span> <span class="string">(nums[1]</span> <span class="string">=</span> <span class="number">2</span><span class="string">)</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Current candidate:</span> <span class="number">3</span><span class="string">,</span> <span class="attr">count:</span> <span class="number">0</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Update:</span> <span class="string">new</span> <span class="string">candidate</span> <span class="string">=</span> <span class="number">2</span><span class="string">,</span> <span class="string">count</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Step 2:</span> <span class="string">(nums[2]</span> <span class="string">=</span> <span class="number">3</span><span class="string">)</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Current candidate:</span> <span class="number">2</span><span class="string">,</span> <span class="attr">count:</span> <span class="number">0</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Update:</span> <span class="string">new</span> <span class="string">candidate</span> <span class="string">=</span> <span class="number">3</span><span class="string">,</span> <span class="string">count</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Final candidate:</span> <span class="number">3</span> <span class="string">(Majority</span> <span class="string">element)</span></span><br></pre></td></tr></table></figure><h3 id="example-2">Example 2</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Input:</span> [<span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>]</span><br><span class="line"><span class="attr">Initial candidate:</span> <span class="number">2</span><span class="string">,</span> <span class="attr">count:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Step 1:</span> <span class="string">(nums[1]</span> <span class="string">=</span> <span class="number">2</span><span class="string">)</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Current candidate:</span> <span class="number">2</span><span class="string">,</span> <span class="attr">count:</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Step 2:</span> <span class="string">(nums[2]</span> <span class="string">=</span> <span class="number">1</span><span class="string">)</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Current candidate:</span> <span class="number">2</span><span class="string">,</span> <span class="attr">count:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Step 3:</span> <span class="string">(nums[3]</span> <span class="string">=</span> <span class="number">1</span><span class="string">)</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Current candidate:</span> <span class="number">2</span><span class="string">,</span> <span class="attr">count:</span> <span class="number">0</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Update:</span> <span class="string">new</span> <span class="string">candidate</span> <span class="string">=</span> <span class="number">1</span><span class="string">,</span> <span class="string">count</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Step 4:</span> <span class="string">(nums[4]</span> <span class="string">=</span> <span class="number">1</span><span class="string">)</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Current candidate:</span> <span class="number">1</span><span class="string">,</span> <span class="attr">count:</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Step 5:</span> <span class="string">(nums[5]</span> <span class="string">=</span> <span class="number">2</span><span class="string">)</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Current candidate:</span> <span class="number">1</span><span class="string">,</span> <span class="attr">count:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Step 6:</span> <span class="string">(nums[6]</span> <span class="string">=</span> <span class="number">2</span><span class="string">)</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Current candidate:</span> <span class="number">1</span><span class="string">,</span> <span class="attr">count:</span> <span class="number">0</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Update:</span> <span class="string">new</span> <span class="string">candidate</span> <span class="string">=</span> <span class="number">2</span><span class="string">,</span> <span class="string">count</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Final candidate:</span> <span class="number">2</span> <span class="string">(Majority</span> <span class="string">element)</span></span><br></pre></td></tr></table></figure><h3 id="example-3">Example 3</h3><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Input: [1]</span><br><span class="line">Initial candidate: 1, count: 1</span><br><span class="line"></span><br><span class="line">Since the<span class="built_in"> array </span>has only one element, it is trivially the majority element.</span><br><span class="line"></span><br><span class="line">Final candidate: 1 (Majority element)</span><br></pre></td></tr></table></figure><h3 id="example-4">Example 4</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Input:</span> [<span class="number">6</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">6</span>]</span><br><span class="line"><span class="attr">Initial candidate:</span> <span class="number">6</span><span class="string">,</span> <span class="attr">count:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Step 1:</span> <span class="string">(nums[1]</span> <span class="string">=</span> <span class="number">5</span><span class="string">)</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Current candidate:</span> <span class="number">6</span><span class="string">,</span> <span class="attr">count:</span> <span class="number">0</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Update:</span> <span class="string">new</span> <span class="string">candidate</span> <span class="string">=</span> <span class="number">5</span><span class="string">,</span> <span class="string">count</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Step 2:</span> <span class="string">(nums[2]</span> <span class="string">=</span> <span class="number">5</span><span class="string">)</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Current candidate:</span> <span class="number">5</span><span class="string">,</span> <span class="attr">count:</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Step 3:</span> <span class="string">(nums[3]</span> <span class="string">=</span> <span class="number">6</span><span class="string">)</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Current candidate:</span> <span class="number">5</span><span class="string">,</span> <span class="attr">count:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Step 4:</span> <span class="string">(nums[4]</span> <span class="string">=</span> <span class="number">6</span><span class="string">)</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Current candidate:</span> <span class="number">5</span><span class="string">,</span> <span class="attr">count:</span> <span class="number">0</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">Update:</span> <span class="string">new</span> <span class="string">candidate</span> <span class="string">=</span> <span class="number">6</span><span class="string">,</span> <span class="string">count</span> <span class="string">=</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Final candidate:</span> <span class="number">6</span> <span class="string">(Majority</span> <span class="string">element)</span></span><br></pre></td></tr></table></figure><h2 id="references">References</h2><ul><li><ahref="https://leetcode.com/problems/majority-element/?envType=study-plan-v2&amp;envId=top-interview-150">LeetCode:169. Majority Element</a></li><li><span class="exturl" data-url="aHR0cDovL3d3dy5jcy51dGV4YXMuZWR1L35tb29yZS9iZXN0LWlkZWFzL21qcnR5Lw==">A LinearTime Majority Vote Algorithm<i class="fa fa-external-link-alt"></i></span></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Data Structures &amp; Algorithms </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> array </tag>
            
            <tag> javascript </tag>
            
            <tag> majority-element </tag>
            
            <tag> boyer-moore </tag>
            
            <tag> voting-algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 6</title>
      <link href="/journal-week-6/"/>
      <url>/journal-week-6/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><ul><li><strong>Exploring New Experiences:</strong> this week was filledwith firsts—tried Arabica coffee for the first time, went to acandlelight concert, and spent quality time with my brother and his gf.and... it's already been 9 months at ByteDance, but it feels more than ayear, that's strange, time is quick and slow. time flies and drags atthe same time, but it also gives me a moment to reflect on how much i'vegrown.</li></ul><span id="more"></span><h2 id="little-lesson">Little Lesson</h2><p>this week, i really resonated with a couple of concepts from<strong>The Diary of a CEO</strong>. one of them is the idea of<strong>leaning into cognitive dissonance</strong>—when you experiencethat uncomfortable feeling of encountering something that doesn't alignwith what you know, instead of retreating, it's important to lean in andexplore it. this reminded me of how i've grown in my career,particularly at ByteDance. early on, i encountered a lot of situationswhere i felt out of my depth, but <strong>pushing through those momentsof discomfort is where the most growth happened</strong>. forinstance,</p><p>when i first started taking over a project that required a deepunderstanding of the business logic, it was unfamiliar and daunting atfirst. it was absolutely confusing and challenging, but by immersingmyself in it, i not only learnt how that part of the business functionsbut also developed a new approach to problem-solving.</p><h2 id="memories">Memories</h2><img data-src="/journal-week-6/IMG_4003.jpeg" class="large" title="CHIJMES"><img data-src="/journal-week-6/IMG_4005.jpeg" class="large"><img data-src="/journal-week-6/IMG_4014.jpeg" class="large" title="CHIJMES Hall"><img data-src="/journal-week-6/IMG_4144.jpeg" class="large" title="Trying Arabica Coffee for the first time!"><img data-src="/journal-week-6/IMG_4145.jpeg" class="large"><img data-src="/journal-week-6/IMG_4152.jpeg" class="large" title="The Diary of a CEO"><img data-src="/journal-week-6/IMG_4153.jpeg" class="large" title="The Diary of a CEO"><img data-src="/journal-week-6/IMG_4177.jpeg" class="large" title="When my watch is not with me ..."><img data-src="/journal-week-6/IMG_4183.jpeg" class="large" title="Walking by, thinking about it has already been 9 months? wow ..."><img data-src="/journal-week-6/IMG_4218.jpeg" class="large"><img data-src="/journal-week-6/IMG_4229.jpeg" class="large" title="Kiang Kee Bak Kut Teh - Kampung Haji Mohd Jambi, Kota Tinggi 81900 Malaysia">]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Data Structure Notebook</title>
      <link href="/data-structure-notebook/"/>
      <url>/data-structure-notebook/</url>
      
        <content type="html"><![CDATA[<h2 id="union-find-dsu">Union Find (DSU)</h2><p><ahref="https://www.geeksforgeeks.org/introduction-to-disjoint-set-data-structure-or-union-find-algorithm/">Union-Find</a>,also known as <strong>Disjoint Set Union (DSU)</strong>, is a datastructure that keeps track of a set of elements partitioned into anumber of disjoint (non-overlapping) subsets. It provides efficientmethods for two key operations: (1) <strong>Union</strong>: Merging twosubsets into a single subset. (2) <strong>Find</strong>: Determiningwhich subset a particular element is in. This can be used to check iftwo elements are in the same subset.</p><p>Union-Find is particularly useful in problems that involve<strong>finding connected components in a graph</strong>, such as<strong>detecting cycles in an undirected graph</strong>, solving<strong>connectivity problems</strong>. For instance, grouping stones inthe <ahref="https://leetcode.com/problems/most-stones-removed-with-same-row-or-column/description/">MostStones Removed with Same Row or Column</a> problem.</p><h3 id="components-of-union-find">Components of Union-Find</h3><ul><li>The <strong>Parent Array/Map</strong> keeps track of the"root/leader" or <strong>representative</strong> of each set. Initially,every element is its own parent, meaning every element is in its owndistinct set. As sets are merged (unioned), this array/map is updated toreflect which elements share the same representative.</li><li><strong>Path Compression</strong>: While performing<code>find</code>, we make the structure flatter by making each nodepoint directly to the root. This significantly speeds up futureoperations, reducing the tree height and making the amortized timecomplexity of both <code>find</code> and <code>union</code> nearlyconstant, i.e., <span class="math inline">\(O(\alpha(n))\)</span>, where<span class="math inline">\(\alpha\)</span> is the inverse Ackermannfunction.</li><li><strong>Union by Rank/Size</strong>: To keep the tree shallow andoperations fast, the smaller tree (in terms of rank or size) is usuallyattached under the root of the larger tree. <strong>Rank</strong> refersto an approximate measure of tree depth, while <strong>Size</strong>refers to the number of elements in the tree. This ensures that the treedoes not grow too deep, which would slow down future operations.</li></ul><h3 id="implementing-union-find">Implementing Union-Find</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">UnionFind</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">parent</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">rank</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Initial parent map:&quot;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>([...<span class="variable language_">this</span>.<span class="property">parent</span>]));</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Initial rank map:&quot;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>([...<span class="variable language_">this</span>.<span class="property">rank</span>]));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">add</span>(<span class="params">x</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">parent</span>.<span class="title function_">has</span>(x)) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">parent</span>.<span class="title function_">set</span>(x, x);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">rank</span>.<span class="title function_">set</span>(x, <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">find</span>(<span class="params">x</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`~~&gt; Find(<span class="subst">$&#123;x&#125;</span>)`</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Find the root of the element x</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">parent</span>.<span class="title function_">get</span>(x) !== x) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Path compression for element <span class="subst">$&#123;x&#125;</span>`</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">parent</span>.<span class="title function_">set</span>(x, <span class="variable language_">this</span>.<span class="title function_">find</span>(<span class="variable language_">this</span>.<span class="property">parent</span>.<span class="title function_">get</span>(x))); <span class="comment">// Path compression</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Find(<span class="subst">$&#123;x&#125;</span>) -&gt; Root is <span class="subst">$&#123;<span class="variable language_">this</span>.parent.get(x)&#125;</span>`</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">parent</span>.<span class="title function_">get</span>(x);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">union</span>(<span class="params">x, y</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`\nUnion(<span class="subst">$&#123;x&#125;</span>, <span class="subst">$&#123;y&#125;</span>)`</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">add</span>(x);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">add</span>(y);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Find the roots of x and y</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`~&gt; before find:`</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>([...<span class="variable language_">this</span>.<span class="property">parent</span>]));</span><br><span class="line">    <span class="keyword">let</span> rootX = <span class="variable language_">this</span>.<span class="title function_">find</span>(x);</span><br><span class="line">    <span class="keyword">let</span> rootY = <span class="variable language_">this</span>.<span class="title function_">find</span>(y);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (rootX !== rootY) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Union(<span class="subst">$&#123;x&#125;</span>, <span class="subst">$&#123;y&#125;</span>) -&gt; Already in the same set`</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> rankX = <span class="variable language_">this</span>.<span class="property">rank</span>.<span class="title function_">get</span>(rootX);</span><br><span class="line">    <span class="keyword">let</span> rankY = <span class="variable language_">this</span>.<span class="property">rank</span>.<span class="title function_">get</span>(rootY);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`rootX: <span class="subst">$&#123;rootX&#125;</span>, \nrootY: <span class="subst">$&#123;rootY&#125;</span>, \nrankX: <span class="subst">$&#123;rankX&#125;</span>, \nrankY: <span class="subst">$&#123;rankY&#125;</span>`</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`~~~&gt; after find:`</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>([...<span class="variable language_">this</span>.<span class="property">parent</span>]));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If they have different roots, perform union</span></span><br><span class="line">    <span class="keyword">if</span> (rankX &gt; rankY) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`(x &lt;- y) -&gt; Root of <span class="subst">$&#123;y&#125;</span> (root <span class="subst">$&#123;rootY&#125;</span>) attached to root <span class="subst">$&#123;rootX&#125;</span>`</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">parent</span>.<span class="title function_">set</span>(rootY, rootX);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (rankX &lt; rankY) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`(x -&gt; y) -&gt; Root of <span class="subst">$&#123;x&#125;</span> (root <span class="subst">$&#123;rootX&#125;</span>) attached to root <span class="subst">$&#123;rootY&#125;</span>`</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">parent</span>.<span class="title function_">set</span>(rootX, rootY);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`(x &lt;- y) -&gt; Roots are equal, root <span class="subst">$&#123;rootY&#125;</span> attached to root <span class="subst">$&#123;rootX&#125;</span>`</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">parent</span>.<span class="title function_">set</span>(rootY, rootX);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">rank</span>.<span class="title function_">set</span>(rootX, rankX + <span class="number">1</span>); <span class="comment">// ONLY increase the rank of the new root</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`parent:  <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify([...<span class="variable language_">this</span>.parent])&#125;</span>`</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`rank:    <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify([...<span class="variable language_">this</span>.rank])&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Path compression is a crucial optimization in Union-Find that ensuresthe data structure remains efficient over a series of operations. Itworks by flattening the tree during the find operation so that all nodesin a set point directly to the root, minimizing the depth of the treeand speeding up future operations. The example you provided demonstrateshow path compression helps keep the structure flat and efficient,particularly when combining different sets through union operations.Path compression only happens when find() is called. If find() is nevercalled on an element, that element may still point to an intermediateparent rather than directly to the root. Path compression is a keyoptimisation that helps flatten the Union-Find tree. Without it, thetree could become deep, making future operations slower. Always ensurethat find() is called when necessary to maintain an optimisedstructure.</p></blockquote><p>Without path compression, if there were many islands connected in along chain, the time complexity for each find() operation could becomequite large. With path compression, we ensure that the trees stayshallow, making future queries much faster.</p><h3 id="key-points-to-understand">Key Points to Understand</h3><h4 id="find-operation">Find Operation</h4><ul><li>In the <code>find</code> operation, if <code>x</code> is not theroot of its set, we recursively find its root and perform pathcompression by setting the parent of <code>x</code> directly to theroot.</li><li><strong>Path compression</strong> makes the tree flatter, leading tofaster future operations.</li></ul><h4 id="union-operation">Union Operation</h4><ul><li>In the <code>union</code> operation, if the roots of <code>x</code>and <code>y</code> are different, we connect them.</li><li><strong>Union by rank</strong> ensures that we always attach thesmaller tree to the larger tree, minimising the tree height andimproving efficiency.</li></ul><h4 id="time-complexity">Time Complexity</h4><ul><li>With both path compression and union by rank, the time complexityfor each operation is almost constant, <spanclass="math inline">\(O(\alpha(n))\)</span>, where <spanclass="math inline">\(\alpha\)</span> is the inverse Ackermann function,which grows very slowly.</li></ul><h3 id="example-usage">Example Usage</h3><p>To illustrate how Union-Find works, let's consider an example ofmerging sets and finding connected components.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> uf = <span class="keyword">new</span> <span class="title class_">UnionFind</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">uf.<span class="title function_">union</span>(<span class="number">1</span>, <span class="number">2</span>); <span class="comment">// Union sets containing 1 and 2</span></span><br><span class="line">uf.<span class="title function_">union</span>(<span class="number">2</span>, <span class="number">3</span>); <span class="comment">// Union sets containing 2 and 3</span></span><br><span class="line">uf.<span class="title function_">union</span>(<span class="number">4</span>, <span class="number">5</span>); <span class="comment">// Union sets containing 4 and 5</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(uf.<span class="title function_">find</span>(<span class="number">1</span>)); <span class="comment">// Should return the root of the set containing 1 (same as 2, 3)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(uf.<span class="title function_">find</span>(<span class="number">3</span>)); <span class="comment">// Should return the same root as above</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(uf.<span class="title function_">find</span>(<span class="number">4</span>)); <span class="comment">// Should return the root of the set containing 4 (same as 5)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(uf.<span class="title function_">find</span>(<span class="number">6</span>)); <span class="comment">// Should return 6, as it&#x27;s not connected to others</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Check if 1 and 3 are in the same set</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(uf.<span class="title function_">find</span>(<span class="number">1</span>) === uf.<span class="title function_">find</span>(<span class="number">3</span>)); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Check if 1 and 4 are in the same set</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(uf.<span class="title function_">find</span>(<span class="number">1</span>) === uf.<span class="title function_">find</span>(<span class="number">4</span>)); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Create an instance of UnionFind with 8 elements (0 through 7)</span></span><br><span class="line"><span class="keyword">let</span> uf = <span class="keyword">new</span> <span class="title class_">UnionFind</span>(<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Test Cases</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;\nTest Case 1: Union operations&quot;</span>);</span><br><span class="line">uf.<span class="title function_">union</span>(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">uf.<span class="title function_">union</span>(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">uf.<span class="title function_">union</span>(<span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line">uf.<span class="title function_">union</span>(<span class="number">6</span>, <span class="number">7</span>);</span><br><span class="line">uf.<span class="title function_">union</span>(<span class="number">5</span>, <span class="number">6</span>);</span><br><span class="line">uf.<span class="title function_">union</span>(<span class="number">3</span>, <span class="number">7</span>); <span class="comment">// This will connect two previously separate sets</span></span><br></pre></td></tr></table></figure><h4 id="example-number-of-islands">Example: <ahref="https://leetcode.com/problems/number-of-islands/description/">Numberof Islands</a></h4><p>While doing Number of Islands, you will hit the issue of having 2Darray, there is a trick to make 2nd input (Y) unique, by:<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> y = i * cols + j;</span><br></pre></td></tr></table></figure></p><blockquote><p>The formula <code>i * cols + j</code> converts a 2D grid position<code>(i, j)</code> into a unique 1D index by counting how many totalelements are in the rows before <code>i</code> and adding the position<code>j</code> in the current row.</p></blockquote><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="params">(<span class="number">0</span>, <span class="number">0</span>)</span> -&gt;</span> index <span class="number">0</span></span><br><span class="line"><span class="function"><span class="params">(<span class="number">0</span>, <span class="number">1</span>)</span> -&gt;</span> index <span class="number">1</span></span><br><span class="line"><span class="function"><span class="params">(<span class="number">0</span>, <span class="number">2</span>)</span> -&gt;</span> index <span class="number">2</span></span><br><span class="line"><span class="function"><span class="params">(<span class="number">1</span>, <span class="number">0</span>)</span> -&gt;</span> index <span class="number">3</span></span><br><span class="line"><span class="function"><span class="params">(<span class="number">1</span>, <span class="number">1</span>)</span> -&gt;</span> index <span class="number">4</span></span><br><span class="line"><span class="function"><span class="params">(<span class="number">1</span>, <span class="number">2</span>)</span> -&gt;</span> index <span class="number">5</span></span><br><span class="line"><span class="function"><span class="params">(<span class="number">2</span>, <span class="number">0</span>)</span> -&gt;</span> index <span class="number">6</span></span><br><span class="line"><span class="function"><span class="params">(<span class="number">2</span>, <span class="number">1</span>)</span> -&gt;</span> index <span class="number">7</span></span><br><span class="line"><span class="function"><span class="params">(<span class="number">2</span>, <span class="number">2</span>)</span> -&gt;</span> index <span class="number">8</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> grid = [</span><br><span class="line">  [<span class="string">&quot;1&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;0&quot;</span>],</span><br><span class="line">  [<span class="string">&quot;1&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;0&quot;</span>],</span><br><span class="line">  [<span class="string">&quot;0&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">print2Dto1D</span> = (<span class="params">grid</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> rows = grid.<span class="property">length</span>;</span><br><span class="line">  <span class="keyword">const</span> cols = grid[<span class="number">0</span>].<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">getIndex</span> = (<span class="params">i, j</span>) =&gt; i * cols + j;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Grid(<span class="subst">$&#123;i&#125;</span>, <span class="subst">$&#123;j&#125;</span>) = 1D index: <span class="subst">$&#123;getIndex(i, j)&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">print2Dto1D</span>(grid);</span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Grid</span>(<span class="number">0</span>, <span class="number">0</span>) = <span class="number">1</span>D index: <span class="number">0</span></span><br><span class="line"><span class="attribute">Grid</span>(<span class="number">0</span>, <span class="number">1</span>) = <span class="number">1</span>D index: <span class="number">1</span></span><br><span class="line"><span class="attribute">Grid</span>(<span class="number">0</span>, <span class="number">2</span>) = <span class="number">1</span>D index: <span class="number">2</span></span><br><span class="line"><span class="attribute">Grid</span>(<span class="number">1</span>, <span class="number">0</span>) = <span class="number">1</span>D index: <span class="number">3</span></span><br><span class="line"><span class="attribute">Grid</span>(<span class="number">1</span>, <span class="number">1</span>) = <span class="number">1</span>D index: <span class="number">4</span></span><br><span class="line"><span class="attribute">Grid</span>(<span class="number">1</span>, <span class="number">2</span>) = <span class="number">1</span>D index: <span class="number">5</span></span><br><span class="line"><span class="attribute">Grid</span>(<span class="number">2</span>, <span class="number">0</span>) = <span class="number">1</span>D index: <span class="number">6</span></span><br><span class="line"><span class="attribute">Grid</span>(<span class="number">2</span>, <span class="number">1</span>) = <span class="number">1</span>D index: <span class="number">7</span></span><br><span class="line"><span class="attribute">Grid</span>(<span class="number">2</span>, <span class="number">2</span>) = <span class="number">1</span>D index: <span class="number">8</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">numIslands</span> = (<span class="params">grid</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 0 = water</span></span><br><span class="line">    <span class="comment">// 1 = land</span></span><br><span class="line">    <span class="keyword">const</span> uf = <span class="keyword">new</span> <span class="title class_">UnionFind</span>();</span><br><span class="line">    <span class="keyword">let</span> rows = grid.<span class="property">length</span>; <span class="comment">// row</span></span><br><span class="line">    <span class="keyword">let</span> cols = grid[<span class="number">0</span>].<span class="property">length</span>; <span class="comment">// col</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">getIndex</span> = (<span class="params">i, j</span>) =&gt; (i * cols) + j;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// console.log(`uf: $&#123;uf&#125;`);</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (grid[i][j] === <span class="string">&quot;0&quot;</span>) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> currIndex = <span class="title function_">getIndex</span>(i, j);</span><br><span class="line">            <span class="comment">// add current land</span></span><br><span class="line">            uf.<span class="title function_">add</span>(currIndex);</span><br><span class="line">            <span class="comment">// right</span></span><br><span class="line">            <span class="keyword">if</span> (((j + <span class="number">1</span>) &lt; cols) &amp;&amp; grid[i][j + <span class="number">1</span>] === <span class="string">&quot;1&quot;</span>) uf.<span class="title function_">union</span>(currIndex, <span class="title function_">getIndex</span>(i, j + <span class="number">1</span>));</span><br><span class="line">            <span class="comment">// bottom</span></span><br><span class="line">            <span class="keyword">if</span> (((i + <span class="number">1</span>) &lt; rows) &amp;&amp; grid[i + <span class="number">1</span>][j] === <span class="string">&quot;1&quot;</span>) uf.<span class="title function_">union</span>(currIndex, <span class="title function_">getIndex</span>(i + <span class="number">1</span>, j));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// console.log(`uf: $&#123;uf&#125;`);</span></span><br><span class="line">    <span class="keyword">let</span> uniqueIslands = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (grid[i][j] === <span class="string">&quot;1&quot;</span>) uniqueIslands.<span class="title function_">add</span>(uf.<span class="title function_">find</span>(<span class="title function_">getIndex</span>(i, j)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// console.log(`uniqueIslands: $&#123;uniqueIslands.size&#125;`);</span></span><br><span class="line">    <span class="keyword">return</span> uniqueIslands.<span class="property">size</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="applications-of-union-find">Applications of Union-Find</h3><ul><li><strong>Connected Components</strong>: Finding how many connectedcomponents exist in a graph.</li><li><strong>Cycle Detection</strong>: Checking whether adding an edge toa graph will form a cycle.</li><li><strong>Kruskal's Algorithm</strong>: Finding the minimum spanningtree in a graph.</li></ul><h3 id="practice-with-simple-problems">Practice with SimpleProblems</h3><ol type="1"><li><strong>Friend Circles</strong>: Given a list of friendships,determine how many friend circles (connected components) exist.</li><li><strong>Number of Islands</strong>: Determine the number of islands(connected groups of 1s) in a grid.</li></ol><h3id="applying-union-find-to-the-most-stones-removed-with-same-row-or-column-problem">ApplyingUnion-Find to the "Most Stones Removed with Same Row or Column"Problem</h3><p>In the <ahref="https://leetcode.com/problems/most-stones-removed-with-same-row-or-column/description/">MostStones Removed with Same Row or Column</a> problem, we treat eachstone's row and column as unique identifiers. We use Union-Find to groupstones that share a row or column into the same connected component.Once we've grouped them, the number of stones that can be removed isequal to the total number of stones minus the number of connectedcomponents.</p><p>More: - LeetCode 261: Graph Valid Tree - LeetCode 684: RedundantConnection</p><h3 id="conclusion">Conclusion</h3><p>Union-Find is a versatile and efficient data structure for managingdisjoint sets. By understanding and practicing the basic operations andoptimisations like path compression and union by rank, you'll be able toapply it to a wide range of problems involving connectivity andcomponent finding.</p><h3 id="summary">Summary</h3><ul><li><strong>Union-Find</strong> is a powerful and efficient datastructure used to manage and find connected components.</li><li><strong>Path Compression</strong> and <strong>Union by Rank</strong>are optimizations that make Union-Find operations almost constant time,<span class="math inline">\(O(\alpha(n))\)</span>, where <spanclass="math inline">\(\alpha\)</span> is the inverse Ackermannfunction.</li><li><strong>Applications</strong>: Union-Find is widely used in problemsrelated to connectivity, such as Kruskal's algorithm for finding minimumspanning trees, finding cycles in graphs, and solving the "Most StonesRemoved with Same Row or Column" problem.</li></ul><h3 id="references">References</h3><ul><li><ahref="https://www.youtube.com/watch?v=utDu3Q7Flrw&amp;list=PLot-Xpze53ldBT_7QA8NVot219jFNr_GI">Top5 Most Common Graph Algorithms for Coding Interviews</a></li></ul><hr /><h2 id="linked-list">Linked List</h2><h3 id="types-of-linked-list">Types of Linked List</h3><ol type="1"><li><strong>Singly Linked List</strong></li><li><strong>Doubly Linked List</strong></li><li><strong>Circular Linked List</strong></li><li>Doubly Circular Linked List</li><li>Skip List</li><li>Unrolled Linked List</li><li>Multi-linked List</li><li>XOR Linked List</li><li>Self-Organizing Linked List</li><li>Tail-Linked List</li><li>Lock-Free Linked List</li><li>Multi-Level Linked List</li></ol><h4 id="singly-linked-list">Singly Linked List</h4><p>A <strong>singly linked list</strong> is the simplest form of alinked list where each node contains: - <strong>Data</strong>: The valueor information stored. - <strong>Next Pointer(<code>next</code>)</strong>: A reference to the next node in thesequence.</p><h5 id="characteristics">Characteristics</h5><ul><li><strong>Unidirectional Traversal</strong>: Can only be traversed inone direction, from head to tail.</li><li><strong>Simple Structure</strong>: Easier to implement due to havingonly one pointer per node.</li></ul><h5 id="visual-representation">Visual Representation</h5><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  [Head]</span><br><span class="line">    |</span><br><span class="line">    <span class="type">v</span></span><br><span class="line">[<span class="number">1</span> | <span class="type">Next</span>] -&gt; [<span class="number">2</span> | <span class="type">Next</span>] -&gt; [<span class="number">3</span> | <span class="type">Next</span>] -&gt; null</span><br></pre></td></tr></table></figure><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ <span class="number">1</span> | <span class="type">[ 2</span> | <span class="type">[ 3</span> | <span class="type">null</span> ] ] ]</span><br></pre></td></tr></table></figure><h5 id="operations">Operations</h5><p><strong>Insertion at Head</strong>:</p><ul><li>Create a new node.</li><li>Set its <code>next</code> to the current head.</li><li>Update head to the new node.</li></ul><p><strong>Insertion at Tail</strong>:</p><ul><li>Traverse to the last node.</li><li>Set its <code>next</code> to the new node.</li></ul><p><strong>Deletion</strong>:</p><ul><li>To delete a node, update the <code>next</code> pointer of thepreceding node to skip the deleted node.</li></ul><h5 id="use-cases">Use Cases</h5><ul><li>Implementing simple data structures like <strong>stacks</strong> and<strong>queues</strong>.</li><li>Scenarios where backward traversal isn't required.</li></ul><h5 id="pros-and-cons">Pros and Cons</h5><ul><li><strong>Pros</strong>:<ul><li>Minimal memory usage per node (only one pointer).</li><li>Simple to implement and understand.</li></ul></li><li><strong>Cons</strong>:<ul><li>Inefficient for operations that require backward traversal.</li><li>Searching for an element takes <spanclass="math inline">\(O(n)\)</span> time.</li></ul></li></ul><hr /><h4 id="doubly-linked-list">Doubly Linked List</h4><p>A <strong>doubly linked list</strong> enhances the singly linked listby adding a <strong>previous pointer (<code>prev</code>)</strong> toeach node.</p><h5 id="characteristics-1">Characteristics</h5><ul><li><strong>Bidirectional Traversal</strong>: Can traverse the list bothforward and backward.</li><li><strong>More Flexible Operations</strong>: Easier to delete nodeswithout traversing from the head.</li></ul><h5 id="visual-representation-1">Visual Representation</h5><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">null &lt;- [<span class="number">1</span> | <span class="type">Prev</span> | <span class="type">Next</span>] &lt;-&gt; [<span class="number">2</span> | <span class="type">Prev</span> | <span class="type">Next</span>] &lt;-&gt; [<span class="number">3</span> | <span class="type">Prev</span> | <span class="type">Next</span>] -&gt; null</span><br></pre></td></tr></table></figure><h5 id="operations-1">Operations</h5><ul><li><strong>Insertion</strong>:<ul><li>Similar to singly linked lists but also update the <code>prev</code>pointer of the succeeding node.</li></ul></li><li><strong>Deletion</strong>:<ul><li>Update both <code>next</code> and <code>prev</code> pointers ofadjacent nodes to exclude the target node.</li></ul></li><li><strong>Traversal</strong>:<ul><li>Can start from head and move forward or start from tail and movebackward.</li></ul></li></ul><h5 id="use-cases-1">Use Cases</h5><ul><li>Implementing <strong>browser history</strong> (back and forwardnavigation).</li><li>Applications requiring frequent insertions and deletions from bothends.</li></ul><h5 id="pros-and-cons-1">Pros and Cons</h5><ul><li><strong>Pros</strong>:<ul><li>Efficient in both directions.</li><li>Easier node deletion with a reference to the node.</li></ul></li><li><strong>Cons</strong>:<ul><li>Uses more memory per node (two pointers).</li><li>Slightly more complex to implement compared to singly linkedlists.</li></ul></li></ul><hr /><h4 id="circular-linked-list">Circular Linked List</h4><p>A <strong>circular linked list</strong> connects the last node backto the first node, forming a circle. It can be implemented as eithersingly or doubly linked.</p><h5 id="types">Types</h5><ol type="1"><li><strong>Singly Circular Linked List</strong></li><li><strong>Doubly Circular Linked List</strong></li></ol><h5 id="characteristics-2">Characteristics</h5><ul><li><strong>No <code>null</code> Terminator</strong>: The last nodepoints back to the first node.</li><li><strong>Continuous Traversal</strong>: Can cycle through the listindefinitely.</li></ul><h5 id="operations-2">Operations</h5><ul><li><strong>Insertion</strong>:<ul><li>Similar to singly or doubly linked lists but ensures the last nodepoints to the head.</li></ul></li><li><strong>Deletion</strong>:<ul><li>Requires updating pointers to maintain the circular nature.</li></ul></li><li><strong>Traversal</strong>:<ul><li>Start at any node and continue indefinitely; often requires astopping condition to prevent infinite loops.</li></ul></li></ul><h5 id="use-cases-2">Use Cases</h5><ul><li>Implementing <strong>round-robin schedulers</strong>.</li><li>Applications requiring cyclic traversal, like <strong>playlistplayers</strong> or <strong>game turns</strong>.</li></ul><h5 id="pros-and-cons-2">Pros and Cons</h5><ul><li><strong>Pros</strong>:<ul><li>Seamless cycling through elements.</li><li>Useful for applications needing continuous looping.</li></ul></li><li><strong>Cons</strong>:<ul><li>More complex termination conditions.</li><li>Potential for infinite loops if not handled carefully.</li></ul></li></ul><hr /><h3 id="pros-on-using-linked-lists">Pros on using Linked Lists</h3><ol type="1"><li><strong>Dynamic Size</strong>:<ul><li><strong>Flexibility</strong>: Easily grow or shrink in size byadding or removing nodes.</li><li><strong>Memory Efficiency</strong>: Allocate memory as needed, whichcan be more efficient for certain applications.</li></ul></li><li><strong>Ease of Insertion/Deletion</strong>:<ul><li><strong>Efficient Operations</strong>: Insertions and deletions canbe performed without shifting elements, unlike in arrays.</li><li><strong>Constant Time Operations</strong>: If you have apointer/reference to the node, operations can be done in constant time<span class="math inline">\(O(1)\)</span>.</li></ul></li></ol><h3 id="use-cases-3">Use Cases:</h3><ul><li><strong>Dynamic Memory Allocation</strong>: When the number ofelements is unpredictable.</li><li><strong>Browser Navigation</strong>: Forward and backward traversalin web browsers.</li><li><strong>Music Players</strong>: Playing songs in a playlist whereyou can add or remove songs easily.</li></ul><h3 id="comparing-linked-lists-with-arrays">Comparing Linked Lists withArrays</h3><table><colgroup><col style="width: 6%" /><col style="width: 41%" /><col style="width: 52%" /></colgroup><thead><tr class="header"><th><strong>Feature</strong></th><th><strong>Linked List</strong></th><th><strong>Array</strong></th></tr></thead><tbody><tr class="odd"><td><strong>Size</strong></td><td><strong>Dynamic</strong>: Can grow or shrink as needed withoutreallocating memory.</td><td><strong>Fixed Size</strong>: Typically has a predetermined size,especially in static arrays.</td></tr><tr class="even"><td><strong>Memory Allocation</strong></td><td><strong>Non-Contiguous</strong>: Each element (node) is allocatedseparately in memory.</td><td><strong>Contiguous</strong>: All elements are stored in consecutivememory locations.</td></tr><tr class="odd"><td><strong>Access Time</strong></td><td><strong>Sequential Access</strong>: Accessing the nth elementrequires traversing from the head, resulting in <spanclass="math inline">\(O(n)\)</span> time complexity.</td><td><strong>Random Access</strong>: Directly access any element by indexin <span class="math inline">\(O(1)\)</span> time.</td></tr><tr class="even"><td><strong>Insertion/Deletion</strong></td><td><strong>Efficient</strong>: Adding or removing elements is <spanclass="math inline">\(O(1)\)</span> if the position is known (i.e., youhave a reference to the node). Especially efficient at the beginning ormiddle.</td><td><strong>Inefficient</strong>: Inserting or deleting elements (exceptat the end in dynamic arrays) requires shifting subsequent elements,leading to <span class="math inline">\(O(n)\)</span> timecomplexity.</td></tr><tr class="odd"><td><strong>Memory Overhead</strong></td><td><strong>Extra Memory</strong>: Requires additional memory forstoring pointers (e.g., <code>next</code> and/or <code>prev</code>references) in each node.</td><td><strong>Minimal Overhead</strong>: No extra memory is needed beyondstoring the actual elements.</td></tr><tr class="even"><td><strong>Traversal</strong></td><td><strong>Flexible</strong>: Can easily traverse in one direction(singly linked) or both directions (doubly linked).</td><td><strong>Single Direction</strong>: Traversal is typically linearfrom start to end.</td></tr><tr class="odd"><td><strong>Cache Performance</strong></td><td><strong>Poor</strong>: Non-contiguous memory allocation can lead tocache misses, making traversal slower due to scattered memoryaccess.</td><td><strong>Excellent</strong>: Contiguous memory allocation enhancescache locality, resulting in faster traversal and access times.</td></tr><tr class="even"><td><strong>Implementation Complexity</strong></td><td><strong>Higher</strong>: More complex to implement due to the needto manage pointers/references and handle edge cases (e.g., inserting atthe head or tail).</td><td><strong>Lower</strong>: Simpler to implement, especially inlanguages with built-in array support.</td></tr><tr class="odd"><td><strong>Use Cases</strong></td><td>- Implementing <strong>Stacks</strong> and<strong>Queues</strong><br>- <strong>Dynamic Memory Allocation</strong>scenarios<br>- <strong>Graph Representations</strong> (e.g., adjacencylists)<br>- <strong>Undo/Redo</strong> functionality inapplications</td><td>- Situations requiring <strong>fast random access</strong> (e.g.,lookup tables)<br>- <strong>Static datasets</strong> where size doesn'tchange<br>- <strong>Matrix and multidimensional datastorage</strong><br>- <strong>Implementing other datastructures</strong> like heaps and hash tables</td></tr></tbody></table><h3 id="example-in-code">Example in Code</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ListNode</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">val = <span class="number">0</span>, next = <span class="literal">null</span></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">val</span> = val;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">next</span> = next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Definition of a Singly Linked List</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LinkedList</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">head</span> = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Insert a new node at the beginning</span></span><br><span class="line">    <span class="title function_">insertAtHead</span>(<span class="params">val</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> newNode = <span class="keyword">new</span> <span class="title class_">ListNode</span>(val, <span class="variable language_">this</span>.<span class="property">head</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">head</span> = newNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Print the list</span></span><br><span class="line">    <span class="title function_">printList</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> current = <span class="variable language_">this</span>.<span class="property">head</span>;</span><br><span class="line">        <span class="keyword">let</span> list = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">while</span> (current) &#123;</span><br><span class="line">            list += current.<span class="property">val</span> + <span class="string">&#x27; -&gt; &#x27;</span>;</span><br><span class="line">            current = current.<span class="property">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        list += <span class="string">&#x27;null&#x27;</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Usage</span></span><br><span class="line"><span class="keyword">const</span> list = <span class="keyword">new</span> <span class="title class_">LinkedList</span>();</span><br><span class="line">list.<span class="title function_">insertAtHead</span>(<span class="number">3</span>);</span><br><span class="line">list.<span class="title function_">insertAtHead</span>(<span class="number">2</span>);</span><br><span class="line">list.<span class="title function_">insertAtHead</span>(<span class="number">1</span>);</span><br><span class="line">list.<span class="title function_">printList</span>(); <span class="comment">// Output: 1 -&gt; 2 -&gt; 3 -&gt; null</span></span><br></pre></td></tr></table></figure><h3 id="wip-partition-list-problem-simple-notes">WIP: Partition ListProblem (Simple Notes)</h3><h4 id="problem"><strong>Problem</strong>:</h4><ul><li><strong>Task</strong>: Split the linked list into two parts:<ol type="1"><li><strong>Smaller part</strong>: All nodes with values <strong>lessthan <code>x</code></strong>.</li><li><strong>Larger part</strong>: All nodes with values <strong>greaterthan or equal to <code>x</code></strong>.</li></ol></li><li><strong>Goal</strong>:<ul><li>Keep the <strong>relative order</strong> of the nodes in bothparts.</li><li>Join both parts into a single list.</li></ul></li></ul><h4 id="solution-simple-story"><strong>Solution (SimpleStory)</strong>:</h4><ol type="1"><li><strong>Build two chains</strong>:<ul><li>One for <strong>small nodes</strong> (less than<code>x</code>).</li><li>One for <strong>big nodes</strong> (greater than or equal to<code>x</code>).</li></ul></li><li><strong>Process</strong>:<ul><li><strong>Traverse</strong> the linked list.</li><li><strong>Add nodes</strong> to the correct chain (either small orbig).</li></ul></li><li><strong>At the end</strong>:<ul><li><strong>Cut off</strong> the last node of the big list(<code>moreTail.next = null</code>), so there's no cycle.</li><li><strong>Join</strong> the big list to the <strong>end</strong> ofthe small list(<code>lessTail.next = equalOrMoreNodeList.next</code>).</li></ul></li><li><strong>Return</strong> the new head of the combined list.</li></ol><h4 id="story-for-easy-recall"><strong>Story for easyrecall</strong>:</h4><ul><li><strong>Think of it like making two chains of beads</strong>:<ul><li>First chain for <strong>small beads</strong>.</li><li>Second chain for <strong>big beads</strong>.</li></ul></li><li>When you're done, you <strong>cut the big chain</strong> so itdoesn't continue, then you <strong>attach the big chain</strong> to theend of the small one.</li><li>Now you have <strong>one long chain</strong> with all the smallbeads at the front, and the big ones at the end!</li></ul><h4 id="key-code"><strong>Key Code</strong>:</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> partition = <span class="keyword">function</span> (<span class="params">head, x</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> lessNodeList = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>); <span class="comment">// Chain for smaller values</span></span><br><span class="line">    <span class="keyword">let</span> equalOrMoreNodeList = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>); <span class="comment">// Chain for larger or equal values</span></span><br><span class="line">    <span class="keyword">let</span> lessTail = lessNodeList;</span><br><span class="line">    <span class="keyword">let</span> moreTail = equalOrMoreNodeList;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (head !== <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (head.<span class="property">val</span> &lt; x) &#123;</span><br><span class="line">            lessTail.<span class="property">next</span> = head;</span><br><span class="line">            lessTail = lessTail.<span class="property">next</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            moreTail.<span class="property">next</span> = head;</span><br><span class="line">            moreTail = moreTail.<span class="property">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        head = head.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    moreTail.<span class="property">next</span> = <span class="literal">null</span>; <span class="comment">// End the big chain</span></span><br><span class="line">    lessTail.<span class="property">next</span> = equalOrMoreNodeList.<span class="property">next</span>; <span class="comment">// Attach the big chain to the small chain</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> lessNodeList.<span class="property">next</span>; <span class="comment">// Return the head of the new list</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr /><h2 id="todos">TODOs</h2><ul><li><ahref="https://www.geeksforgeeks.org/trie-insert-and-search/">trie</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Data Structures &amp; Algorithms </category>
          
          <category> Notebooks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> data-structures </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-1642: Furthest Building You Can Reach</title>
      <link href="/leetcode-1642-furthest-building-you-can-reach/"/>
      <url>/leetcode-1642-furthest-building-you-can-reach/</url>
      
        <content type="html"><![CDATA[<h2 id="furthest-building-you-can-reach"><ahref="https://leetcode.com/problems/furthest-building-you-can-reach/">1642.Furthest Building You Can Reach</a></h2><h2 id="solution">Solution</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">heights</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">bricks</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">ladders</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">furthestBuilding</span> = (<span class="params">heights, bricks, ladders</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> N = heights.<span class="property">length</span>;</span><br><span class="line">    <span class="comment">// MinPriorityQueue (min-heap) to store the height differences we need to overcome</span></span><br><span class="line">    <span class="keyword">let</span> heap = <span class="keyword">new</span> <span class="title class_">MinPriorityQueue</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; N;h i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> curr = heights[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">let</span> next = heights[i];</span><br><span class="line">        <span class="keyword">let</span> diff = next - curr;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// when climbing up, we have to decide whether to use bricks or ladders.</span></span><br><span class="line">        <span class="keyword">if</span> (diff &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// store into min heap</span></span><br><span class="line">            heap.<span class="title function_">enqueue</span>(diff);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// if the heap size exceeds the number of ladders available, we need to start using bricks, also means we have encountered more gaps than we have ladders to cover</span></span><br><span class="line">            <span class="comment">// note: when we have more in heap than ladders, that is when to decide whether we can continue by checking the smallest height.</span></span><br><span class="line">            <span class="keyword">if</span> (heap.<span class="title function_">size</span>() &gt; ladders) &#123;</span><br><span class="line">                <span class="keyword">let</span> smallestHeight = heap.<span class="title function_">dequeue</span>().<span class="property">element</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (bricks &gt;= smallestHeight) &#123;</span><br><span class="line">                    bricks -= smallestHeight;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// if bricks cant cover the smallest height, that is the furtherest we can go.</span></span><br><span class="line">                    <span class="keyword">return</span> i - <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> N - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Coding Problems </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> javascript </tag>
            
            <tag> leetcode </tag>
            
            <tag> leetcode-medium </tag>
            
            <tag> interview-preparation </tag>
            
            <tag> min-heap </tag>
            
            <tag> priority-queue </tag>
            
            <tag> dynamic-programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-704: Binary Search</title>
      <link href="/leetcode-704-binary-search/"/>
      <url>/leetcode-704-binary-search/</url>
      
        <content type="html"><![CDATA[<h2 id="binary-search"><ahref="https://leetcode.com/problems/binary-search/description/?envType=study-plan-v2&amp;envId=binary-search">704.Binary Search</a></h2><ul><li><strong>Goal</strong>: Search for a <code>target</code> in a sortedarray <code>nums</code>. Return its index, or <code>-1</code> if notfound.</li><li><strong>Constraint</strong>: Must achieve <spanclass="math inline">\(O(log n)\)</span> time complexity.</li></ul><h3 id="example">Example</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [-1, 0, 3, 5, 9, 12], target = 9</span><br><span class="line">Output: 4</span><br></pre></td></tr></table></figure><h2 id="quick-steps-for-binary-search">Quick Steps for BinarySearch</h2><h3 id="initial-setup">Initial Setup</h3><ul><li>Set <code>left = 0</code>,<code>right = nums.length - 1</code>.</li></ul><h3 id="middle-calculation">Middle Calculation</h3><ul><li>Compute <code>mid = Math.floor((left + right) / 2)</code>.</li></ul><h3 id="comparison">Comparison</h3><ul><li>If <code>nums[mid] == target</code>: Return <code>mid</code>.</li><li>If <code>nums[mid] &lt; target</code>: Move <code>left</code> to<code>mid + 1</code>.</li><li>If <code>nums[mid] &gt; target</code>: Move <code>right</code> to<code>mid - 1</code>.</li></ul><h3 id="repeat">Repeat</h3><ul><li>Continue until <code>left &gt; right</code>.</li></ul><h3 id="return">Return</h3><ul><li>If found, return the index; else, return <code>-1</code>.</li></ul><h2 id="javascript-implementation">JavaScript Implementation</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> search = <span class="keyword">function</span> (<span class="params">nums, target</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> N = nums.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">let</span> l = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> r = N - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> mid = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (l &lt;= r) &#123;</span><br><span class="line">        mid = <span class="title class_">Math</span>.<span class="title function_">floor</span>((r + l) / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (nums[mid] === target) <span class="keyword">return</span> mid;</span><br><span class="line">        <span class="keyword">if</span> (nums[mid] &lt; target) &#123;</span><br><span class="line">            l = mid + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            r = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="summary">Summary</h2><ul><li><strong>Binary Search</strong>: Divide and conquer by halving thesearch space.</li><li><strong>Key Points</strong>: Efficiently narrows down the search tofind the target in <span class="math inline">\(O(log n)\)</span>time.</li></ul><h2 id="references">References</h2><ul><li><ahref="https://leetcode.com/problems/search-a-2d-matrix/submissions/1431714521/?envType=study-plan-v2&amp;envId=top-interview-150">74.Search a 2D Matrix</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Coding Problems </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> javascript </tag>
            
            <tag> leetcode </tag>
            
            <tag> interview-preparation </tag>
            
            <tag> leetcode-easy </tag>
            
            <tag> binary-search </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 5</title>
      <link href="/journal-week-5/"/>
      <url>/journal-week-5/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><ul><li><strong>Elixir Exploration:</strong> this week, i dived back intosome elixir topics and even tried deploying my app on fly.io. i'm reallyseeing the potential in elixir and its famous phoenix framework. i'mexcited to start a side project with it and relearn everything i knowabout elixir!</li><li><strong>Reading:</strong> i've been reading <em>The Diary of aCEO</em> by Steven Bartlett. one quote that really resonated with me is:"Do the thing you fear, and keep on doing it. that is the quickest andsurest way ever yet discovered to conquer fear." it's been on my mindall week and has inspired me to push through my own fears.</li></ul><h2 id="little-lesson">Little Lesson</h2><p>this week reminded me of the importance of revisiting foundationalknowledge. whether it's with elixir or in life, going back to the basicscan open up new perspectives and reignite your passion. continuouslearning and embracing the journey are key to growth.</p>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 4</title>
      <link href="/journal-week-4/"/>
      <url>/journal-week-4/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><ul><li><strong>Work:</strong> full productivity at work, got a lot of todosdone! felt really productive and even managed to get off work earlier.doing so much better compared to my last quarter where i'd be OT-ingtill 4 am.</li><li><strong>Gym:</strong> back to my usual gym routine (PPL), onlyresting a day now! getting back into my old routine feels so good!</li><li><strong>Personal Priorities:</strong> finally got some time forpersonal priorities and even squeezed in some learning!</li></ul><h2 id="little-lesson">Little Lesson</h2><p>i relearned how important it is to make notes and write down yourtodos. it's like having a second brain, which reminded me of the book"Building a Second Brain" by Tiago Forte. this book really changed mylife. it was recommended by my previous leader, Lio!</p>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 3</title>
      <link href="/journal-week-3/"/>
      <url>/journal-week-3/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><ul><li><p><strong>Family Time:</strong> my brother came back from Spainthis week, and it was both great and challenging to reconnect. he'sevolved in many ways—he's grown, learnt, and become a better version ofhimself. however, we also noticed a bit of arrogance and ego creepingin, which made our interactions a bit tense. we wanted to help him seesome of these changes, but our approach came off more like an attackthan a helpful conversation. It reminded me that even with goodintentions, the way you frame your words really matters.</p></li><li><p><strong>Communication Insight:</strong> this week, i reallylearnt the importance of how you frame what you say. It's not just abouthaving good intentions or the right message—it's about delivering thatmessage in a way that others can easily digest and understand. if youframe things poorly, you might convey the wrong meaning, leading toconfusion or even conflict. This idea resonated with me deeply,especially in the context of my work where communication and structuringinformation are crucial, just like how a well-structured JSON makes lifeeasier for the backend developers.</p></li></ul><h2 id="little-lesson">Little Lesson</h2><p>this week i was reminded that communication isn't just about what yousay but how you say it. when you frame your thoughts well, you make iteasier for others to understand and engage with your ideas. this is truein personal conversations, like the ones i had with my brother, and it'salso true in professional settings. just as a well-structured dataobject streamlines coding; clear and thoughtful communication smoothsthe path in life. it's not about giving vague, surface-levelinformation, but about sharing your thoughts in a way that makes senseand is easy to digest for others.</p>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My Domain Setup: Dynadot</title>
      <link href="/my-domain-setup-dynadot/"/>
      <url>/my-domain-setup-dynadot/</url>
      
        <content type="html"><![CDATA[<p>wip ...</p><!--## IntroductionBriefly introduce the purpose of the post. Explain why you chose Dynadot for your domain registration and what this guide will cover.## Why Dynadot?- **User-Friendly Interface:** Describe the ease of use.- **Competitive Pricing:** Mention any pricing benefits.- **Reliable Customer Support:** Share any experiences or reviews.- --><h2 id="registering-a-domain">Registering a Domain</h2><ul><li>Navigate to <span class="exturl" data-url="aHR0cHM6Ly93d3cuZHluYWRvdC5jb20v">Dynadot'sWebsite<i class="fa fa-external-link-alt"></i></span>.</li><li>Search for your desired domain name.</li><li>Proceed with the registration and payment.</li></ul><p><!-- Insert screenshot --><!-- ![Registering Domain](path_to_image.png) --></p><h2 id="configuring-dns-settings">Configuring DNS Settings</h2><ul><li>Access the DNS management panel.</li><li>Update the necessary records (A, CNAME, etc.) to point to yourhosting provider.</li></ul><p><!-- Insert screenshot --><!-- ![DNS Settings](path_to_image.png) --></p><h2 id="references">References</h2><ul><li><ahref="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site">GitHub- Managing a custom domain for your GitHub Pages site</a></li><li>https://webmail.dynadot.com/mailbox/folder.html</li></ul><!-- 3. **Integrating with Hexo**   - Update the `_config.yml` file in your Hexo project with the new domain.   - Deploy your Hexo site to ensure the changes take effect.   ```yaml   # _config.yml   url: https://www.yourdomain.com   root: /   ``` --><!-- ## Troubleshooting Common Issues- **Propagation Delays:** Explain that DNS changes might take up to 48 hours to propagate.- **SSL Certificate Setup:** Briefly touch on setting up SSL for your domain.## ConclusionSummarize the steps and reiterate the benefits of having a custom domain. Encourage readers to leave comments or reach out if they have questions.## Future UpdatesMention that the post is a work in progress (WIP) and that you plan to add more detailed instructions or cover additional topics related to domain management. -->]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Configurations </category>
          
          <category> DNS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dns </tag>
            
            <tag> hexo </tag>
            
            <tag> github-pages </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Memories: New MINI Launch 2024</title>
      <link href="/memories-new-mini-launch-2024/"/>
      <url>/memories-new-mini-launch-2024/</url>
      
        <content type="html"><![CDATA[<p>Hello everyone! Here are the photos taken by the Mini photographyteam during the event. You can also check out my previous blog postabout our performance at the launch event <ahref="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch">here</a>.</p><img data-src="/memories-new-mini-launch-2024/MINI-86.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-85.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-84.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-83.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-82.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-81.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-80.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-79.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-78.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-76.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-75.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-74.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-73.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-72.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-71.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-69.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-68.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-66.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-65.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-64.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-63.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-60.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-59.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-46.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-45.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-44.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-197.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-194.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-193.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-192.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-144.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-143.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-142.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-141.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-140.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-136.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-135.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-134.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-133.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-131.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-130.JPG" class="large"><img data-src="/memories-new-mini-launch-2024/MINI-129.JPG" class="large"><p>Enjoy the moments captured!</p>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Photography </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mini </tag>
            
            <tag> photography </tag>
            
            <tag> event </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 2</title>
      <link href="/journal-week-2/"/>
      <url>/journal-week-2/</url>
      
        <content type="html"><![CDATA[<h2 id="highlights-of-the-week">Highlights of the Week</h2><ul><li><strong>Personal update</strong>: this week was a busy week for meto migrate to my new place. renting a room in singapore is tough. i feellike a hermit crab... i skipped quite a few gym sessions because i hadto clean up and unpack stuff. from the lease that we just ended, mysister and i did not get the full deposit back, which was totallyridiculous. we were speechless but just let it go. (might update more onthis next time?)</li><li><strong>Beatboxing</strong>: oh dear, i had a bad flu this week :(didn't beat as much, but i've been progressing on my throat bass andvibration throat bass. i'm getting more and more comfortable withit!</li><li><strong>Work</strong>: i had my first ByteDance All-Hands in person!it was totally an eye-opening experience to hear the heads of eachdepartment talk about the updates of last quarter, their visions for thedepartments, products, and company.</li></ul><span id="more"></span><h2 id="little-lesson">Little Lesson</h2><p>this week i re-learnt that to have a solid and great product, youneed to be the user. you need to be in the user's shoes to actually seehow good or bad your product is. by doing this, you can get first-handfeedback and better understand your product and the overall experience,said Rubo Liang. i totally agree with this point. i learnt this keyconcept from Lio when i was working at Pixium Digital. he was my leaderand the CTO of the company. i used to build something inhuman when i wasin charge of my first few projects, even though i had a UX/UIbackground. that's strange, isn't it? and yes, i still made thosemistakes. but after listening to him, i tried to use my product andrealised, wow, he was totally right. this is a solid point and somethingto always remember as a developer, project manager, or leader.</p><img data-src="/journal-week-2/IMG_3473.png" class="large"><video width="auto" height="auto" controls><source src="/journal-week-2/IMG_3476_compressed.mp4" type="video/mp4"></video><img data-src="/journal-week-2/IMG_3482.png" class="large"><video width="auto" height="auto" controls><source src="/journal-week-2/IMG_3483_compressed.mp4" type="video/mp4"></video><!-- .post-body video -->]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Journal: Week 1</title>
      <link href="/journal-week-1/"/>
      <url>/journal-week-1/</url>
      
        <content type="html"><![CDATA[<p>i'm starting a new adventure: journalling! i want to jot down theinteresting things i learn and experience every week. hopefully, thiswill become a habit, and maybe i'll even start doing it daily.</p><p>why am i doing this? honestly, i'm not sure. but i feel like sharingmy weekly and daily discoveries with everyone could be fun andinsightful. let's see where this journey takes us!</p><h2 id="highlights-of-the-week">Highlights of the Week</h2><ul><li><strong>Beatboxing</strong>: got back into beatboxing. it felt sogood to practise again.</li><li><strong>Quality Time</strong>: caught up with an old friend andspent some cherished moments with family.</li><li><strong>Work</strong>: Productive week, amazing session and greatideas are brewing!</li></ul><h2 id="little-lesson">Little Lesson</h2><p>this week i learnt from my sister that when you want to convincesomeone on a specific topic, don't straight up jump into the concept youthink they'll agree on. first, ask if they're thinking in thatdirection. so, thinking out loud is good but always clarify first.</p>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Journals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> journal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My Crew Beatbox Performance: A Memorable Experience at the New MINI Family Launch</title>
      <link href="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/"/>
      <url>/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/</url>
      
        <content type="html"><![CDATA[<img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/fisheye-group-pic.jpeg" class="large" title="LTR: Inovity, Jonhattan, ENKR, HandFx, Varen"><p>Hello everyone! It's ENKR (Jing Hui PANG) here, and I'm thrilled toshare my recent experience at the launch event for the <ahref="https://www.press.bmwgroup.com/asia/article/detail/T0443854EN/new-look-new-attitude-new-era:-the-new-mini-family-now-available-in-singapore?language=en">newMINI family</a>. Alongside my crew, <strong>Obelisk</strong>, wedelivered three electrifying performances on 19th July 2024, at 11 am, 8pm, and 8:30 pm. Being part of this event was not just thrilling butalso a significant opportunity for personal and professional growth.</p><p>Who are we? <ahref="https://www.instagram.com/555obelisk/">Obelisk</a> is the firstbeatbox crew from Singapore, formed in 2024 by five passionatebeatboxers: Clarkceds, ENKR, HandFx, Inovity, and Varen. Together, webring a unique blend of styles and skills to every performance, pushingthe boundaries of what beatboxing can achieve.</p><h2 id="insights-from-the-event">Insights from the Event</h2><p>The launch event wasn't just about showcasing a new car; it was alearning experience filled with moments of growth and collaboration.</p><h3 id="learning-from-the-best-stage-manager---cash">Learning from theBest: Stage Manager - Cash</h3><p>One of the standout moments was working closely with Cash, the stagemanager. His expertise and deep understanding of stage management,beatbox performance, and DJ-ing were truly inspiring. Cash's versatilityand skill level are impressive, and I gained a lot from observing andcollaborating with him. He's an absolute beast in his field, and hisknowledge is vast and invaluable.</p><h3 id="team-effort-and-achievement">Team Effort and Achievement</h3><p>Despite having only close to a month and practising once or twice aweek, our team managed to deliver a performance that we are allincredibly proud of. We prepared three dynamic 15-minute sets, eachfeaturing a unique blend of songs that showcased our versatility andcreativity:</p><ol type="1"><li><strong>Mini Themed Rap Song</strong> - Lyrics written by <ahref="https://555beatboxsingapore.com/artists/minian/">Minian</a></li><li><strong>Style</strong> - Taiki Nulight, P Money, Capo Lee</li><li><strong>UP!</strong> - Forrest Frank, Connor Price - Fully arrangedby <span class="exturl" data-url="aHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9hbGNfYmJ4Lw==">ALC<i class="fa fa-external-link-alt"></i></span></li><li><strong>Hydrate</strong> - Skrillex, Flowdan, BEAM, PEEKABOO</li><li><strong>Beggin'</strong> - The Tech Thieves, Besomage, MericAgain</li><li><strong>Spinnin</strong> - Connor Price, Bens</li></ol><p>The dedication and hard work from every team member were trulyinspiring. Our collective effort and the synergy we built in such ashort time were nothing short of phenomenal. We had to meticulouslycoordinate our beats, sync our rhythms, and ensure every aspect of ourperformance was tight and cohesive. This intense collaboration andcommitment led to a performance that exceeded our expectations andbecame a highlight of my journey.</p><p>I am deeply grateful to each member of the team for their passion andperseverance. Their unwavering dedication made this achievement possibleand highlighted the power of teamwork and collaboration. This experiencehas not only strengthened our bond as a crew but also reinforced mybelief in the magic that happens when talented individuals come togetherwith a shared goal.</p><p>Thank you to everyone who contributed to making this event such asuccess. Your hard work and enthusiasm have made a lasting impact, and Icouldn't be happier with what we've accomplished together.</p><h3 id="the-energy-of-the-event">The Energy of the Event</h3><p>The atmosphere at the event was electric. The excitement of unveilingthe new all-electric MINI Cooper added a unique buzz to the air. We feltthe anticipation and the energy of the audience, which fueled ourperformance. It was a privilege to contribute to the event's successwith our beatbox performance.</p><p>However, the energy at this event was different from any performancewe've had before. We were performing for business partners, affluentindividuals, and professionals who, (i think) due to their roles, someof them might have needed to maintain a more reserved demeanour. Unlikeprevious shows where the audience's enthusiasm was more openlyexpressed, this crowd had a distinct, subdued energy.</p><p>Despite this, the audience still provided us with the energy weneeded. From the first set, we quickly realised that performing fordifferent types of crowds requires adjusting our approach to maintainthe energy on stage. For this particular audience, we found that we hadto generate and sustain the energy from within ourselves rather thanrelying on the crowd's outward reactions.</p><p>This experience taught us a valuable lesson in adaptability and stagepresence. We learnt that when faced with a more reserved audience, it iscrucial to create and maintain high energy among the performers. Thisinternal energy becomes infectious, subtly influencing the audience andenhancing the overall performance.</p><p>Adding to the challenge, the event was held in the central area of apublic mall. This required us to engage not just the VIPs seated infront of us, but also the passersby and shoppers surrounding theperformance space. It was quite fun to look around 360 degrees andconnect with a diverse audience spread all around us.</p><p>By the time we reached our second and third sets, we had fullyembraced this approach. We focused on our own synergy, feeding off eachother's enthusiasm and passion. This self-generated energy not only keptour performance dynamic but also gradually drew more visible reactionsfrom the audience. It was a powerful reminder of the importance ofperformer-driven energy and the ability to adapt to different audiencedynamics.</p><p>In conclusion, performing at the MINI Cooper launch was a unique andenriching experience. It reinforced the significance of internal energyand adaptability in delivering a captivating performance, regardless ofthe audience's initial reactions. This event will always be rememberedas a highlight in our journey, teaching us to find new ways to connectwith and energise our audience.</p><h2 id="reflections">Reflections</h2><p>This experience has reinforced the importance of teamwork,dedication, and learning from those around you. It's moments like thesethat remind me why I love what I do. The thrill of being part ofsomething bigger, the joy of collaborating with talented individuals,and the satisfaction of achieving a shared goal are truly priceless.</p><p>Being part of this event also reminded me of my previous blog post,<a href="/my-beatbox-journey-from-solitude-to-the-stage">"My BeatboxJourney: From Solitude to the Stage"</a>, where I shared how beatboxingtransformed my life. This recent experience is another milestone in thatjourney, showing how far I've come and how much I've learnt.</p><h2 id="beautiful-moments">Beautiful Moments</h2><p>Here are some beautiful moments captured during the event:</p><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3206.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3208.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3210.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3211.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3212.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3214.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3215.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3217.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3223.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3227.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3228.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3229.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3231.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3232.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3233.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3235.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3239.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3247.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3248.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3250.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3251.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3252.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3254.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3255.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3265.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3276.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3278.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3280.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3281.jpeg" class="large"><img data-src="/my-crew-beatbox-performance-a-memorable-experience-at-the-new-mini-family-launch/IMG_3282.jpeg" class="large"><p>A heartfelt thank you to <ahref="https://www.mini.com.sg/en_SG/home.html">MINI</a> and everyoneinvolved for making this event truly unforgettable. We're deeplygrateful for the opportunity!</p>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Hobbies </category>
          
          <category> Beatboxing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> beatbox </tag>
            
            <tag> beatbox-crew </tag>
            
            <tag> learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-210: Course Schedule II</title>
      <link href="/leetcode-210-course-schedule-ii/"/>
      <url>/leetcode-210-course-schedule-ii/</url>
      
        <content type="html"><![CDATA[<h2 id="course-schedule-ii"><ahref="https://leetcode.com/problems/course-schedule-ii/description/?envType=study-plan-v2&amp;envId=top-interview-150">210.Course Schedule II</a></h2><h3 id="problem-statement">Problem Statement</h3><p>There are a total of <code>numCourses</code> courses you have totake, labeled from <code>0</code> to <code>numCourses-1</code>. Somecourses may have prerequisites, given as a list<code>prerequisites</code> where <code>prerequisites[i] = [a, b]</code>indicates that you must take course <code>b</code> before course<code>a</code>.</p><p>Return the ordering of courses you should take to finish all courses.If there are multiple valid answers, return any of them. If it isimpossible to finish all courses, return an empty array.</p><h3 id="my-solution">My Solution</h3><p>To solve this problem, I used <strong>Topological Sort</strong>.Here's the step-by-step approach I took:</p><ol type="1"><li><strong>Graph Representation</strong>: Represent the courses andtheir prerequisites as a graph using an adjacency list.</li><li><strong>Indegree Array</strong>: Keep track of how manyprerequisites each course has.</li><li><strong>Queue for Zero Indegree</strong>: Process courses with zeroprerequisites first and update the indegree of their dependent coursesaccordingly.</li><li><strong>Cycle Detection</strong>: Check if all courses have beenprocessed to detect cycles.</li></ol><h2 id="what-is-topological-sort">What is Topological Sort?</h2><p>Topological Sort is a linear ordering of vertices in a directed graphsuch that for every directed edge <code>u -&gt; v</code>, vertex<code>u</code> comes before <code>v</code> in the ordering. This isparticularly useful in scenarios like scheduling tasks, courseprerequisites, or any situation where certain tasks must precedeothers.</p><ul><li><ahref="https://www.geeksforgeeks.org/topological-sorting/">GeeksForGeeks</a></li></ul><h3 id="key-concepts">Key Concepts:</h3><ol type="1"><li><strong><ahref="https://en.wikipedia.org/wiki/Directed_acyclic_graph">DirectedAcyclic Graph (DAG)</a></strong>: A graph with directed edges and nocycles. Topological sort only works on DAGs.</li><li><strong>Dependencies (Edges)</strong>: If task <code>A</code> mustbe done before task <code>B</code>, there is a directed edge from<code>A</code> to <code>B</code>.</li><li><strong>Indegree</strong>: The number of incoming edges to a node.Nodes with zero indegree can be processed immediately as they have nodependencies. <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Example: [[1, 0], [2, 0], [3, 1], [3, 2]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Graph:</span></span><br><span class="line"><span class="attribute">0</span> -&gt; <span class="number">1</span>: Course <span class="number">0</span> is a prerequisite for Course <span class="number">1</span>.</span><br><span class="line"><span class="attribute">0</span> -&gt; <span class="number">2</span>: Course <span class="number">0</span> is a prerequisite for Course <span class="number">2</span>.</span><br><span class="line"><span class="attribute">1</span> -&gt; <span class="number">3</span>: Course <span class="number">1</span> is a prerequisite for Course <span class="number">3</span>.</span><br><span class="line"><span class="attribute">2</span> -&gt; <span class="number">3</span>: Course <span class="number">2</span> is a prerequisite for Course <span class="number">3</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment"># Indegree of a course = Number of prerequisites.</span></span><br><span class="line"><span class="attribute">indegree</span>[<span class="number">0</span>] = <span class="number">0</span> (No prerequisites)</span><br><span class="line"><span class="attribute">indegree</span>[<span class="number">1</span>] = <span class="number">1</span> (Prerequisite: Course <span class="number">0</span>)</span><br><span class="line"><span class="attribute">indegree</span>[<span class="number">2</span>] = <span class="number">1</span> (Prerequisite: Course <span class="number">0</span>)</span><br><span class="line"><span class="attribute">indegree</span>[<span class="number">3</span>] = <span class="number">2</span> (Prerequisites: Courses <span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure></li></ol><h3 id="steps-to-perform-topological-sort">Steps to Perform TopologicalSort:</h3><ol type="1"><li><strong>Graph Representation</strong>: Represent the tasks anddependencies using an adjacency list.</li><li><strong>Indegree Calculation</strong>: For each task, count thenumber of dependencies it has (indegree).</li><li><strong>Queue Initialisation</strong>: Start with tasks that have nodependencies (indegree of zero).</li><li><strong>Process Tasks</strong>: Repeatedly take tasks with zeroindegree from the queue, add them to the result, and decrease theindegree of their dependent tasks. Add newly dependency-free tasks tothe queue.</li><li><strong>Check for Cycles</strong>: If all tasks are processed, avalid ordering exists. If not, there's a cycle, and a valid ordering isimpossible.</li></ol><h2 id="applying-topological-sort-to-course-schedule-ii">ApplyingTopological Sort to Course Schedule II:</h2><p>To solve the Course Schedule II problem using topological sort,follow these steps:</p><ol type="1"><li><strong>Graph Representation</strong>: Use an adjacency list torepresent courses and their prerequisites.</li><li><strong>Indegree Array</strong>: Track the number of prerequisites(indegree) for each course.</li><li><strong>Queue for Zero Indegree</strong>: Use a queue to managecourses with zero prerequisites.</li><li><strong>Topological Sort</strong>:<ul><li>Process nodes with zero indegree.</li><li>Add the course to the result list.</li><li>Reduce the indegree for all its neighbors.</li><li>Add neighbors with zero indegree to the queue.</li></ul></li><li><strong>Cycle Detection</strong>: If the number of processed coursesis less than <code>numCourses</code>, there is a cycle, and you shouldreturn an empty array.</li></ol><h3 id="example-workflow">Example Workflow:</h3><p>Consider <code>numCourses = 4</code> and<code>prerequisites = [[1, 0], [2, 0], [3, 1], [3, 2]]</code>:</p><ol type="1"><li><strong>Graph and Indegree Construction</strong>:<ul><li><code>adj = [[1, 2], [3], [3], []]</code></li><li><code>indegree = [0, 1, 1, 2]</code></li></ul></li><li><strong>Initialise Queue</strong>:<ul><li>Courses with zero indegree: <code>[0]</code></li></ul></li><li><strong>Process Courses</strong>:<ul><li>Process <code>0</code>: <code>result = [0]</code><ul><li>Decrease indegree of <code>1</code> and <code>2</code>:<code>indegree = [0, 0, 0, 2]</code></li><li>Add <code>1</code> and <code>2</code> to queue:<code>queue = [1, 2]</code></li></ul></li><li>Process <code>1</code>: <code>result = [0, 1]</code><ul><li>Decrease indegree of <code>3</code>:<code>indegree = [0, 0, 0, 1]</code></li></ul></li><li>Process <code>2</code>: <code>result = [0, 1, 2]</code><ul><li>Decrease indegree of <code>3</code>:<code>indegree = [0, 0, 0, 0]</code></li><li>Add <code>3</code> to queue: <code>queue = [3]</code></li></ul></li><li>Process <code>3</code>: <code>result = [0, 1, 2, 3]</code></li></ul></li><li><strong>Check for Cycles</strong>:<ul><li><code>result.length === numCourses</code>:<code>[0, 1, 2, 3]</code></li></ul></li></ol><h3 id="code-implementation">Code Implementation</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">numCourses</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[][]</span>&#125; <span class="variable">prerequisites</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number[]</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> findOrder = <span class="keyword">function</span> (<span class="params">numCourses, prerequisites</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> N = numCourses;</span><br><span class="line">    <span class="keyword">let</span> adj = <span class="keyword">new</span> <span class="title class_">Array</span>(N).<span class="title function_">fill</span>(<span class="literal">null</span>).<span class="title function_">map</span>(<span class="function">() =&gt;</span> []);</span><br><span class="line">    <span class="keyword">let</span> indegree = <span class="keyword">new</span> <span class="title class_">Array</span>(N).<span class="title function_">fill</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">// let = prerequisites = [[1,0],[0,1]]; // [[1,0]]</span></span><br><span class="line">    <span class="comment">// Build the graph and fill the indegree array</span></span><br><span class="line">    prerequisites.<span class="title function_">forEach</span>(<span class="function">(<span class="params">[course, pre]</span>) =&gt;</span> &#123;</span><br><span class="line">        adj[pre].<span class="title function_">push</span>(course);</span><br><span class="line">        indegree[course]++;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// console.log(&quot;adj&quot;, adj);</span></span><br><span class="line">    <span class="comment">// console.log(&quot;indegree&quot;, indegree);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Initialise the queue with courses having zero indegree</span></span><br><span class="line">    <span class="keyword">let</span> q = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (indegree[i] === <span class="number">0</span>) q.<span class="title function_">push</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;q&quot;</span>, q);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> result = [];</span><br><span class="line">    <span class="keyword">while</span> (q.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> course = q.<span class="title function_">shift</span>();</span><br><span class="line">        <span class="comment">// console.log(&quot;shifted course&quot;, course)</span></span><br><span class="line">        result.<span class="title function_">push</span>(course);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Decrease the indegree of adjacent courses</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> nextCourse <span class="keyword">of</span> adj[course]) &#123;</span><br><span class="line">            <span class="comment">// console.log(&quot;next course&quot;, nextCourse)</span></span><br><span class="line">            indegree[nextCourse]--;</span><br><span class="line">            <span class="keyword">if</span> (indegree[nextCourse] === <span class="number">0</span>) q.<span class="title function_">push</span>(nextCourse);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check if the result contains all courses</span></span><br><span class="line">    <span class="keyword">return</span> result.<span class="property">length</span> === N ? result : [];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="summary">Summary:</h2><p>Topological sort is a powerful algorithm for ordering tasks withdependencies. Recognise it by looking for prerequisite relationships andapply it by ensuring tasks are processed only when their dependenciesare met.</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Coding Problems </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> javascript </tag>
            
            <tag> leetcode </tag>
            
            <tag> leetcode-medium </tag>
            
            <tag> interview-preparation </tag>
            
            <tag> topological-sort </tag>
            
            <tag> queue </tag>
            
            <tag> adjacency-list </tag>
            
            <tag> indegree </tag>
            
            <tag> top-interview-150 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-193: Valid Phone Numbers</title>
      <link href="/leetcode-193-valid-phone-numbers/"/>
      <url>/leetcode-193-valid-phone-numbers/</url>
      
        <content type="html"><![CDATA[<h2 id="valid-phone-numbers"><ahref="https://leetcode.com/problems/valid-phone-numbers/description/">193.Valid Phone Numbers</a></h2><h2 id="solution">Solution</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -E <span class="string">&#x27;^\([0-9]&#123;3&#125;\) [0-9]&#123;3&#125;-[0-9]&#123;4&#125;$|^[0-9]&#123;3&#125;-[0-9]&#123;3&#125;-[0-9]&#123;4&#125;$&#x27;</span> file.txt</span><br></pre></td></tr></table></figure><h2 id="valid-phone-numbers-explanation">Valid Phone NumbersExplanation</h2><h3 id="correct-regular-expressions">Correct Regular Expressions</h3><p>Pattern for <code>(xxx) xxx-xxxx</code>: <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^\([0-9]&#123;3&#125;\) [0-9]&#123;3&#125;-[0-9]&#123;4&#125;$</span><br></pre></td></tr></table></figure></p><p>Pattern for <code>xxx-xxx-xxxx</code>: <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^[0-9]&#123;3&#125;-[0-9]&#123;3&#125;-[0-9]&#123;4&#125;$</span><br></pre></td></tr></table></figure></p><h3 id="example-workflow">Example Workflow</h3><p>Given the input file <code>file.txt</code> containing:<figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">987-123-4567</span><br><span class="line">123 456 7890</span><br><span class="line">(123) 456-7890</span><br><span class="line">text 123-456-7890</span><br><span class="line">(123) 456-7890 text</span><br></pre></td></tr></table></figure></p><p>The command processes it as follows: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -E <span class="string">&#x27;^\([0-9]&#123;3&#125;\) [0-9]&#123;3&#125;-[0-9]&#123;4&#125;$|^[0-9]&#123;3&#125;-[0-9]&#123;3&#125;-[0-9]&#123;4&#125;$&#x27;</span> file.txt</span><br></pre></td></tr></table></figure></p><h3 id="expected-output">Expected Output</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">987-123-4567</span><br><span class="line">(123) 456-7890</span><br></pre></td></tr></table></figure><h2 id="debugging-and-attempts">Debugging and Attempts</h2><h3 id="original-attempt">Original Attempt</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -E <span class="string">&#x27;^\(\d&#123;3&#125;\) \d&#123;3&#125;-\d&#123;4&#125;$|^\d&#123;3&#125;-\d&#123;3&#125;-\d&#123;4&#125;$&#x27;</span> file.txt</span><br></pre></td></tr></table></figure><blockquote><p>Failed due to incorrect digit matching.</p></blockquote><h3 id="corrected-solution">Corrected Solution</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -E <span class="string">&#x27;^\([0-9]&#123;3&#125;\) [0-9]&#123;3&#125;-[0-9]&#123;4&#125;$|^[0-9]&#123;3&#125;-[0-9]&#123;3&#125;-[0-9]&#123;4&#125;$&#x27;</span> file.txt</span><br></pre></td></tr></table></figure><blockquote><p>Uses <code>[0-9]</code> instead of <code>\d</code> for bettercompatibility.</p></blockquote><h3 id="debugging-script">Debugging Script</h3><p>To verify line-by-line matching: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> IFS= <span class="built_in">read</span> -r line; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Checking: &#x27;<span class="variable">$line</span>&#x27;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$line</span>&quot;</span> | grep -E <span class="string">&#x27;^\([0-9]&#123;3&#125;\) [0-9]&#123;3&#125;-[0-9]&#123;4&#125;$|^[0-9]&#123;3&#125;-[0-9]&#123;3&#125;-[0-9]&#123;4&#125;$&#x27;</span>; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Matched: <span class="variable">$line</span>&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Not Matched: <span class="variable">$line</span>&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span> &lt; file.txt</span><br></pre></td></tr></table></figure></p><h3 id="final-thoughts">Final Thoughts</h3><p>This solution ensures correct pattern matching for valid phonenumbers in the specified formats, using extended regex for betterreadability and compatibility.</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Coding Problems </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> interview-preparation </tag>
            
            <tag> leetcode-easy </tag>
            
            <tag> bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-194: Transpose File</title>
      <link href="/leetcode-194-transpose-file/"/>
      <url>/leetcode-194-transpose-file/</url>
      
        <content type="html"><![CDATA[<h2 id="transpose-file"><ahref="https://leetcode.com/problems/transpose-file/description/">194.Transpose File</a></h2><p>Given <code>file.txt</code>: <figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name age</span><br><span class="line">alice 21</span><br><span class="line">ryan 30</span><br></pre></td></tr></table></figure></p><p>Desired Output: <figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name alice ryan</span><br><span class="line">age 21 30</span><br></pre></td></tr></table></figure></p><h2 id="solution">Solution</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> file.txt | awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    for (i = 1; i &lt;= NF; i++) &#123;</span></span><br><span class="line"><span class="string">        if (NR == 1) &#123;</span></span><br><span class="line"><span class="string">            cols[i] = $i</span></span><br><span class="line"><span class="string">        &#125; else &#123;</span></span><br><span class="line"><span class="string">            cols[i] = cols[i] &quot; &quot; $i</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">END &#123;</span></span><br><span class="line"><span class="string">    for (i = 1; i &lt;= length(cols); i++) &#123;</span></span><br><span class="line"><span class="string">        print cols[i]</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="transposing-a-file-with-awk">Transposing a File with<code>awk</code></h2><p>Transposing a file means converting rows into columns and columnsinto rows. This is useful in various data manipulation tasks.</p><h2 id="awk-basics"><code>awk</code> Basics</h2><ul><li><strong><code>NF</code> (Number of Fields)</strong>: The number offields in the current line (record). (column)</li><li><strong><code>NR</code> (Number of Records)</strong>: The linenumber or the number of records read so far. Incremented automaticallywith each new line. (row)</li></ul><h2 id="awk-script-for-transposing-explanation"><code>awk</code> Scriptfor Transposing Explanation</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= NF; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (NR == <span class="number">1</span>) &#123;</span><br><span class="line">            cols[i] = <span class="variable">$i</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cols[i] = cols[i] <span class="string">&quot; &quot;</span> <span class="variable">$i</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>The <code>&#123;&#125;</code> block is executed for each record (line) readfrom the input.</li></ul><h3 id="loop-through-fields">Loop Through Fields</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= NF; i++) &#123;</span><br></pre></td></tr></table></figure><ul><li><code>NF</code> (Number of Fields): Number of fields in the currentrecord.</li><li>Loops through each field from <code>1</code> to<code>NF</code>.</li></ul><h3 id="first-record-handling">First Record Handling</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (NR == <span class="number">1</span>) &#123;</span><br><span class="line">    cols[i] = <span class="variable">$i</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>NR</code> (Number of Records): The current record number.</li><li>For the first record, initialise the <code>cols</code> array withfields from the first line.</li></ul><h3 id="subsequent-records">Subsequent Records</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    cols[i] = cols[i] <span class="string">&quot; &quot;</span> <span class="variable">$i</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>For subsequent lines, append the current field <code>$i</code> tothe existing string in <code>cols[i]</code>, separated by a space.</li></ul><h3 id="handling-the-end-of-input">Handling the End of Input</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">END</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= length(cols); i++) &#123;</span><br><span class="line">        print cols[i]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>The <code>END</code> block executes after all lines have beenprocessed.</li><li>Prints each column (now a row in the transposed format).</li></ul><h2 id="example-workflow">Example Workflow</h2><p>Given <code>file.txt</code>: <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">name</span> age</span><br><span class="line"><span class="attribute">alice</span> <span class="number">21</span></span><br><span class="line"><span class="attribute">ryan</span> <span class="number">30</span></span><br></pre></td></tr></table></figure></p><h3 id="processing-each-record">Processing Each Record</h3><h4 id="first-record-nr-1">First Record (<code>NR == 1</code>)</h4><ul><li><code>NF</code> is 2 (two fields: <code>name</code> and<code>age</code>).</li><li>The loop runs from <code>i = 1</code> to <code>i = 2</code>.<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cols[<span class="number">1</span>] = <span class="string">&quot;name&quot;</span></span><br><span class="line">cols[<span class="number">2</span>] = <span class="string">&quot;age&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="second-record-nr-2">Second Record (<code>NR == 2</code>)</h4><ul><li><code>NF</code> is 2 (two fields: <code>alice</code> and<code>21</code>).</li><li>The loop runs from <code>i = 1</code> to <code>i = 2</code>.<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cols[<span class="number">1</span>] = <span class="string">&quot;name alice&quot;</span></span><br><span class="line">cols[<span class="number">2</span>] = <span class="string">&quot;age 21&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="third-record-nr-3">Third Record (<code>NR == 3</code>)</h4><ul><li><code>NF</code> is 2 (two fields: <code>ryan</code> and<code>30</code>).</li><li>The loop runs from <code>i = 1</code> to <code>i = 2</code>.<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cols[<span class="number">1</span>] = <span class="string">&quot;name alice ryan&quot;</span></span><br><span class="line">cols[<span class="number">2</span>] = <span class="string">&quot;age 21 30&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="final-output">Final Output</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name alice ryan</span><br><span class="line">age 21 30</span><br></pre></td></tr></table></figure><h2 id="debugging-the-awk-script">Debugging the <code>awk</code>Script</h2><p>You can add <code>print</code> statements inside your<code>awk</code> script to debug and see what's happening at eachstep.</p><h3 id="debugging-script">Debugging Script</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> file.txt | awk <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    print &quot;Processing line:&quot;, NR</span></span><br><span class="line"><span class="string">    for (i = 1; i &lt;= NF; i++) &#123;</span></span><br><span class="line"><span class="string">        if (NR == 1) &#123;</span></span><br><span class="line"><span class="string">            cols[i] = $i</span></span><br><span class="line"><span class="string">        &#125; else &#123;</span></span><br><span class="line"><span class="string">            cols[i] = cols[i] &quot; &quot; $i</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        print &quot;cols[&quot; i &quot;] =&quot;, cols[i]</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">END &#123;</span></span><br><span class="line"><span class="string">    print &quot;\n[RESULT]&quot;</span></span><br><span class="line"><span class="string">    for (i = 1; i &lt;= length(cols); i++) &#123;</span></span><br><span class="line"><span class="string">        print cols[i]</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="output-with-debugging-statements">Output with DebuggingStatements</h4><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Processing line: 1</span><br><span class="line">cols[1] = name</span><br><span class="line">cols[2] = age</span><br><span class="line">Processing line: 2</span><br><span class="line">cols[1] = name alice</span><br><span class="line">cols[2] = age 21</span><br><span class="line">Processing line: 3</span><br><span class="line">cols[1] = name alice ryan</span><br><span class="line">cols[2] = age 21 30</span><br><span class="line"></span><br><span class="line">[RESULT]</span><br><span class="line">name alice ryan</span><br><span class="line">age 21 30</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Coding Problems </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> leetcode-medium </tag>
            
            <tag> interview-preparation </tag>
            
            <tag> bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-192: Word Frequency</title>
      <link href="/leetcode-192-word-frequency/"/>
      <url>/leetcode-192-word-frequency/</url>
      
        <content type="html"><![CDATA[<h2 id="word-frequency"><ahref="https://leetcode.com/problems/word-frequency/description/">192.Word Frequency</a></h2><h2 id="solution">Solution</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> words.txt | <span class="built_in">tr</span> -s <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;\n&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c | <span class="built_in">sort</span> -r | awk <span class="string">&#x27;&#123;print $2 &quot; &quot; $1&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="word-frequency-explanation">Word Frequency Explanation</h2><p>Here is a breakdown of each command in the pipeline:</p><table><colgroup><col style="width: 25%" /><col style="width: 74%" /></colgroup><thead><tr class="header"><th>Command</th><th>Explanation</th></tr></thead><tbody><tr class="odd"><td><code>cat words.txt</code></td><td>Reads the content of the file <code>words.txt</code>.</td></tr><tr class="even"><td><code>tr -s ' ' '\n'</code></td><td>Transforms spaces into newlines, putting each word on a separateline.</td></tr><tr class="odd"><td><code>sort</code></td><td>Sorts the words alphabetically.</td></tr><tr class="even"><td><code>uniq -c</code></td><td>Counts the occurrences of each word and prefixes each word with itscount.</td></tr><tr class="odd"><td><code>sort -r</code></td><td>Sorts the words by frequency in descending order.</td></tr><tr class="even"><td><code>awk '&#123;print $2 " " $1&#125;'</code></td><td>Formats the output to display the word followed by itsfrequency.</td></tr></tbody></table><h3 id="example-workflow">Example Workflow</h3><p>Given the input file <code>words.txt</code> containing:<figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this is a test this is only a test</span><br></pre></td></tr></table></figure></p><p>The pipeline processes it as follows:</p><table><colgroup><col style="width: 28%" /><col style="width: 25%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th>Step</th><th>Command</th><th>Output</th></tr></thead><tbody><tr class="odd"><td>Read file content</td><td><code>cat words.txt</code></td><td><code>this is a test this is only a test</code></td></tr><tr class="even"><td>Transform spaces to newlines</td><td><code>tr -s ' ' '\n'</code></td><td><code>this\nis\na\ntest\nthis\nis\nonly\na\ntest\n</code></td></tr><tr class="odd"><td>Sort words alphabetically</td><td><code>sort</code></td><td><code>a\na\nis\nis\nonly\ntest\ntest\nthis\nthis\n</code></td></tr><tr class="even"><td>Count word occurrences</td><td><code>uniq -c</code></td><td><code>2 a\n2 is\n1 only\n2 test\n2 this\n</code></td></tr><tr class="odd"><td>Sort by frequency descending</td><td><code>sort -r</code></td><td><code>2 this\n2 test\n2 is\n2 a\n1 only\n</code></td></tr><tr class="even"><td>Format output</td><td><code>awk '&#123;print $2 " " $1&#125;'</code></td><td><code>this 2\ntest 2\nis 2\na 2\nonly 1\n</code></td></tr></tbody></table><h3 id="final-output">Final Output</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">this 2</span><br><span class="line">test 2</span><br><span class="line">is 2</span><br><span class="line">a 2</span><br><span class="line">only 1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Coding Problems </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> leetcode-medium </tag>
            
            <tag> interview-preparation </tag>
            
            <tag> bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Urgent: Seeking a Room for Rent in Singapore for Two by July 2024</title>
      <link href="/urgent-seeking-a-room-for-rent-in-singapore-for-two-by-july-2024/"/>
      <url>/urgent-seeking-a-room-for-rent-in-singapore-for-two-by-july-2024/</url>
      
        <content type="html"><![CDATA[<h2id="urgent-room-for-rent-in-singapore-for-two-by-july-2024-急需在新加坡寻找两人的租房2024-年-7-月前入住">Urgent:Room for Rent in Singapore for Two by July 2024 /急需：在新加坡寻找两人的租房，2024 年 7 月前入住</h2><p>Hello dearest agents and landlords, my sister and I are currentlylooking for a room to rent in Singapore. /您好，亲爱的中介和房东，我们姐弟俩目前正在新加坡寻找合适的房间来租。</p><h2 id="our-requirements-and-profile-我们的要求和简介">Our Requirementsand Profile / 我们的要求和简介</h2><ol type="1"><li><strong>Occupants / 租客</strong>: 2 people, we are siblings (onemale, one female) / 2 人，我们是姐弟（一男一女）</li><li><strong>Facilities / 设施</strong>: Ideally more than one toilet,AC, WiFi &amp; utilities included /最好有一个以上的卫生间，并且包括空调，WiFi &amp; 水电</li><li><strong>Budget / 预算</strong>: Around 1,100 SGD per month /每月大约 1,100 新币</li><li><strong>Move-In Date / 入住日期</strong>: Preferably before July2024 / 最好在 2024 年 7 月前</li><li><strong>Address Usage / 地址使用</strong>: Must be able to use as aregistered address / 必须可以申报注册地址</li><li><strong>Landlord Preference / 房东偏好</strong>: Prefer no landlordliving on the property / 最好没有房东同住 (这是我们的优先考虑)</li><li><strong>Location Preference / 地理位置</strong>: Prefer closer totown area / 更倾向于靠近市区</li><li><strong>Smoking / 吸烟</strong>: We don't smoke / 我们不吸烟！</li><li><strong>Cooking / 烹饪</strong>: We don't cook / 我们也不做饭！</li><li><strong>Pets / 宠物</strong>: We don't have pets /我们也没钱买宠物</li></ol><h2 id="about-us-关于我们">About Us / 关于我们</h2><ol type="1"><li><strong>Employment Status / 工作状态</strong>: We are both full-timeemployees &amp; Singapore Permanent Residents / 我们都是全职员工 &amp;新加坡永久居民。</li><li><strong>Tenant Reliability / 租户可靠性</strong>: Being permanentresidents and working professionals, we offer stability and reliabilityas tenants / 作为永久居民和专业工作者，我们是稳定和可靠的租户。</li><li><strong>Work Schedule / 工作时间</strong>: Our work schedules are 9to 6, but it can be irregular, and OT often, might work from home butnot often, and we usually return to Malaysia over the weekends, whichcan help save on utility costs / 我们的工作时间是 9 到 6但是可能不规律，时常加班，也可能会在家办公但不频繁，我们通常会在周末回到马来西亚，这样可以节省水电费。</li><li><strong>Tenant Responsibility / 租户责任</strong>: We areresponsible and tidy tenants, and we will take good care of the property/ 我们是负责任和爱干净的租户，我们会好好照顾房子。</li></ol><h2 id="connect-with-us-联系我们">Connect With Us / 联系我们</h2><p>If you have any leads or need more information, please feel free toscan the <strong>QR code</strong> below to contact me via WhatsApp.Additionally, <strong>we would be grateful if you could share thisrequest within your agents' network</strong>. Any assistance in findinga suitable room would be greatly appreciated. /如果您有任何线索或需要更多信息，请扫描下面的<strong>二维码</strong>通过WhatsApp联系我。此外，<strong>如果您能在您认识的人脉里分享此贴文，我们将不胜感激</strong>。任何帮助我们找到合适房间的援助将不胜感激！</p><p>Thank you very much for your help and consideration! /非常感谢您的帮助和考虑！</p><h2 id="whatsapp-qr-code-whatsapp-二维码">WhatsApp QR Code / WhatsApp二维码</h2><img data-src="/urgent-seeking-a-room-for-rent-in-singapore-for-two-by-july-2024/qr-code-whatsapp.png" class="Find me on WhatsApp"><p>Or click <span class="exturl" data-url="aHR0cHM6Ly93YS5tZS84MTI4NzQwMg==">here<i class="fa fa-external-link-alt"></i></span>.</p><p><br></p>]]></content>
      
      
      <categories>
          
          <category> _Other </category>
          
          <category> Rentals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> advertisement </tag>
            
            <tag> room-rent </tag>
            
            <tag> urgent </tag>
            
            <tag> accommodation </tag>
            
            <tag> housing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My Interview Experience: Site Reliability Engineer at TikTok Applied Machine Learning</title>
      <link href="/my-interview-experience-site-reliability-engineer-at-tiktok-applied-machine-learning/"/>
      <url>/my-interview-experience-site-reliability-engineer-at-tiktok-applied-machine-learning/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>Role</strong>: Site Reliability Engineer, TikTok AppliedMachine Learning</p></blockquote><h2 id="tldr"><strong>TL;DR</strong></h2><p>I only passed the first technical round and <strong>failed at thesecond round of the technical interview</strong>. However, I just wannashare this experience and the mistakes I made, hoping it helps you guysin any interview process.</p><p>Quick introduction for those who don't know me: I am currently asoftware engineer at ByteDance. I have interviewed with several big techcompanies, and while I haven't aced them all, I want to share mylearning points, including dos and don'ts, in the hope that it helpsothers.</p><h2 id="stage-1-hr-call">Stage 1: HR Call</h2><p>People always mention that the HR call is important, and they'reright. It's not just a casual chat to confirm the next step; they canask critical questions based on your resume. If you can't answer them,you might be at risk. So, take every process seriously, right until youwalk out of the interview or end the call.</p><h3 id="notes-from-my-hr-call">Notes from My HR Call:</h3><ul><li><strong>Live Coding / Screen Sharing</strong>: Be prepared toshowcase your coding skills live.</li><li><strong>Thought Process</strong>: Explain your thought processclearly.</li><li><strong>Collaboration Work</strong>: Highlight any team projects orcollaborative work.</li><li><strong>Interview Structure</strong>: 3 technical rounds and 1 HRround.</li><li><strong>Work Hours</strong>: Be ready to discuss flexible hours(e.g., 10 to 7 or 9 to 6).</li></ul><h2 id="stage-2-technical-interview---round-1">Stage 2: TechnicalInterview - Round 1</h2><p>My remark for this interview was: the best interviewer ever, but Idid not get his name. He was one of the best interviewers I had ever metin my job search journey.</p><p>He didn't ask for an introduction and instead sent me straight to alive coding platform, HackerRank. He asked 4 technical questions:</p><ol type="1"><li><strong>SRE Basics</strong>: Linux-related questions. For someonewith 3 years of full-stack experience in a startup, I found themrelatively easy. I could do them with my eyes closed, as long as you cannavigate around using bash and do simple actions like vim logs, grep,and select certain parts of the files, you are ready for this part.</li><li><strong>LeetCode Easy Question</strong>: A <strong>LeetCode EasyDynamic Programming</strong> question. I proposed a reallystraightforward solution and got the optimised solution all by myself asI went along. It was unplanned; I actually just thought out loud and gotthe solution myself while talking to the interviewer.</li><li><strong>Hash Table Implementation</strong>: This was a challengingone. I was asked to implement a Hash Table supporting Add, Get, andUpdate, and measure the performance of the Hash Table. I knew we neededa hash value and to store it, but when I got asked this question, I wasquite stunned. I asked for a moment to think. However, the interviewerwas more interested in assisting me rather than challenging me; he gaveme a lot of hints and led me in the right direction. For this question,I was not that confident, but I really felt like I vibed with theinterviewer.</li><li><strong>System Design</strong>: As we ran out of time by about anhour, usually interviews would just rush us off, but he did notthroughout the call, and we only realised the time at the last question.He just told me to give him a rough answer to prove it. He showed me anapplication architecture and asked a few common questions like how toensure backend reliability, how to build a CI/CD pipeline for thebackend, reliability for a MySQL database, and how to handle staticresources efficiently. I gave him a rough list of solutions for each aswell as drawbacks and some personal thoughts on each aspect. I feltrelatively confident in this area, and that was all about it.</li></ol><p>We used almost 2 hours for the interview, and I can still remember itdeeply. I passed this round, and I was really fortunate to have such asupportive interviewer who helped me rather than pushing me to theedge.</p><h2 id="stage-3-technical-interview---round-2">Stage 3: TechnicalInterview - Round 2</h2><p>It started with the interviewer explaining the company, team, andtheir team missions in Chinese, my first interviews in Chinese. I wasnot ready for that. We vibed at the start, felt like a chit-chattingsession, and after that, he asked me to fill in a list of scores forspecific areas like Bash, Networking, etc., rating my knowledge from 0to 10. After filling that up for like 10 minutes, he threw a few Linuxquestions at me. They felt like <strong>medium-hard</strong> questionsthat you can only solve if you have learnt them before or have actuallysolved them in real life. They were not easy, mostly focused ontroubleshooting specific aspects like log files, server configurations,and memory checks.</p><p>The moment I knew I was in trouble was when he rushed me to solve aLeetCode easy question. "Hey, can you just solve it in Python? We don'thave much time, just solve it", he said. I was out of practice withPython, being more comfortable in Java, Elixir, and JavaScript. So, Iasked, "Can I code it in Java instead?" "No, just do it in Python, wedon't have much time," he replied in a flat tone.</p><p>I felt like I hadn't done well in the previous assessments. I gotflustered, I froze, and I couldn't solve the LeetCode easy question. Icouldn't even explain my thought process. My mind went completely blank,and it was dead silent for what felt like an eternity. Although I triedto write some pseudocode to help me visualise the problem, I couldn'tcome up with any solution. He rushed me and then abruptly stopped thetest. "I have another call in a bit, so let's just end here. Do you haveany more questions?"</p><p>I did ask a few questions that I had written down before theinterview, but I was not in the mood at all. After the call, I took abreak, went out for a walk, came back, opened LeetCode, and found thatquestion. I solved it in 5 minutes. It was frustrating, but a valuablelearning experience.</p><h2 id="conclusion">Conclusion</h2><p>My experience interviewing at TikTok was a learning journey filledwith both successes and setbacks. Here are my key takeaways:</p><ol type="1"><li><strong>Preparation</strong>: Be prepared for all aspects of theinterview, including unexpected languages or formats.</li><li><strong>Flexibility</strong>: Be flexible with programming languagesand ready to adapt.</li><li><strong>Calm Under Pressure</strong>: Practice staying calm underpressure to avoid freezing up.</li><li><strong>Continuous Learning</strong>: Use each interview experienceas a learning opportunity to improve for the next one.</li></ol><p>I hope my story helps others in their job search journey. Remember,every setback is a setup for a comeback. Keep learning andimproving!</p>]]></content>
      
      
      <categories>
          
          <category> Career Development </category>
          
          <category> Interviews </category>
          
          <category> Technical Coding Interviews </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> site-reliability-engineer </tag>
            
            <tag> sre </tag>
            
            <tag> interview-experience </tag>
            
            <tag> coding-interview </tag>
            
            <tag> job-interview </tag>
            
            <tag> tiktok </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My First Ever Interview Experience: Software Engineer, General (GCloud Tech Infra 24x7 (Site Reliability))</title>
      <link href="/my-first-ever-interview-experience-software-engineer-general-gcloud-tech-infra-24x7-site-reliability/"/>
      <url>/my-first-ever-interview-experience-software-engineer-general-gcloud-tech-infra-24x7-site-reliability/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>Role</strong>: SWE: Software Engineer, General (GCloud TechInfra 24x7 (Site Reliability)) - Warsaw or Remote - Poland</p></blockquote><h2 id="how-it-all-started">How it All Started</h2><p>During my last semester at Singapore Polytechnic, where I waspursuing a Diploma in Information Technology, I self-sourced aninternship at a startup called Pixium Digital, a French-based company.The team was mostly French, with some Malaysians and Singaporeans, andwe tackled all kinds of issues and built solutions for our clients. Tothis day, I have never regretted starting my software engineering careerat a startup, even though I initially thought it might be a bad choice.Working as a full-stack software engineer, I learnt an incredibleamount—from building web and mobile applications to setting up localDocker environments and constructing servers on the cloud, tocommunicating with stakeholders and presenting my ideas. A huge shoutoutto my mentors at work: Lionel, Wai Chun, Mederic, and Kenny Chan. Iworked at Pixium Digital for about two years as a full-stack engineerand spent another year in management roles, leading projects andhandling teams.</p><h2 id="my-first-real-job-interview.">My First Real Job Interview.</h2><p>I loved what I was doing at Pixium Digital, but over time, I startedto feel stagnant. The initial excitement of learning new things began tofade, and despite my efforts, I felt like I was hitting a ceiling. Ihave always loved learning and exploring new things, so <em>this feelingof limitation was frustrating</em>. After much contemplation, I made thedifficult decision to quit. It wasn't about being egoistic or cocky; I<strong>simply wanted to seek new challenges and push myself out of mycomfort zone</strong>.</p><p>With that, I embarked on a job hunt that lasted over six months in2023. I started searching in early January, armed with three years ofexperience as a full-stack software engineer. However, I only beganpreparing for the technical aspects in late April. To be honest, my jobsearch had actually started in late 2022, but I received no responses tomy applications. Then, I decided to use ChatGPT, which had just beenreleased, to refine the wording of my resume and improve its acceptancerate with better phrasing.</p><h2 id="the-turning-point">The Turning Point</h2><p>The turning point came at <strong>17:55 on 24 April 2023</strong>. Ireceived an email at work and a message on LinkedIn titled “<em>Aconversation about the future!</em>” I was surprised and unsure becausethe sender was Google's Software Engineering recruitment team. Giventhat I only held a diploma in Information Technology, I couldn't believeit was real. How could they choose me over other candidates during aperiod of mass layoffs, right? So initially, I set the email aside andcontinued with my work.</p><p>That night, during a company dinner with my coworkers, I had alreadyforgotten about the email when I received a phone call from the States.I muted the first call but picked up the second one. It was the Googlerecruiter! I was shocked. She explained that they had a role in Polandthat might suit me and wanted to give me a chance. I introduced myself,shared my background, and expressed my eagerness for the role, hoping toproceed to the next stage if given the chance. She said that after abackground check with the team, if everything went well, she would sendme a Google invite to arrange the next interview.</p><p>I was really surprised and shocked that Google was going to be myfirst job interview ever! I was so excited, worried, and happy. I spentthe dinner zoning out, thinking about how unprepared I was at thatmoment, considering I had only solved 34 LeetCode problems at themoment, for real...</p><p>I shared my happiness with my family, but they didn't believe iteither. They kept checking if it was a fake offer meant to scam me. Iwas 100% sure it was real because the sender's email was ended withGoogle's domain like: <code>...@google.com</code>. How could that befake, right? I tried to explain it to my family, but none of thembelieved it was a real Google interview. I was a little heartbroken. Whydidn't my family believe I could have such an opportunity early in mycareer? I was sad.</p><p>A few days later, I received the thrilling news that I had passed theHR round and would proceed to the next stage: Technical Interview Round1! The excitement was palpable—I was one step closer to my dream job atGoogle!</p><h2 id="the-champion-call">The Champion Call</h2><p>I had a special opportunity called the Google Champion Call. This issomething only Google offers, where you can talk to a senior person inthe role you are interviewing for, ask for advice, tips, and more. Iarranged one and asked for a bunch of advice on preparing for thetechnical interview. The person shared some tools and preparationtechniques, insights into what a day in the life of an SRE at Google islike, their work culture, and more. After this call, my eagerness towork at Google grew even stronger. One thing she suggested was topostpone the interview if I didn't feel ready yet. She said it's totallyfine and that they understand how tough it is for a full-timer to getready for this. Eventually, I did arrange for a later date to givemyself more time to prepare. In the end, I managed to solve 51 LeetCodequestions before the interview. It was tough, considering I had afull-time job and it was a release period, so I had to juggle a lot ofDevOps tasks and communications. It was one of my most exhausting phasesever, but I pushed through to complete 17 more questions (51 intotal).</p><h2 id="the-first-round-of-technical-interview">The First Round ofTechnical Interview</h2><p>I prepared an empty room with a whiteboard and prayed 😳. An hourbefore the call, I was already fully ready. I talked to my family andfriends to calm myself down. My hands were sweaty, and I had a fewtissues ready beside me.</p><p>Five minutes before the call, I clicked on the link and waited at theloading screen. The interviewer joined, and she didn't introduce herselfafter I did. She was cool and composed, which made me feel a bitpressured. She then explained a LeetCode question to me and said shewould paste it on the board.</p><p>One side note: <strong>contrary to what others had said about Googleusing Google Docs for interviews, this was a different Google interviewwebsite</strong>. I had specifically trained myself on Google Docswithout syntax highlighting for LeetCoding, but the website did supportsome default functions. As I used JavaScript, it could stillauto-complete some built-in functions. I was quite surprised!</p><p>The question was presented with rough information. I thought outloud, clarified my understanding with her to ensure we were on the samepage, and shared my initial solution and its potential downsides.Everything went smoothly until I checked with her again on something wehad previously agreed on, but she responded with the opposite. At thatmoment, I realised my solution would no longer work for this newscenario. I was stunned—was it a miscommunication? I don't know whosefault it was, as we both had agreed on the problem initially. I was lostand froze for what felt like the longest seconds ever.</p><p>In the end, I knew I had messed up. What seemed like a LeetCode easyquestion had now become a LeetCode medium (or at least medium-hard)challenge. And just like that, I screwed it up...</p><h2 id="the-end">The End</h2><p>It all ended on 12 June 2023, a day I will never forget. Anotherrecruiter scheduled a call with me at midnight, 1 am SGT. It was themost comprehensive feedback session I've ever had. He told me everythingI could do to improve, pointed out my weaknesses, and highlighted thestrengths I showcased. He encouraged me not to give up and to try againnext year, as Google's policy requires candidates to wait a year beforereapplying for the same role.</p><p>Throughout this journey, I truly felt the meaning of "time flies". Ioften wished I had 72 hours in a day. Despite my efforts, I did not passthe first round of the technical interview. I knew I wasn't quitequalified yet, but this is just the beginning.</p><p>Throughout this journey, <strong>I truly experienced the meaning of"time flies"</strong>. I often found myself wishing for 72 hours in aday to prepare even more. Despite my best efforts, I did not pass thefirst round of the technical interview. I knew I wasn't quite qualifiedyet, but this is just the beginning, the entire interview processremains unforgettable.</p><p>This experience has only fueled my determination to improve andsucceed in the future. <strong>This experience planted the seed of mydream to get into Google even deeper</strong>. That seed is now growingstronger every day, and I am more determined than ever to achieve mygoal. I will continue to learn, grow, and push my limits. <strong>Thisis just the start of my journey, and I will never give up</strong>.</p><p>And this is my first job interview.</p><!--google photo: 7 june 2023-->]]></content>
      
      
      <categories>
          
          <category> Career Development </category>
          
          <category> Interviews </category>
          
          <category> Technical Coding Interviews </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> google </tag>
            
            <tag> site-reliability-engineer </tag>
            
            <tag> sre </tag>
            
            <tag> interview-experience </tag>
            
            <tag> coding-interview </tag>
            
            <tag> job-interview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Euclidean Algorithm: Finding the Greatest Common Divisor (GCD)</title>
      <link href="/euclidean-algorithm-finding-the-greatest-common-divisor-gcd/"/>
      <url>/euclidean-algorithm-finding-the-greatest-common-divisor-gcd/</url>
      
        <content type="html"><![CDATA[<h2 id="what-is-euclidean-algorithm">What is Euclidean Algorithm?</h2><p>The Euclidean Algorithm is a straightforward and efficient method for<strong>finding the greatest common divisor (GCD)</strong> or<strong>greatest common factor (GCF) of two numbers</strong>. Itleverages the principle that the GCD of two numbers doesn't change ifyou subtract the smaller number from the larger one until one of thembecomes zero.</p><h2 id="quick-steps-to-memorise-the-euclidean-algorithm">Quick Steps toMemorise the Euclidean Algorithm</h2><ol type="1"><li><strong>Start with Two Numbers</strong>: Identify the larger numberas <code>a</code> and the smaller number as <code>b</code>.</li><li><strong>Check for Zero</strong>: If <code>b</code> is zero,<code>a</code> is the GCD. Done!</li><li><strong>Get Remainder</strong>: Divide <code>a</code> by<code>b</code> to find the remainder <code>r</code>.</li><li><strong>Swap Values</strong>: Set <code>a</code> to <code>b</code>and <code>b</code> to <code>r</code>.</li><li><strong>Repeat</strong>: Go back to step 2.</li><li><strong>Finish</strong>: When <code>b</code> becomes zero, the GCDis the current value of <code>a</code>.</li></ol><h2 id="mnemonic-to-remember">Mnemonic to Remember</h2><p><strong>"Big Zero, Divide(Remain) Swap Repeat, Zero's theGCD"</strong> - <strong>Big</strong>: Start with two numbers,<code>a</code> (big) and <code>b</code> (small). -<strong>Zero</strong>: Check if <code>b</code> is zero. -<strong>Divide</strong>: Divide <code>a</code> by <code>b</code> to get<code>r</code> (remainder). - <strong>Swap</strong>: Swap <code>a</code>with <code>b</code>, and <code>b</code> with <code>r</code>. -<strong>Repeat</strong>: Repeat the process. - <strong>Zero's theGCD</strong>: When <code>b</code> is zero, <code>a</code> is theGCD.</p><h2 id="quick-example-walkthrough">Quick Example Walkthrough</h2><ol type="1"><li><strong>Start</strong>: <code>a = 56</code>,<code>b = 15</code></li><li><strong>Divide</strong>: 56 ÷ 15 = 3 R11 → <code>a = 15</code>,<code>b = 11</code></li><li><strong>Divide</strong>: 15 ÷ 11 = 1 R4 → <code>a = 11</code>,<code>b = 4</code></li><li><strong>Divide</strong>: 11 ÷ 4 = 2 R3 → <code>a = 4</code>,<code>b = 3</code></li><li><strong>Divide</strong>: 4 ÷ 3 = 1 R1 → <code>a = 3</code>,<code>b = 1</code></li><li><strong>Divide</strong>: 3 ÷ 1 = 3 R0 → <code>a = 1</code>,<code>b = 0</code></li></ol><blockquote><p>GCD = 1</p></blockquote><h2 id="example-in-java">Example in Java</h2><p>Here's an example implementation of the Euclidean algorithm to findthe GCF in <strong>Java</strong>: <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">findGCF</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (b != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">remainder</span> <span class="operator">=</span> a % b;</span><br><span class="line">        a = b;</span><br><span class="line">        b = remainder;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Let's consider an example to find the GCF of two numbers, 48 and 36:<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">48</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">36</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">gcf</span> <span class="operator">=</span> findGCF(a, b);</span><br><span class="line">System.out.println(<span class="string">&quot;GCF of &quot;</span> + a + <span class="string">&quot; and &quot;</span> + b + <span class="string">&quot; is: &quot;</span> + gcf);</span><br></pre></td></tr></table></figure></p><blockquote><p><strong>Output</strong>: GCF of 48 and 36 is: 12</p></blockquote><p>In this example, we start with <code>a = 48</code> and<code>b = 36</code>. We follow the Euclidean algorithm steps: 1.<code>b</code> is not zero, so we calculate the remainder:<code>remainder = 48 % 36 = 12</code>. 2. We set <code>a</code> to<code>b</code> (36) and <code>b</code> to the remainder (12). 3. Repeatstep 1 with the new values: <code>remainder = 36 % 12 = 0</code>. 4.Since <code>b</code> is now zero, we return <code>a</code> (12) as theGCF of 48 and 36.</p><p>The Euclidean algorithm efficiently calculates the GCF, and it workswell for both small and large numbers.</p><p>Here's a precise explanation of the Euclidean algorithm to find thegreatest common divisor (GCD) or greatest common factor (GCF) of twonumbers in Java:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EuclideanAlgorithm</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">findGCF</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">        <span class="comment">// Ensure a is the larger number</span></span><br><span class="line">        <span class="keyword">if</span> (a &lt; b) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> a;</span><br><span class="line">            a = b;</span><br><span class="line">            b = temp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Apply the Euclidean algorithm</span></span><br><span class="line">        <span class="keyword">while</span> (b != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">remainder</span> <span class="operator">=</span> a % b;</span><br><span class="line">            a = b;</span><br><span class="line">            b = remainder;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">48</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">36</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">gcf</span> <span class="operator">=</span> findGCF(a, b);</span><br><span class="line">        System.out.println(<span class="string">&quot;GCF of &quot;</span> + a + <span class="string">&quot; and &quot;</span> + b + <span class="string">&quot; is: &quot;</span> + gcf);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>Output</strong>: GCF of 48 and 36 is: 12</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Data Structures &amp; Algorithms </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> math </tag>
            
            <tag> java </tag>
            
            <tag> gcd </tag>
            
            <tag> greatest-common-divisor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My Journey in Elixir Phoenix</title>
      <link href="/my-journey-in-elixir-phoenix/"/>
      <url>/my-journey-in-elixir-phoenix/</url>
      
        <content type="html"><![CDATA[<p>wip ...</p><p>https://www.phoenixframework.org/</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Frameworks </category>
          
          <category> Phoenix </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Dijkstra&#39;s Algorithm: Efficient Shortest Path Finding in Graphs</title>
      <link href="/dijkstra-s-algorithm-efficient-shortest-path-finding-in-graphs/"/>
      <url>/dijkstra-s-algorithm-efficient-shortest-path-finding-in-graphs/</url>
      
        <content type="html"><![CDATA[<h2 id="what-is-dijkstras-algorithm">What is Dijkstra's Algorithm?</h2><p>Dijkstra's Algorithm is a well-known algorithm used to <strong>findthe shortest path between nodes in a graph</strong>. It was created bythe computer scientist <strong>Edsger Wybe Dijkstra</strong>. Thisalgorithm is one of the most efficient for finding the shortest path ina graph with <strong>non-negative weights</strong>, <strong>especiallyfor sparse graphs</strong>. However, it is not always the fastest ormost optimised algorithm for all shortest path problems. The choice ofalgorithm depends on the specific characteristics of the graph and therequirements of the problem.</p><h2 id="is-dijkstras-algorithm-the-fastest-and-most-optimised">IsDijkstra's Algorithm the Fastest and Most Optimised?</h2><p>Dijkstra's Algorithm is highly efficient for its intended use case:<strong>finding the shortest paths from a single source in graphs withnon-negative edge weights</strong>. However, other algorithms may bemore suitable for different scenarios:</p><ol type="1"><li><strong>Bellman-Ford Algorithm:</strong><ul><li><strong>Use Case</strong>: Graphs with negative weights.</li><li><strong>Strengths</strong>: Handles graphs with negative edgeweights and can detect negative weight cycles.</li><li><strong>Drawbacks</strong>: Generally slower than Dijkstra'salgorithm for graphs without negative weights.</li><li><strong>Complexity</strong>: <spanclass="math display">\[O(VE)\]</span></li></ul></li><li><strong>A* Algorithm:</strong><ul><li><strong>Use Case</strong>: Pathfinding in navigation and games.</li><li><strong>Strengths</strong>: Uses heuristics to focus the search,making it faster in practice for many problems.</li><li><strong>Drawbacks</strong>: Requires a good heuristic to beeffective.</li><li><strong>Complexity</strong>: Depends on the heuristic used, oftenbetter than Dijkstra's for practical problems.</li></ul></li><li><strong>Johnson's Algorithm:</strong><ul><li><strong>Use Case</strong>: All-pairs shortest paths in sparsegraphs.</li><li><strong>Strengths</strong>: Efficient for sparse graphs, transformsthe problem to allow using Dijkstra's algorithm.</li><li><strong>Drawbacks</strong>: More complex than Floyd-Warshall fordense graphs.</li><li><strong>Complexity</strong>: <span class="math display">\[O(V^2 \logV + VE)\]</span></li></ul></li><li><strong>Floyd-Warshall Algorithm:</strong><ul><li><strong>Use Case</strong>: All-pairs shortest paths.</li><li><strong>Strengths</strong>: Simple implementation, handles negativeweights (no cycles).</li><li><strong>Drawbacks</strong>: Not suitable for large graphs due tocubic time complexity.</li><li><strong>Complexity</strong>: <spanclass="math display">\[O(V^3)\]</span></li></ul></li></ol><h3 id="summary">Summary</h3><ul><li><strong>Dijkstra's Algorithm</strong> is optimal for single-sourceshortest path problems in graphs with non-negative weights, especiallyfor sparse graphs.</li><li><strong>Bellman-Ford Algorithm</strong> is better for graphs withnegative weights.</li><li><strong>A* Algorithm</strong> is often faster in practical scenarioswith a good heuristic.</li><li><strong>Floyd-Warshall Algorithm</strong> is suited for all-pairsshortest path problems in <ahref="https://en.wikipedia.org/wiki/Dense_graph">dense graphs</a>.</li><li><strong>Johnson's Algorithm</strong> is efficient for all-pairsshortest path problems in <ahref="https://stackoverflow.com/a/12599199">sparse graphs</a>.</li></ul><blockquote><p>While Dijkstra's Algorithm is highly efficient for its specific usecase, it is not universally the fastest or most optimised for allshortest path problems. The choice of algorithm should be based on thespecific properties and requirements of the problem at hand.</p></blockquote><h2 id="how-does-dijkstras-algorithm-work">How Does Dijkstra's AlgorithmWork?</h2><p>Dijkstra's Algorithm works by iteratively selecting the node with thesmallest known distance, updating the distances of its neighbors, andmarking it as "visited" until the shortest path to all nodes isdetermined. Here's a simplified step-by-step explanation:</p><ol type="1"><li><strong>Initialisation</strong>: Set the distance to the start nodeto <code>0</code> and all other nodes to <code>infinity</code>. Add allnodes to a <code>priority queue</code>.</li><li><strong>Selection</strong>: While the priority queue is not empty,select the node with <strong>the smallest distance</strong>.</li><li><strong>Update</strong>: For the selected node, update the distancesto its neighboring nodes if a shorter path is found.</li><li><strong>Repeat</strong>: Mark the selected node as visited andremove it from the queue. Continue the process until all nodes arevisited.</li></ol><h2 id="dijkstras-algorithm-overview">Dijkstra's Algorithm Overview</h2><ul><li><strong>Graph</strong>: Adjacency list</li><li><strong>Priority Queue</strong>: Min-heap</li></ul><h3 id="complexity">Complexity</h3><ul><li><strong>Time</strong>: <span class="math inline">\(O((V + E) \logV)\)</span></li><li><strong>Space</strong>: <spanclass="math inline">\(O(V)\)</span></li></ul><h3 id="cheat-sheat">Cheat Sheat</h3><ol type="1"><li><code>dist[start] = 0</code></li><li><code>pq.enqueue(start, 0)</code></li><li>While <code>!pq.isEmpty()</code>:<ul><li><code>minNode = pq.dequeue().node</code></li><li>For each <code>neighbor</code> of <code>minNode</code>:<ul><li><code>alt = dist[minNode] + weight</code></li><li>If <code>alt &lt; dist[neighbor]</code>:<ul><li><code>dist[neighbor] = alt</code></li><li><code>prev[neighbor] = minNode</code></li><li><code>pq.enqueue(neighbor, alt)</code></li></ul></li></ul></li></ul></li><li>Backtrack from <code>end</code> using <code>prev</code></li></ol><h2 id="example-in-js">Example in JS</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Create a priority queue</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PriorityQueue</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">queue</span> = [];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">enqueue</span>(<span class="params">node, priority</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">queue</span>.<span class="title function_">push</span>(&#123; node, priority &#125;);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">sort</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">dequeue</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">queue</span>.<span class="title function_">shift</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">sort</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">queue</span>.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a.<span class="property">priority</span> - b.<span class="property">priority</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">isEmpty</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> !<span class="variable language_">this</span>.<span class="property">queue</span>.<span class="property">length</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// The graph is represented as an adjacency matrix</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">shortestPath</span>(<span class="params">graph, startNode, endNode</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> distances = [];</span><br><span class="line">  <span class="keyword">let</span> prev = [];</span><br><span class="line">  <span class="keyword">let</span> pq = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>();</span><br><span class="line"></span><br><span class="line">  distances[startNode] = <span class="number">0</span>;</span><br><span class="line">  pq.<span class="title function_">enqueue</span>(startNode, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> node <span class="keyword">in</span> graph) &#123;</span><br><span class="line">    <span class="keyword">if</span>(node !== startNode) &#123;</span><br><span class="line">      distances[node] = <span class="title class_">Infinity</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    prev[node] = <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span>(!pq.<span class="title function_">isEmpty</span>()) &#123;</span><br><span class="line">    <span class="keyword">let</span> minNode = pq.<span class="title function_">dequeue</span>().<span class="property">node</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> neighbor <span class="keyword">in</span> graph[minNode]) &#123;</span><br><span class="line">      <span class="keyword">let</span> alt = distances[minNode] + graph[minNode][neighbor];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(alt &lt; distances[neighbor]) &#123;</span><br><span class="line">        distances[neighbor] = alt;</span><br><span class="line">        prev[neighbor] = minNode;</span><br><span class="line">        pq.<span class="title function_">enqueue</span>(neighbor, distances[neighbor]);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> shortestPath = [];</span><br><span class="line">  <span class="keyword">let</span> u = endNode;</span><br><span class="line">  <span class="keyword">while</span>(u !== <span class="literal">null</span>) &#123;</span><br><span class="line">    shortestPath.<span class="title function_">push</span>(u);</span><br><span class="line">    u = prev[u];</span><br><span class="line">  &#125;</span><br><span class="line">  shortestPath.<span class="title function_">reverse</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">distance</span>: distances[endNode],</span><br><span class="line">    <span class="attr">path</span>: shortestPath,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> graph = &#123;</span><br><span class="line">  <span class="string">&#x27;A&#x27;</span>: &#123; <span class="string">&#x27;B&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;C&#x27;</span>: <span class="number">4</span> &#125;,</span><br><span class="line">  <span class="string">&#x27;B&#x27;</span>: &#123; <span class="string">&#x27;A&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;C&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;D&#x27;</span>: <span class="number">5</span> &#125;,</span><br><span class="line">  <span class="string">&#x27;C&#x27;</span>: &#123; <span class="string">&#x27;A&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;B&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;D&#x27;</span>: <span class="number">1</span> &#125;,</span><br><span class="line">  <span class="string">&#x27;D&#x27;</span>: &#123; <span class="string">&#x27;B&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;C&#x27;</span>: <span class="number">1</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">shortestPath</span>(graph, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>)); <span class="comment">// Output: &#123; distance: 3, path: [ &#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;D&#x27; ] &#125;</span></span><br></pre></td></tr></table></figure><p>In the above example, we first define a priority queue to help pickthe node with the smallest distance that hasn't been visited yet. Then,we define the <code>shortestPath</code> function which implementsDijkstra's algorithm on a graph represented as an adjacency matrix (anobject with nested objects). Each key in the graph object represents anode, and its value is another object that represents all the nodes thatit is connected to along with the weight of the edges.</p><p>In the <code>shortestPath</code> function, we first initialise thedistances and previous node (prev) arrays. The distances array keepstrack of the shortest distance from the start node to each node, whilethe prev array keeps track of the path we have taken to get to eachnode. We also enqueue the start node into the priority queue.</p><p>We then enter a loop where we <strong>dequeue the node with thesmallest distance that hasn't been visited yet</strong>. We explore allits neighbors and update their distances if we have found a shorterpath. If a node's distance is updated, we enqueue it back to thepriority queue with its new distance and update the prev array.</p><p>Once we've visited all nodes, we <strong>build the shortest path bybacktracking from the end node to the start node using the prevarray</strong>.</p><p>Finally, we use this function to find the shortest path from node 'A'to 'D' in a graph. The output indicates that the shortest path is 'A'-&gt; 'B' -&gt; 'C' -&gt; 'D' with a total distance of 3.</p><hr /><h2 id="notes-for-myself">Notes for Myself</h2><p>shortest path graph algorithm: bfs + min heap</p><p><strong>Conceptual explanation:</strong></p><ol type="1"><li>You start with a graph, where each node is a point and the edgesrepresent a path from one point to another. These paths have a cost,represented by the weight of the edges.</li><li>Pick a node to be your starting point. Mark the distance from thisnode to itself as 0 and the distance from this node to all other nodesas infinity <span class="math inline">\(∞\)</span>.</li><li>From the starting node, visit each of its adjacent nodes. For eachvisited node, calculate the distance from the start node to it bysumming the weight of the edge connecting them to the current shortestpath distance to the start node. If the calculated distance is less thanthe currently assigned shortest path distance to that node, updateit.</li><li>Once you have visited all the adjacent nodes of the start node andupdated the shortest paths, mark the start node as visited. A visitednode will not be checked ever again.</li><li>Now, select the node that has the smallest shortest-path distanceand is not visited yet, make it the current node and go back to step3.</li><li>Repeat the process until all the nodes in the graph have beenvisited.</li></ol>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Data Structures &amp; Algorithms </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> heap-map </tag>
            
            <tag> breadth-first-search </tag>
            
            <tag> shortest-path </tag>
            
            <tag> graph-algorithms </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Floyd-Warshall Algorithm: Comprehensive Guide to All-Pairs Shortest Paths</title>
      <link href="/floyd-warshall-algorithm-comprehensive-guide-to-all-pairs-shortest-paths/"/>
      <url>/floyd-warshall-algorithm-comprehensive-guide-to-all-pairs-shortest-paths/</url>
      
        <content type="html"><![CDATA[<h2 id="what-is-floyd-warshall-algorithm">What is Floyd-WarshallAlgorithm?</h2><p>The Floyd-Warshall algorithm is a <strong>dynamic programmingalgorithm</strong> used to find the shortest paths between <strong>allpairs of vertices in a weighted graph</strong>. It can <strong>handleboth positive and negative edge weights</strong>, provided there are nonegative weight cycles.</p><h3 id="positive-and-negative-edge-weights">Positive and Negative EdgeWeights</h3><ul><li><strong>Positive Edge Weights:</strong> Represent positive costs ordistances (e.g., road lengths).</li><li><strong>Negative Edge Weights:</strong> Represent scenarios wheremoving reduces the total cost (e.g., financial gains).</li></ul><h3 id="negative-weight-cycles">Negative Weight Cycles</h3><ul><li><strong>Definition:</strong> A cycle where the sum of the edgeweights is negative.</li><li><strong>Issue:</strong> Makes shortest path calculations meaninglessas you can reduce the path cost indefinitely by looping through thecycle.</li></ul><h3 id="floyd-warshall-algorithm">Floyd-Warshall Algorithm</h3><ul><li><strong>Capability:</strong> Handles both positive and negative edgeweights.</li><li><strong>Limitation:</strong> <strong>Cannot</strong> computeshortest paths correctly if there are negative weight cycles.</li></ul><h3 id="detection">Detection</h3><ul><li><strong>Method:</strong> After running the algorithm, check if anydiagonal element (<code>dist[i][i]</code>) in the distance matrix isnegative. If so, a negative weight cycle exists.</li></ul><h2 id="when-to-use-floyd-warshall-algorithm">When to Use Floyd-WarshallAlgorithm</h2><p><strong>Use Cases:</strong> 1. <strong>Dense Graphs:</strong> Whenthe graph is dense, meaning <strong>the number of edges is close to thesquare of the number of vertices</strong>. 2. <strong>All-Pairs ShortestPaths:</strong> When you need to find the <strong>shortest paths betweenevery pair of vertices</strong>. 3. <strong>Negative Weights:</strong>When the graph contains <strong>negative edge weights but no negativeweight cycles</strong>.</p><h3 id="example-applications">Example Applications:</h3><ul><li><strong>Network Routing:</strong> Determining the shortest paths fordata packet routing in a network.</li><li><strong>Transitive Closure:</strong> Finding the transitive closureof a graph to determine reachability.</li><li><strong>Shortest Path Problems in Graphs with NegativeWeights:</strong> When other algorithms like Dijkstra's are not suitabledue to negative weights.</li></ul><h2 id="why-floyd-warshall-algorithm">Why Floyd-Warshall Algorithm?</h2><h3 id="advantages">Advantages</h3><ol type="1"><li><strong>Handles Negative Weights:</strong> It can handle graphs withnegative edge weights, unlike Dijkstra's algorithm.</li><li><strong>All-Pairs Shortest Paths:</strong> It efficiently computesshortest paths between all pairs of vertices.</li><li><strong>Simplicity:</strong> The algorithm is straightforward toimplement with a triple nested loop.</li></ol><p>But, <strong>Cannot Handle:</strong> Negative weight cycles (theymake shortest path calculations invalid).</p><h3 id="drawbacks">Drawbacks</h3><ol type="1"><li><p><strong>Time Complexity:</strong> <spanclass="math display">\[O(V^3)\]</span></p><blockquote><p>which can be prohibitive for very large graphs.</p></blockquote></li><li><p><strong>Space Complexity:</strong> <spanclass="math display">\[O(V^2)\]</span></p><blockquote><p>requiring significant memory for storing the distance matrix.</p></blockquote></li></ol><h2id="step-by-step-guide-to-implement-floyd-warshall-algorithm">Step-by-StepGuide to Implement Floyd-Warshall Algorithm</h2><ol type="1"><li><strong>Understand the Problem:</strong><ul><li>You need to find the shortest paths between all pairs of vertices ina weighted directed graph.</li><li>The graph is represented as an adjacency matrix.</li><li>If there is no direct edge between two vertices, the weight is<code>Infinity</code>.</li></ul></li><li><strong>Initialisation Distance Matrix:</strong><ul><li>Create a 2D array of distance matrix <code>dist</code> as a copy ofthe input graph. This will store the shortest distances.</li><li>Set the diagonal elements to 0, because the shortest distance fromany vertex to itself is 0.</li></ul></li><li><strong>Algorithm Execution:</strong><ul><li>Use three nested loops:<ul><li>Outer loop iterates over each vertex <code>k</code> as anintermediate vertex.</li><li>Middle loop iterates over each vertex <code>i</code> as thesource.</li><li>Inner loop iterates over each vertex <code>j</code> as thedestination.</li></ul></li><li>Update <code>dist[i][j]</code> if a shorter path through<code>k</code> is found: <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (dist[i][k] + dist[k][j] &lt; dist[i][j]) &#123;</span><br><span class="line">  dist[i][j] = dist[i][k] + dist[k][j];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><strong>Result:</strong><ul><li>After all iterations, <code>dist[i][j]</code> will contain theshortest distance from vertex <code>i</code> to vertex<code>j</code>.</li><li>Output the Result: Print the <code>dist</code> matrix, replacing<code>Infinity</code> with <code>∞</code> for readability.</li></ul></li></ol><h3 id="memorisation-tips">Memorisation Tips</h3><ul><li><strong>Initialisation:</strong><ul><li><code>dist[i][j] = graph[i][j]</code> for all pairs<code>(i, j)</code>.</li></ul></li><li><strong>Update Rule:</strong><ul><li><code>dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j])</code>.</li></ul></li><li><strong>Loop Structure:</strong><ul><li>Three nested loops for <code>k</code>, <code>i</code>, and<code>j</code>.</li></ul></li><li><strong>Edge Cases:</strong><ul><li>Self-loops are always <code>0</code>.</li><li>Use <code>Infinity</code> for no direct path.</li></ul></li></ul><h3 id="detailed-example-in-javascript">Detailed Example inJavaScript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">floydWarshall</span>(<span class="params">graph</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> dist = [];</span><br><span class="line">  <span class="keyword">const</span> V = graph.<span class="property">length</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Step 1: Initialise the distance matrix</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; V; i++) &#123;</span><br><span class="line">  dist[i] = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; V; j++) &#123;</span><br><span class="line">      dist[i][j] = graph[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Step 2: Apply Floyd-Warshall Algorithm</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">0</span>; k &lt; V; k++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; V; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; V; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (dist[i][k] + dist[k][j] &lt; dist[i][j]) &#123;</span><br><span class="line">          dist[i][j] = dist[i][k] + dist[k][j];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Step 3: Return the shortest distance matrix</span></span><br><span class="line">  <span class="keyword">return</span> dist;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Example graph</span></span><br><span class="line"><span class="keyword">const</span> graph = [</span><br><span class="line">  [<span class="number">0</span>, <span class="number">3</span>, <span class="title class_">Infinity</span>, <span class="number">7</span>],</span><br><span class="line">  [<span class="number">8</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="title class_">Infinity</span>],</span><br><span class="line">  [<span class="number">5</span>, <span class="title class_">Infinity</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">  [<span class="number">2</span>, <span class="title class_">Infinity</span>, <span class="title class_">Infinity</span>, <span class="number">0</span>]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = <span class="title function_">floydWarshall</span>(graph);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Format the output for readability</span></span><br><span class="line">result.<span class="title function_">forEach</span>(<span class="function"><span class="params">row</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(row.<span class="title function_">map</span>(<span class="function"><span class="params">value</span> =&gt;</span> (value === <span class="title class_">Infinity</span> ? <span class="string">&quot;∞&quot;</span> : value)).<span class="title function_">join</span>(<span class="string">&quot; &quot;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Expected output:</span></span><br><span class="line"><span class="comment">[</span></span><br><span class="line"><span class="comment">  [0, 3, 5, 6],</span></span><br><span class="line"><span class="comment">  [5, 0, 2, 3],</span></span><br><span class="line"><span class="comment">  [3, 6, 0, 1],</span></span><br><span class="line"><span class="comment">  [2, 5, 7, 0]</span></span><br><span class="line"><span class="comment">]</span></span><br><span class="line"><span class="comment">*;</span></span><br></pre></td></tr></table></figure><h3 id="example-1-basic-graph">Example 1: Basic Graph</h3><p>A simple graph with four vertices (A, B, C, D) and both finite andinfinite distances: <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> graph1 = [</span><br><span class="line">  [<span class="number">0</span>, <span class="number">3</span>, <span class="title class_">Infinity</span>, <span class="number">7</span>],</span><br><span class="line">  [<span class="number">8</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="title class_">Infinity</span>],</span><br><span class="line">  [<span class="number">5</span>, <span class="title class_">Infinity</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">  [<span class="number">2</span>, <span class="title class_">Infinity</span>, <span class="title class_">Infinity</span>, <span class="number">0</span>]</span><br><span class="line">];</span><br></pre></td></tr></table></figure></p><h3 id="example-2-graph-with-no-edges">Example 2: Graph with NoEdges</h3><p>A graph where no vertices are directly connected except forself-loops: <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> graph2 = [</span><br><span class="line">  [<span class="number">0</span>, <span class="title class_">Infinity</span>, <span class="title class_">Infinity</span>, <span class="title class_">Infinity</span>],</span><br><span class="line">  [<span class="title class_">Infinity</span>, <span class="number">0</span>, <span class="title class_">Infinity</span>, <span class="title class_">Infinity</span>],</span><br><span class="line">  [<span class="title class_">Infinity</span>, <span class="title class_">Infinity</span>, <span class="number">0</span>, <span class="title class_">Infinity</span>],</span><br><span class="line">  [<span class="title class_">Infinity</span>, <span class="title class_">Infinity</span>, <span class="title class_">Infinity</span>, <span class="number">0</span>]</span><br><span class="line">];</span><br></pre></td></tr></table></figure></p><h3 id="example-3-complete-graph">Example 3: Complete Graph</h3><p>A fully connected graph where every vertex is directly connected toevery other vertex with varying weights: <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> graph3 = [</span><br><span class="line">  [<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>],</span><br><span class="line">  [<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">  [<span class="number">4</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">5</span>],</span><br><span class="line">  [<span class="number">6</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">0</span>]</span><br><span class="line">];</span><br></pre></td></tr></table></figure></p><h3id="example-4-graph-with-negative-weights-no-negative-cycles">Example 4:Graph with Negative Weights (No Negative Cycles)</h3><p>A graph with some edges having negative weights, but no negativeweight cycles: <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> graph4 = [</span><br><span class="line">  [<span class="number">0</span>, <span class="number">3</span>, -<span class="number">2</span>, <span class="number">8</span>],</span><br><span class="line">  [<span class="title class_">Infinity</span>, <span class="number">0</span>, <span class="title class_">Infinity</span>, <span class="number">1</span>],</span><br><span class="line">  [<span class="title class_">Infinity</span>, <span class="title class_">Infinity</span>, <span class="number">0</span>, <span class="number">4</span>],</span><br><span class="line">  [<span class="title class_">Infinity</span>, <span class="title class_">Infinity</span>, <span class="title class_">Infinity</span>, <span class="number">0</span>]</span><br><span class="line">];</span><br></pre></td></tr></table></figure></p><h3 id="example-5-sparse-graph">Example 5: Sparse Graph</h3><p>A sparse graph with more infinite distances (disconnectedvertices):</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> graph5 = [</span><br><span class="line">  [<span class="number">0</span>, <span class="number">5</span>, <span class="title class_">Infinity</span>, <span class="number">10</span>],</span><br><span class="line">  [<span class="title class_">Infinity</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="title class_">Infinity</span>],</span><br><span class="line">  [<span class="title class_">Infinity</span>, <span class="title class_">Infinity</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">  [<span class="title class_">Infinity</span>, <span class="title class_">Infinity</span>, <span class="title class_">Infinity</span>, <span class="number">0</span>]</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h3 id="running-the-algorithm">Running the Algorithm</h3><p>You can use the <code>floydWarshall</code> function provided in theprevious example to compute the shortest paths for each of these graphs.Here's how you can do it for one of the examples: <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> graph1 = [</span><br><span class="line">  [<span class="number">0</span>, <span class="number">3</span>, <span class="title class_">Infinity</span>, <span class="number">7</span>],</span><br><span class="line">  [<span class="number">8</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="title class_">Infinity</span>],</span><br><span class="line">  [<span class="number">5</span>, <span class="title class_">Infinity</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">  [<span class="number">2</span>, <span class="title class_">Infinity</span>, <span class="title class_">Infinity</span>, <span class="number">0</span>]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="title function_">floydWarshall</span>(graph1);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Expected output:</span></span><br><span class="line"><span class="comment">[</span></span><br><span class="line"><span class="comment">  [0, 3, 5, 6],</span></span><br><span class="line"><span class="comment">  [5, 0, 2, 3],</span></span><br><span class="line"><span class="comment">  [3, 6, 0, 1],</span></span><br><span class="line"><span class="comment">  [2, 5, 7, 0]</span></span><br><span class="line"><span class="comment">]</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><p>You can similarly run the function for the other graphs by replacing<code>graph1</code> with <code>graph2</code>, <code>graph3</code>,<code>graph4</code>, or <code>graph5</code>. This will give you theshortest path distances between all pairs of vertices for each inputgraph.</p><hr /><h2id="side-knowledge-floyd-warshal-algorithm-vs-dijkstras-algorithm">SideKnowledge: Floyd-Warshal Algorithm vs Dijkstra's Algorithm</h2><table><colgroup><col style="width: 7%" /><col style="width: 48%" /><col style="width: 43%" /></colgroup><thead><tr class="header"><th><strong>Aspect</strong></th><th><strong>Floyd-Warshall Algorithm</strong></th><th><strong>Dijkstra's Algorithm</strong></th></tr></thead><tbody><tr class="odd"><td><strong>Time Complexity</strong></td><td><span class="math display">\[O(V^3)\]</span></td><td><span class="math display">\[O((V + E) \log V)\]</span> With apriority queue</td></tr><tr class="even"><td><strong>Space Complexity</strong></td><td><span class="math display">\[O(V^2)\]</span></td><td><span class="math display">\[O(V)\]</span> For distances and thepriority queue</td></tr><tr class="odd"><td><strong>Purpose</strong></td><td>All-pairs shortest paths</td><td>Single-source shortest path</td></tr><tr class="even"><td><strong>Graph Type</strong></td><td>Weighted graphs with positive and negative weights (no cycles)</td><td>Weighted graphs with non-negative weights</td></tr><tr class="odd"><td><strong>Algorithm Steps</strong></td><td>1. Initialize distance matrix<br>2. Set <code>dist[i][i]</code> to0<br>3. Update distances using:<code>dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j])</code><br>4.Result in <code>dist[i][j]</code> for shortest paths</td><td>1. Initialize distances<br>2. Use priority queue to select vertexwith smallest distance<br>3. Update distances for neighbors<br>4. Repeatuntil all vertices are processed</td></tr><tr class="even"><td><strong>Use Cases</strong></td><td>Dense graphs, network analysis, finding transitive closure</td><td>Sparse graphs, map routing, network routing</td></tr><tr class="odd"><td><strong>Handles Negative Weights</strong></td><td>Yes, but no negative cycles</td><td>No</td></tr></tbody></table><h3 id="side-note-single-source-shortest-path">Side Note: Single-SourceShortest Path</h3><p><strong>Single-source shortest path</strong> refers to finding theshortest paths from a single starting vertex (source) to all othervertices in the graph. The term "single-source" distinguishes thisproblem from the "all-pairs shortest path" problem, which seeks to findthe shortest paths between every pair of vertices.</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Data Structures &amp; Algorithms </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> dynamic programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Floyd&#39;s Tortoise and Hare Algorithm: Efficient Cycle Detection</title>
      <link href="/floyd-s-tortoise-and-hare-algorithm-efficient-cycle-detection/"/>
      <url>/floyd-s-tortoise-and-hare-algorithm-efficient-cycle-detection/</url>
      
        <content type="html"><![CDATA[<h2 id="what-is-floyds-tortoise-and-hare-algorithm">What is Floyd'sTortoise and Hare Algorithm?</h2><p>Floyd's Tortoise and Hare Algorithm, also known as the <em>Floyd'scycle-finding algorithm</em> or the Tortoise and Hare Algorithm, is usedto <strong>detect cycles</strong> in a linked list or an array. It wasnamed after Robert W. Floyd, who first described the algorithm.</p><p>The algorithm works by using two pointers, one moving at a slowerpace (tortoise) and the other moving at a faster pace (hare), anditerating through the linked list or array. If there is a cycle, the twopointers will eventually meet at the same node.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">slow pointer s always move by 1</span><br><span class="line">┌───┐</span><br><span class="line">↓   ↓</span><br><span class="line">s   s</span><br><span class="line">1 → 2 → 3 → 4 → 5 → 6 → 7</span><br><span class="line">f       f</span><br><span class="line">↑       ↑</span><br><span class="line">└───────┘</span><br><span class="line">fast pointer f always move by 2</span><br></pre></td></tr></table></figure><p><strong>Here's a step-by-step explanation of Floyd's Tortoise andHare Algorithm:</strong> 1. Initialise two pointers, the tortoise (slow)and the hare (fast), at the head of the linked list or the first elementof the array. 2. Move the tortoise one step forward and the hare twosteps forward. 3. Repeat step 2 until one of the following conditions ismet: - The hare reaches the end of the linked list or array (i.e., thehare encounters a <strong><code>null</code></strong> or out-of-boundsindex). In this case, there is no cycle, and the algorithm terminates. -The tortoise and hare pointers meet at the same node. This indicates thepresence of a cycle in the linked list or array. 4. If the tortoise andhare meet, reset the tortoise to the head of the linked list or thefirst element of the array and keep the hare at the meeting point. 5.Move the tortoise and hare pointers one step at a time until they meetagain. The point at which they meet is the start of the cycle in thelinked list or array.</p><p><strong>Floyd's Tortoise and Hare Algorithm</strong> is an efficientalgorithm that runs in <strong>linear time complexity</strong>, makingit useful for detecting cycles in large <strong>linked lists</strong> or<strong>arrays</strong>. It does <strong>NOT</strong> require anyadditional data structures and uses only <strong>two pointers</strong>to achieve the detection.</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Data Structures &amp; Algorithms </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> two-pointer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL Notebook</title>
      <link href="/sql-notebook/"/>
      <url>/sql-notebook/</url>
      
        <content type="html"><![CDATA[<h2 id="what-is-sql">What is SQL?</h2><p>Structured Query Language (SQL) is essential for managing relationaldatabases, allowing users to efficiently store, manipulate, and retrievedata. SQL is used in various applications, from simple websites tocomplex enterprise systems.</p><p>Among the popular <strong>RDBMS</strong> options, PostgreSQL standsout for its advanced features and robustness. Unlike MySQL, whichfocuses on speed and simplicity, PostgreSQL excels at handling complexqueries and large datasets, emphasising standards compliance andextensibility.</p><p>In this post, I will share a variety of SQL tips and tricks that Ihave learnt during my first few years as a software engineer. This willserve as a comprehensive notebook on various SQL topics, including queryoptimisation, data aggregation, security best practices, and more!</p><h2 id="differences-between-mysql-and-postgresql">Differences BetweenMySQL and PostgreSQL</h2><h3 id="licensing">Licensing</h3><ul><li><strong>MySQL:</strong> Open-source under the <strong>GNU GeneralPublic License (GPL)</strong>. Free to use, but distributing modifiedversions or using it in <strong>proprietary applications may require acommercial license from Oracle</strong>.</li><li><strong>PostgreSQL:</strong> Open-source under a permissive licensesimilar to the MIT License. Free to use without restrictions,<strong>allowing both open-source and proprietary use</strong> withoutneeding a commercial license.</li></ul><blockquote><p>A proprietary application is software that is owned by an individualor a company and has restrictions on its use, modification, anddistribution. Unlike open-source software, the source code of aproprietary application is typically not made available to the public.Users are required to comply with the licensing terms set by the owner,which may include purchasing a license or adhering to specific usageguidelines.</p></blockquote><h3 id="features">Features</h3><ul><li><strong>MySQL:</strong><ul><li>Simple and easy to use.</li><li>Supports replication and basic data types.</li><li>Less strict with ACID compliance.</li></ul></li><li><strong>PostgreSQL:</strong><ul><li>Supports advanced data types and indexing techniques.</li><li>Strong adherence to ACID properties and SQL standards.</li></ul></li></ul><blockquote><p>ACID compliance ensures that database transactions are processedreliably, maintaining <strong>A</strong>tomicity,<strong>C</strong>onsistency, <strong>I</strong>solation, and<strong>D</strong>urability.</p></blockquote><h3 id="performance">Performance</h3><ul><li><strong>MySQL:</strong> Optimised for read-heavy operations,commonly used in web applications.</li><li><strong>PostgreSQL:</strong> Excels in complex queries andwrite-heavy operations, ideal for large datasets.</li></ul><blockquote><p>In technical interviews, you may be asked to explain scenarios whereyou would choose one over the other.</p></blockquote><h3 id="concurrency">Concurrency</h3><ul><li><strong>MySQL:</strong> Uses MVCC in InnoDB, handles highconcurrency well but can have issues with write contention.</li><li><strong>PostgreSQL:</strong> Robust MVCC implementation, handleshigh concurrency and complex transactions efficiently.</li></ul><blockquote><p>Multi-Version Concurrency Control (MVCC) allows multiple transactionsto access the database simultaneously without locking, by maintainingmultiple versions of the data.</p></blockquote><ol type="1"><li><p><strong>Multiple Versions</strong>: When a transaction updates arecord, the database keeps the old version of the record. This way,other transactions can still read the old version while the new versionis being updated.</p></li><li><p><strong>Consistency</strong>: Each transaction gets a consistentsnapshot of the database as it was when the transaction started. Thismeans that even if other transactions are updating the data, yourtransaction will see the data as it was at the beginning of yourtransaction.</p></li><li><p><strong>No Duplicate Primary Keys</strong>: MVCC does not createmultiple records with the same primary key. Instead, it maintainsversions of the same record, so there are no conflicts with primarykeys.</p></li></ol><h4 id="example">Example:</h4><ul><li><strong>Transaction A</strong> reads data.</li><li><strong>Transaction B</strong> updates the same data.</li></ul><p><strong>With MVCC:</strong> - <strong>Transaction A</strong> sees thebalance as $100 throughout its operation. - <strong>TransactionB</strong> changes the balance to $150 and commits. - New transactionsstarting after <strong>Transaction B</strong> commits will see thebalance as $150. - <strong>Transaction A</strong> continues to see thebalance as $100 until it completes. - Once <strong>TransactionA</strong> completes, the old version ($100) can be discarded, and onlythe new version ($150) remains.</p><h3 id="replication-and-clustering">Replication and Clustering</h3><ul><li><strong>MySQL:</strong> Supports various replication methods andclustering solutions like <ahref="https://www.mysql.com/products/cluster/">MySQL Cluster</a>.</li><li><strong>PostgreSQL:</strong> Supports synchronous and asynchronousreplication, with advanced clustering solutions like <ahref="https://wiki.postgresql.org/wiki/BDR_Project">PostgreSQL-BDR</a>and <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NpdHVzZGF0YS9jaXR1cw==">Citus<i class="fa fa-external-link-alt"></i></span>.</li></ul><h3 id="community-and-ecosystem">Community and Ecosystem</h3><ul><li><strong>MySQL:</strong> Large community with many third-party tools,acquired by <strong>Oracle</strong>.</li><li><strong>PostgreSQL:</strong> Strong open-source community withextensive documentation and a <strong>rich ecosystem ofextensions</strong>.</li></ul><h3 id="use-cases">Use Cases</h3><ul><li><strong>MySQL:</strong> Ideal for web applications and platformswhere <strong>read speed is crucial</strong>.</li><li><strong>PostgreSQL:</strong> Preferred for complex applications,data warehousing, and environments requiring <strong>high dataintegrity</strong>.</li></ul><hr /><h2 id="understanding-sql-injection">Understanding SQL Injection</h2><p>SQL injection is a code injection technique that exploits securityvulnerabilities in an application's software. This occurs when anattacker can insert or manipulate SQL queries executed by a database,gaining unauthorized access to data or executing unwanted commands. SQLinjection is a critical security risk that can expose your applicationto data breaches and manipulation.</p><h3 id="sample-queries-demonstrating-sql-injection">Sample QueriesDemonstrating SQL Injection</h3><p>Below are some sample SQL injection queries to illustrate howattackers might exploit a vulnerable system.</p><h4 id="example-1-basic-sql-injection">Example 1: Basic SQLInjection</h4><p>As this is your SQL that you write in your code: <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> username <span class="keyword">LIKE</span> <span class="string">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure></p><p>An attacker might try to enter <code>admin'; --</code>:<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> username <span class="keyword">LIKE</span> <span class="string">&#x27;admin&#x27;</span>; <span class="comment">-- &#x27;;</span></span><br></pre></td></tr></table></figure></p><h4 id="example-2-bypassing-authentication">Example 2: BypassingAuthentication</h4><p>An attacker might input <code>' OR '1'='1</code> for fields likeusername and password, causing the query to always return true andpotentially exposing all user records. <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> username <span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">OR</span> <span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;1&#x27;</span> <span class="keyword">AND</span> password <span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">OR</span> <span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure></p><h4 id="example-3-sql-injection-with-update">Example 3: SQL Injectionwith UPDATE</h4><p>An attacker might input <code>' OR '1'='1</code> for the usernamefield in an update query, potentially updating all user records.<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> users <span class="keyword">SET</span> email <span class="operator">=</span> <span class="string">&#x27;attacker@example.com&#x27;</span> <span class="keyword">WHERE</span> username <span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">OR</span> <span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure></p><h4 id="example-4-time-based-blind-sql-injection">Example 4: Time-BasedBlind SQL Injection</h4><p>Here, the attacker attempts to introduce a delay using the<code>SLEEP</code> function, which could be used to test for time-basedblind SQL injection vulnerabilities. <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> username <span class="keyword">LIKE</span> <span class="string">&#x27;little&#x27;</span> <span class="keyword">AND</span> <span class="number">1</span> <span class="operator">=</span> SLEEP(<span class="number">2</span>); <span class="comment">-- &#x27;;</span></span><br></pre></td></tr></table></figure></p><h4 id="example-5-union-attack">Example 5: UNION Attack</h4><p>In this case, the attacker is trying to perform a UNION attack, whichcan be used to retrieve data from different tables if the structurematches. <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> username <span class="keyword">LIKE</span> <span class="string">&#x27;little&#x27;</span> <span class="keyword">AND</span> <span class="keyword">UNION</span> (<span class="keyword">SELECT</span> <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> <span class="keyword">FROM</span> dual); <span class="comment">-- &#x27;;</span></span><br></pre></td></tr></table></figure></p><h3 id="mitigating-sql-injection">Mitigating SQL Injection</h3><p>To protect your applications from SQL injection attacks, consider thefollowing practices: 1. <strong>Use Prepared Statements:</strong> Thisensures that SQL code is executed as intended and not manipulated byuser inputs. 2. <strong>Input Validation:</strong> Always validate andsanitise user inputs. 3. <strong>Least Privilege:</strong> Ensure thatdatabase users have the least privileges necessary to perform theirtasks.</p><h2 id="with-rollup-summing-a-count-column">WITH ROLLUP: Summing a CountColumn</h2><p>Suppose you need to count the number of records in a table and groupthem by a specific column while also including a grand total. You canuse the <code>WITH ROLLUP</code> modifier to achieve this.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> dr_nb,</span><br><span class="line">    br.batch_name</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    batch_report br</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">    br.batch_name <span class="keyword">WITH</span> <span class="keyword">ROLLUP</span>;</span><br></pre></td></tr></table></figure><h3 id="explanation">Explanation</h3><ol type="1"><li>**COUNT(*)**: This function counts the number of rows for eachgroup.</li><li><strong>GROUP BY br.batch_name</strong>: This groups the results bythe <code>batch_name</code> column.</li><li><strong>WITH ROLLUP</strong>: This modifier adds an extra row to theresult set that represents the grand total.</li></ol><h4 id="example-scenario">Example Scenario</h4><p><strong>Imagine you have a table called <code>batch_report</code>with the following data:</strong> | batch_name | report_id | |---------- | --------- | | batch1 | 1 | | batch1 | 2 | | batch2 | 3 | |batch2 | 4 | | batch3 | 5 |</p><p><strong>Using the query above, you would get the followingresult:</strong> | dr_nb | batch_name | | ----- | ---------- | | 2 |batch1 | | 2 | batch2 | | 1 | batch3 | | <strong>5</strong> |<strong>NULL</strong> |</p><p>The row with <code>NULL</code> in the <code>batch_name</code> columnrepresents the grand total of all counts.</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Programming Languages </category>
          
          <category> SQL </category>
          
          <category> Notebooks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
            <tag> mysql </tag>
            
            <tag> postgresql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim Notebook</title>
      <link href="/vim-notebook/"/>
      <url>/vim-notebook/</url>
      
        <content type="html"><![CDATA[<h2 id="what-is-vim">What is Vim?</h2><p>Vim (Vi IMproved) is a highly configurable text editor built to makecreating and changing any kind of text very efficient. It is an improvedversion of the vi editor distributed with most UNIX systems.</p><blockquote><p>I am using Vim for monitoring log files, modifying scripts andenvironment files for DevOps tasks. Occasionally, I switch to frontendand backend development, where I might forget some commands. Here aresome notes for myself, and hopefully, they help others too!</p></blockquote><h2 id="basic-movements">Basic Movements</h2><table><colgroup><col style="width: 6%" /><col style="width: 93%" /></colgroup><thead><tr class="header"><th>Command</th><th>Description</th></tr></thead><tbody><tr class="odd"><td><code>h</code></td><td>Move cursor left</td></tr><tr class="even"><td><code>j</code></td><td>Move cursor down</td></tr><tr class="odd"><td><code>k</code></td><td>Move cursor up</td></tr><tr class="even"><td><code>l</code></td><td>Move cursor right</td></tr><tr class="odd"><td><code>gg</code></td><td>Go to the first line of the file</td></tr><tr class="even"><td><code>G</code></td><td>Go to the last line of the file</td></tr><tr class="odd"><td><code>w</code></td><td>Move to the beginning of the next word</td></tr><tr class="even"><td><code>e</code></td><td>Move to the end of the current word</td></tr><tr class="odd"><td><code>b</code></td><td>Move to the beginning of the previous word</td></tr><tr class="even"><td><code>0</code></td><td>Move the cursor to the beginning of the current line</td></tr><tr class="odd"><td><code>$</code></td><td>Move the cursor to the end of the current line</td></tr><tr class="even"><td><code>W</code></td><td>Move the cursor to the beginning of the next WORD (a WORD is asequence of non-whitespace characters)</td></tr><tr class="odd"><td><code>&#125;</code></td><td>Move the cursor to the beginning of the next paragraph</td></tr><tr class="even"><td><code>&#123;</code></td><td>Move the cursor to the beginning of the previous paragraph</td></tr><tr class="odd"><td><code>%</code></td><td>Move the cursor to the matching bracket or parenthesis</td></tr></tbody></table><h2 id="editing-commands">Editing Commands</h2><table><colgroup><col style="width: 12%" /><col style="width: 87%" /></colgroup><thead><tr class="header"><th>Command</th><th>Description</th></tr></thead><tbody><tr class="odd"><td><code>i</code></td><td>Enter insert mode before the cursor</td></tr><tr class="even"><td><code>o</code></td><td>Insert a new line below the current line and enter insert mode</td></tr><tr class="odd"><td><code>O</code></td><td>Insert a new line above the current line and enter insert mode</td></tr><tr class="even"><td><code>dd</code></td><td>Delete the current line</td></tr><tr class="odd"><td><code>yy</code></td><td>Yank (copy) the current line</td></tr><tr class="even"><td><code>p</code></td><td>Paste the yanked or deleted text after the cursor</td></tr><tr class="odd"><td><code>J</code></td><td>join the current line with the next line</td></tr><tr class="even"><td><code>u</code></td><td>Undo the last change</td></tr><tr class="odd"><td><code>r</code></td><td>Replace the character under the cursor with the next charactertyped</td></tr><tr class="even"><td><code>s</code></td><td>Delete the character under the cursor and enter insert mode</td></tr><tr class="odd"><td><code>x</code></td><td>Delete the character under the cursor</td></tr><tr class="even"><td><code>Ctrl + r</code></td><td>Redo the undone change</td></tr><tr class="odd"><td><code>:w</code></td><td>Save the file</td></tr><tr class="even"><td><code>:q</code></td><td>Quit Vim</td></tr><tr class="odd"><td><code>:wq</code></td><td>Save and quit</td></tr><tr class="even"><td><code>:q!</code></td><td>Quit without saving</td></tr></tbody></table><h2 id="searching-and-replacing">Searching and Replacing</h2><table><thead><tr class="header"><th>Command</th><th>Description</th></tr></thead><tbody><tr class="odd"><td><code>/pattern</code></td><td>Search for <code>pattern</code></td></tr><tr class="even"><td><code>n</code></td><td>Repeat search in the same direction</td></tr><tr class="odd"><td><code>N</code></td><td>Repeat search in the opposite direction</td></tr><tr class="even"><td><code>:s/foo/bar/g</code></td><td>Replace <code>foo</code> with <code>bar</code> in the file</td></tr><tr class="odd"><td><code>:%s/old/new/g</code></td><td>Replace all instances of <code>old</code> with <code>new</code></td></tr></tbody></table><h2 id="control">Control</h2><table><colgroup><col style="width: 12%" /><col style="width: 87%" /></colgroup><thead><tr class="header"><th>Command</th><th>Description</th></tr></thead><tbody><tr class="odd"><td><code>Ctrl + o</code></td><td>Jump back to the previous position</td></tr><tr class="even"><td><code>Ctrl + i</code></td><td>Jump forward to the next position</td></tr><tr class="odd"><td><code>Ctrl + f</code></td><td>Move the cursor forward one screen</td></tr><tr class="even"><td><code>Ctrl + b</code></td><td>Move the cursor backward one screen</td></tr><tr class="odd"><td><code>Ctrl + d</code></td><td>Move the cursor down half a screen</td></tr><tr class="even"><td><code>Ctrl + u</code></td><td>Move the cursor up half a screen</td></tr><tr class="odd"><td><code>Ctrl + g</code></td><td>Show the current cursor position in the document</td></tr><tr class="even"><td><code>Ctrl + w</code></td><td>Delete the word before the cursor</td></tr><tr class="odd"><td><code>Ctrl + y</code></td><td>Copy the character above the cursor and insert it at the cursorposition</td></tr><tr class="even"><td><code>Ctrl + e</code></td><td>Copy the character below the cursor and insert it at the cursorposition</td></tr><tr class="odd"><td><code>Ctrl + r</code></td><td>Enter register mode (used for copying and pasting text)</td></tr></tbody></table><h2 id="customisation">Customisation</h2><table><thead><tr class="header"><th>Command</th><th>Description</th></tr></thead><tbody><tr class="odd"><td><code>:set number</code></td><td>Show line numbers</td></tr><tr class="even"><td><code>:set hlsearch</code></td><td>Highlight all search matches</td></tr><tr class="odd"><td><code>:set ignorecase</code></td><td>Ignore case when searching</td></tr><tr class="even"><td><code>:set tabstop=4</code></td><td>Set the tab width to 4 spaces</td></tr><tr class="odd"><td><code>:set expandtab</code></td><td>Convert tabs to spaces</td></tr><tr class="even"><td><code>:set mouse=a</code></td><td>Enable mouse support in Vim</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Notebooks </category>
          
          <category> Development Tools </category>
          
          <category> Editors </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> vim </tag>
            
            <tag> text-editor </tag>
            
            <tag> development-tools </tag>
            
            <tag> coding-productivity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Innovative Portfolio: A Journey Through Software and Technology</title>
      <link href="/innovative-portfolio-a-journey-through-software-and-technology/"/>
      <url>/innovative-portfolio-a-journey-through-software-and-technology/</url>
      
        <content type="html"><![CDATA[<!-- title: "Innovative Portfolio: A Journey Through Software and Technology" --><p>Welcome to my portfolio! Here, I showcase a selection of my pastprojects that highlight my journey and expertise in software andtechnology. Dive into the links below to see my work in action:</p><ul><li><span class="exturl" data-url="aHR0cHM6Ly9lbmtyMS5naXRodWIuaW8vcGxhdGZvcm1zLw==">PlatformProjects<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9lbmtyMS5naXRodWIuaW8vNTU1YmVhdGJveC8=">555 Beatbox<i class="fa fa-external-link-alt"></i></span></li></ul><p>Stay tuned as I continue to add more projects and share insights intomy creative and technical processes.</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> project-portfolio </tag>
            
            <tag> software-development </tag>
            
            <tag> technology-projects </tag>
            
            <tag> mobile-app-development </tag>
            
            <tag> web-development </tag>
            
            <tag> ui-ux-design </tag>
            
            <tag> innovative-solutions </tag>
            
            <tag> tech-portfolio </tag>
            
            <tag> professional-projects </tag>
            
            <tag> creative-technology </tag>
            
            <tag> full-stack-development </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Goals 2024</title>
      <link href="/goals-2024/"/>
      <url>/goals-2024/</url>
      
        <content type="html"><![CDATA[<hr /><p>👋🏼 Hey everyone!</p><p>it is almost halfway through 2024, and i have finally gotten aroundto writing down my goals. i am diving into personal growth, careerambitions, and reigniting my passion for beatboxing and fitness.</p><p>follow me on this journey! 🎯</p><hr /><h2 id="professional-goals">Professional Goals</h2><h3 id="degree-pursuit">Degree Pursuit</h3><p>In 2024, I am determined to enroll in and excel in a <strong>ComputerScience</strong> degree program to solidify my technical foundation.Learning on the job has been an incredible experience for me, and I havedeveloped a strong understanding of <strong>what</strong> needs to bedone and <strong>how</strong> to do it, despite lacking some "low-level"knowledge.</p><p>In my opinion, pursuing this degree will not only validate andshowcase my abilities but also open up new career opportunities and helpme forge valuable connections along the way. I am confident that formalcertification will strengthen my expertise and position me for futuresuccess.</p><p>Currently, I am looking at some local unis e.g. <ahref="https://scale.nus.edu.sg/programmes/undergraduate-programmes/bachelor-of-information-technology">NationalUniversity of Singapore (NUS) Bachelor of Information Technology (BIT)programme</a>, NTU and SUSS.</p><!-- - [Harvard's Summer 2024 Academic Calendar](https://summer.harvard.edu/adult-college-students/calendar/) --><h4 id="action-plan">Action Plan:</h4><ul><li><strong>Research Programs</strong>: Identify and compare differentComputer Science degree programs to find the best fit.</li><li><strong>Prepare Application Materials</strong>: Update my CV, writepersonal statements, and gather recommendation letters.</li><li><strong>Enroll in Preparatory Courses</strong>: Take online coursesto brush up on foundational topics.</li><li><strong>Plan Finances</strong>: Explore scholarships, grants, andsavings options to fund my education.</li><li><strong>Time Management</strong>: Develop a study schedule thatbalances work and coursework effectively.</li></ul><h3 id="excellence-at-bytedance">Excellence at ByteDance</h3><p>Having joined ByteDance on 18 December 2023, I aim to become anexemplary project manager, software engineer and aPaaS consultant,setting a high standard for my peers and fellow ByteDancers. With abackground as a project manager and technical leader, transitioning backto a developer role feels quite unusual. I am now focusing mainly onself-management rather than code reviewing, which I used to doextensively with my colleagues at my previous company. However, I amconfident in my ability to excel through self-management and focus oncontinuous improvement. This role presents a unique challenge to mypractical skills as a "good" software engineer, but I recognise theimportance of soft skills in achieving success. I am eager to improvethese skills as I strongly believe they are essential for myprofessional growth. I am committed to mastering them to reach my careergoals!</p><h4 id="action-plan-1">Action Plan:</h4><ul><li><strong>Set Clear Objectives</strong>: Define specific, measurablegoals for my role as a software engineer and project manager.</li><li><strong>Continuous Learning</strong>: Attend workshops, webinars,and training sessions to enhance my technical and soft skills.</li><li><strong>Seek Feedback</strong>: Regularly ask for feedback frompeers and supervisors to identify areas for improvement.</li><li><strong>Networking</strong>: Build relationships with colleagues andindustry professionals to expand my network.</li><li><strong>Time Management</strong>: Implement effective timemanagement strategies to balance coding and project managementresponsibilities.</li><li><strong>Soft Skills Development</strong>: Focus on communication,teamwork, and leadership skills through practice and reflection.</li></ul><hr /><h2 id="personal-goals">Personal Goals</h2><h3 id="financial-growth">Financial Growth</h3><p>I have started looking into investments, a goal I have had evenbefore I began working. As a student, I focused on saving to pay off mystudent loans and support my family, leaving little extra money toinvest. Although the idea of investing was always in my mind, I couldn'tact on it until now.</p><p>This year, I finally have some savings set aside to begin investingand diversify my income sources. My goal is to secure long-termfinancial stability. I am exploring various investment opportunitiessuch as stocks, housing, and more. This is the year for me to takedecisive steps towards financial growth, and I am committed to draftinga detailed plan to achieve this goal!</p><h4 id="action-plan-2">Action Plan:</h4><ul><li><strong>Educate Myself</strong>: Read books, take online courses,and follow financial experts to build a solid understanding ofinvestment strategies.</li><li><strong>Set Financial Goals</strong>: Define clear, measurablefinancial goals for the short term and long term.</li><li><strong>Create a Budget</strong>: Develop a budget that allocates aportion of my income to investments.</li><li><strong>Diversify Investments</strong>: Research and invest in a mixof stocks, real estate, and other assets to spread risk.</li><li><strong>Monitor and Adjust</strong>: Regularly review my investmentsand make adjustments based on performance and market trends.</li><li><strong>Seek Professional Advice</strong>: Consult with "financialadvisors" to refine my investment strategy and ensure I am on the righttrack.</li></ul><h3 id="read-3-new-books">Read 3 New Books</h3><p>Currently, I am reading <em>The 7 Habits of Highly EffectivePeople</em> by Stephen Covey. I am applying the first three habits in myeveryday life, and while it is going well, I find it challenging attimes. Right now, I am on Habit 4, which is about thinking Win-Win. Thisconcept conflicts somewhat with ideas from <em>Never Split theDifference</em> by Chris Voss, a book I greatly appreciated. I am stilldigesting the ideas and core concepts, finding them intriguing because Ihave noticed these habits in many successful people I have spokenwith.</p><h4 id="action-plan-3">Action Plan:</h4><ul><li>Finish <strong>The 7 Habits of Highly Effective People by StephenCovey</strong> by June: Focus on understanding and applying all sevenhabits.</li><li>Explore recommendations and choose a book that aligns with myinterests and goals. Some books in mind:<ul><li><strong>The Diary of a CEO</strong> by Steven Bartlett</li><li><strong>Critical Thinking: Your Guide to Effective Argument,Successful Analysis and Independent Study</strong> by Tom Chatfield</li><li><strong>Being Logical: A Guide to Good Thinking</strong> by D.Q.McInerny</li><li><strong>Thinking, Fast and Slow</strong> by Daniel Kahneman</li><li><strong>100M Offers</strong> by Alex Hormozi</li><li><strong>Atomic Habits</strong> by James Clear: A great read onbuilding good habits and breaking bad ones.</li><li><strong>Deep Work</strong> by Cal Newport: Ideal for enhancing focusand productivity.</li><li><strong>Thinking, Fast and Slow</strong> by Daniel Kahneman: Offersinsights into how our minds work and how to make better decisions.</li><li><strong>How to Win Friends &amp; Influence People</strong> by DaleCarnegie: Learn how to build better relationships and communicateeffectively.</li><li><strong>Ghost in the Wires: My Adventures as the World's Most WantedHacker</strong> - Kevin D. Mitnick, Steve Wozniak (Foreword), William L.Simon (Primary Contributor) - <ahref="https://www.goodreads.com/book/show/10256723-ghost-in-the-wires">here</a></li></ul><blockquote><p><a href="/my-reading-collection">My Reading Collection</a></p></blockquote></li></ul><h3 id="competing-in-beatbox-battle-once-again">Competing in BeatboxBattle Once Again!</h3><p>As I have been dedicating my time to professional growth, I rarelyhad a chance to invest my time in practising like I used to... Back insecondary school, I would beatbox for <strong>8 hours a day</strong>after completing my homework. <strong>Yes, 8 hours</strong> - I ain'tkidding. I genuinely loved beatboxing, but I can sense my passion for itslowly fading.</p><h4 id="action-plan-4">Action Plan:</h4><ul><li><strong>Set Practice Goals</strong>: Allocate specific times eachweek for beatboxing practice to rekindle my passion.</li><li><strong>Participate More Beatbox Events</strong>: Connect with localor online beatboxing communities to stay motivated and learn newtechniques.</li><li><strong>Participate in Battles</strong>: Enter local and onlinebeatbox competitions to challenge myself and showcase my skills.</li><li><strong>Record and Review</strong>: Regularly record my sessions totrack progress and identify areas for improvement.</li><li><strong>Incorporate Beatboxing into Daily Life</strong>: Find smallopportunities throughout the day to practice, such as while commuting orduring breaks.</li></ul><hr /><h2 id="other-goals-in-the-pipeline-2025">Other Goals in the Pipeline(2025)</h2><p>In addition to my professional and personal goals, I am alsoexploring new hobbies and skills to enhance my creativity and well-beingoutside of work.</p><h3 id="music-production">Music Production</h3><p>I have already taken the first step towards music production bypurchasing FL Studio and a quality pair of headphones. I was ready todive into it, but my job hunting took priority (you can read more aboutthis in a future blog post, where I will share my experiences during thetech job crisis and my job transition). Although it is not a focus for2024, I am excited to eventually explore this creative outlet.</p><h3 id="bodybuilding">Bodybuilding</h3><p>Since mid-2022, I have been working out seriously, and bodybuildinghas become a significant part of my lifestyle. Although it is not my toppriority for 2024, I have ambitious goals for the future. I aspire tobecome one of the best bodybuilders, starting in Singapore andeventually competing on a global level. This is a long-term goal that Iam passionate about.</p>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Goals </category>
          
      </categories>
      
      
        <tags>
            
            <tag> goals </tag>
            
            <tag> professional-goals </tag>
            
            <tag> personal-goals </tag>
            
            <tag> career-development </tag>
            
            <tag> professional-growth </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Big-O Notation Notebook</title>
      <link href="/big-o-notation-notebook/"/>
      <url>/big-o-notation-notebook/</url>
      
        <content type="html"><![CDATA[<img data-src="/big-o-notation-notebook/bon-graph-1.png" class="" title="Making my note from https:&#x2F;&#x2F;neetcode.io&#x2F;courses&#x2F;lessons&#x2F;big-o-notation"><img data-src="/big-o-notation-notebook/bon-graph-2.png" class=""><h2 id="understanding-big-o-notation">Understanding Big-O Notation</h2><p>Big-O is like <strong>planning for the heaviest traffic during rushhour</strong>—it helps you understand the maximum time an algorithmmight take to complete, preparing you for the <strong>worst-casescenario</strong>.</p><h2 id="o1-constant-time-complexity"><code>O(1)</code>: Constant TimeComplexity</h2><ul><li><strong>Efficiency</strong>: Highest possible, as execution timeremains constant regardless of input size <code>n</code>.</li><li><strong>Behavior</strong>: Performance does not change; operationscomplete almost instantly.</li></ul><h3 id="common-examples">Common Examples:</h3><ul><li>Accessing an element by <code>index</code> in an array.</li><li>Adding or removing the last element in a stack (push/popoperations).</li><li>Inserting or deleting the first element in a queue.</li></ul><h3 id="coding-examples">Coding Examples:</h3><p>Array operations: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">nums.append(<span class="number">4</span>)  <span class="comment"># Append operation at the end</span></span><br><span class="line">nums.pop()      <span class="comment"># Pop operation at the end</span></span><br><span class="line"><span class="built_in">print</span>(nums[<span class="number">0</span>])  <span class="comment"># Access by index; look up</span></span><br></pre></td></tr></table></figure></p><p>Dictionary operations: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hash_map = &#123;<span class="string">&#x27;key&#x27;</span>: <span class="number">10</span>&#125;</span><br><span class="line">hash_map[<span class="string">&#x27;new_key&#x27;</span>] = <span class="number">20</span>      <span class="comment"># Insert operation</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;new_key&#x27;</span> <span class="keyword">in</span> hash_map)  <span class="comment"># Check existence</span></span><br><span class="line"><span class="built_in">print</span>(hash_map[<span class="string">&#x27;new_key&#x27;</span>])    <span class="comment"># Access by key</span></span><br><span class="line">hash_map.pop(<span class="string">&#x27;new_key&#x27;</span>)       <span class="comment"># Remove by key</span></span><br></pre></td></tr></table></figure></p><hr /><h2 id="olog-n-logarithmic-complexity"><code>O(log n)</code>:Logarithmic Complexity</h2><ul><li><strong>Efficiency</strong>: Highly efficient for large datasets asit reduces the problem size by <strong>half each step</strong>.</li><li><strong>Application</strong>: Common in algorithms that divide theproblem space into smaller segments, typically seen in binaryoperations.</li></ul><h3 id="common-examples-1">Common Examples:</h3><ul><li><strong>Binary Search</strong>: Quickly locates an element in asorted array by repeatedly dividing the search interval in half.</li><li><strong>Binary Search Tree (BST) Operations</strong>: Efficientlyfind, insert, or delete nodes.</li><li><strong>Divide and Conquer Algorithms</strong>: Like the "Guess theNumber" game, which narrows down the possible answers with each guess byhalving the range.</li></ul><h3 id="coding-examples-1">Coding Examples:</h3><p>Example of Binary Search in Python: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">target = <span class="number">3</span></span><br><span class="line">l, r = <span class="number">0</span>, <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> l &lt;= r:</span><br><span class="line">    m = (l + r) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> nums[m] &lt; target:</span><br><span class="line">        l = m + <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> nums[m] &gt; target:</span><br><span class="line">        r = m - <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Target found at index <span class="subst">&#123;m&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure></p><p>Example of Binary Search on a Binary Search Tree (BST):<figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">search_bst</span>(<span class="params">root, target</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> root:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> target &lt; root.val:</span><br><span class="line">        <span class="keyword">return</span> search_bst(root.left, target)</span><br><span class="line">    <span class="keyword">elif</span> target &gt; root.val:</span><br><span class="line">        <span class="keyword">return</span> search_bst(root.right, target)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure></p><p>Using a Min Heap: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line">min_heap = []</span><br><span class="line">heapq.heappush(min_heap, <span class="number">5</span>)  <span class="comment"># Insert into heap</span></span><br><span class="line">heapq.heappop(min_heap)      <span class="comment"># Remove from heap</span></span><br></pre></td></tr></table></figure></p><hr /><h2 id="osqrtn-square-root-complexity"><code>O(sqrt(n))</code>: SquareRoot Complexity</h2><ul><li><strong>Efficiency</strong>: Uncommon but effective for certaintypes of problems, especially those involving factorisation orsearching.</li></ul><h3 id="coding-examples-2">Coding Examples:</h3><p>This example demonstrates how to find all factors of a number,efficiently using <code>O(sqrt(n))</code> complexity by iterating onlyup to the square root of the number.</p><p>Finding all factors of <code>n</code>: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line">n = <span class="number">12</span></span><br><span class="line">factors = <span class="built_in">set</span>()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">int</span>(math.sqrt(n)) + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">if</span> n % i == <span class="number">0</span>:</span><br><span class="line">        factors.add(i)</span><br><span class="line">        factors.add(n // i)</span><br><span class="line"><span class="comment"># Output the factors</span></span><br><span class="line"><span class="built_in">print</span>(factors)</span><br></pre></td></tr></table></figure></p><blockquote><p>This approach significantly reduces the number of iterations neededto find all factors of <code>n</code> by using a <code>set</code>,making it faster than a typical <code>O(n)</code> solution that checksevery number up to <code>n</code>.</p></blockquote><hr /><h2 id="on-linear-complexity"><code>O(n)</code>: Linear Complexity</h2><ul><li><strong>Efficiency</strong>: Increases linearly with the size of theinput. The time complexity grows directly proportional to the input size<code>n</code>.</li><li><strong>Behavior</strong>: The worst-case runtime involves iteratingthrough all elements, making it predictable and straightforward.</li></ul><h3 id="common-examples-2">Common Examples:</h3><ul><li><strong>Traversing</strong> an array or linked list to process eachelement.</li><li><strong>Deleting</strong> a specific position in a linked list wheretraversal is required.</li></ul><h3 id="coding-examples-3">Coding Examples:</h3><p>This section demonstrates various <code>O(n)</code> operations inPython, including array manipulation and heap operations.</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Summing elements of an array</span></span><br><span class="line">total = <span class="built_in">sum</span>(nums)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Sum:&quot;</span>, total)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Looping through the array</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> nums:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Element:&quot;</span>, n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Inserting at a specific index</span></span><br><span class="line">nums.insert(<span class="number">1</span>, <span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;After Insert:&quot;</span>, nums)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Removing an element</span></span><br><span class="line">nums.remove(<span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;After Remove:&quot;</span>, nums)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Checking for element existence</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Is 100 present?&quot;</span>, <span class="number">100</span> <span class="keyword">in</span> nums)</span><br></pre></td></tr></table></figure><p>Converting array into a heap: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line">heapq.heapify(nums)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Heapified array:&quot;</span>, nums)</span><br></pre></td></tr></table></figure></p><blockquote><p>As well as nested loops example (e.g., sliding window technique) -complexity depends on the operations inside the loop.</p></blockquote><p>These examples highlight how <code>O(n)</code> complexity appears intypical data manipulation tasks and some algorithms where operationsscale linearly with the input size.</p><hr /><h2 id="on-log-n-linearithmic-complexity"><code>O(n log n)</code>:Linearithmic Complexity</h2><ul><li><strong>Efficiency</strong>: Extremely effective for operations thatcombine linear traversal with logarithmic processes, often seen insorting algorithms.</li><li><strong>Characteristics</strong>: This complexity is typical whereyou combine a linear process with a step that divides the problem set(<em>logarithmically</em>).</li></ul><h3 id="common-examples-3">Common Examples:</h3><ul><li><strong>Merge Sort</strong>: Efficiently combines smaller sortedarrays into larger ones.</li><li><strong>Heap Sort</strong>: Builds a heap and then sorts by removingthe largest or smallest element repeatedly.</li><li><strong>Quick Sort</strong>: Selects a pivot and partitions thearray around it, sorting the partitions recursively.</li><li><strong>Certain Divide and Conquer Algorithms</strong>: Optimises<code>O(n^2)</code> algorithms by breaking the problem into smallerparts and solving them individually.</li></ul><h3 id="coding-examples-4">Coding Examples:</h3><p>Here we demonstrate how heap sort and merge sort operate, reflecting<code>O(n log n)</code> complexity.</p><p>HeapSort example in Python: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line">nums = [<span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Building the heap from the list, O(n)</span></span><br><span class="line">heapq.heapify(nums)</span><br><span class="line">sorted_nums = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># Removing the smallest element until the heap is empty, O(log n) each</span></span><br><span class="line"><span class="keyword">while</span> nums:</span><br><span class="line">    sorted_nums.append(heapq.heappop(nums))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;HeapSort result:&quot;</span>, sorted_nums)</span><br></pre></td></tr></table></figure></p><p>MergeSort example (using Python's built-in sorting which is typicallyTimsort): <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nums = [<span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">2</span>]</span><br><span class="line">sorted_nums = <span class="built_in">sorted</span>(nums)  <span class="comment"># Utilizes a variation of merge sort with O(n log n) complexity</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;MergeSort result:&quot;</span>, sorted_nums)</span><br></pre></td></tr></table></figure></p><p>These examples underscore how <code>O(n log n)</code> operations arepivotal in efficient data processing, particularly in sorting andoptimising complex algorithms.</p><hr /><h2 id="on2-quadratic-complexity"><code>O(n^2)</code>: QuadraticComplexity</h2><ul><li><strong>Efficiency</strong>: Common in algorithms that involve pairsof elements or <strong>nested iterations</strong>, leading toperformance that scales as the square of the input size.</li><li><strong>Characteristics</strong>: Often observed in simpler or<strong>brute-force</strong> sorting algorithms and when dealing withtwo-dimensional data structures.</li></ul><h3 id="common-examples-4">Common Examples:</h3><ul><li><strong>Bubble Sort</strong>: Repeatedly steps through the list,compares adjacent elements and swaps them if they are in the wrongorder.</li><li><strong>Insertion Sort</strong>: Builds the final sorted array oneitem at a time by inserting elements at their correct position.</li><li><strong>Selection Sort</strong>: Repeatedly selects the smallest (orlargest) element from the unsorted portion and moves it to the end ofthe sorted portion.</li><li><strong>Traversing a 2D Array</strong>: Iterates over each row andcolumn of a matrix.</li></ul><h3 id="coding-examples-5">Coding Examples:</h3><p>These examples demonstrate typical scenarios where<code>O(n^2)</code> complexity occurs, including iterating through a 2Darray and implementing a basic sorting algorithm.</p><p>Traverse a square grid in Python: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nums = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums[i])):</span><br><span class="line">        <span class="built_in">print</span>(nums[i][j], end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure></p><p>Get every pair of elements in an array: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, <span class="built_in">len</span>(nums)):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Pair: (<span class="subst">&#123;nums[i]&#125;</span>, <span class="subst">&#123;nums[j]&#125;</span>)&#x27;</span>)</span><br></pre></td></tr></table></figure></p><p>Example of Insertion Sort: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">insertion_sort</span>(<span class="params">nums</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(nums)):</span><br><span class="line">        key = nums[i]</span><br><span class="line">        j = i - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> j &gt;= <span class="number">0</span> <span class="keyword">and</span> key &lt; nums[j]:</span><br><span class="line">            nums[j + <span class="number">1</span>] = nums[j]</span><br><span class="line">            j -= <span class="number">1</span></span><br><span class="line">        nums[j + <span class="number">1</span>] = key</span><br><span class="line"></span><br><span class="line">nums = [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br><span class="line">insertion_sort(nums)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Sorted array:&quot;</span>, nums)</span><br></pre></td></tr></table></figure></p><p>These snippets underline the impact of quadratic complexity,especially evident in data processing and sorting operations where eachelement must interact with others in a nested manner.</p><hr /><h2 id="onm-multiplicative-complexity"><code>O(n*m)</code>:Multiplicative Complexity</h2><ul><li><strong>Efficiency</strong>: Encountered in situations where theperformance depends on the product of <strong>two differentdimensions</strong>, such as in rectangular grids or operationsinvolving two different datasets.</li><li><strong>Characteristics</strong>: Similar to <code>O(n^2)</code> inscenarios where both dimensions can vary independently.</li></ul><h3 id="common-examples-5">Common Examples:</h3><ul><li><strong>Cross-product Operations</strong>: Generating all possiblepairs from two different lists or arrays.</li><li><strong>Traversing a Rectangular Grid</strong>: Iterating througheach cell of a grid that does not necessarily have equal dimensions(e.g., a 2x3 grid).</li></ul><h3 id="coding-examples-6">Coding Examples:</h3><p>The following snippets illustrate how <code>O(n*m)</code> complexitymanifests, by showing operations on arrays of different lengths and arectangular grid traversal.</p><p>Get every pair of elements from two different arrays:<figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nums1, nums2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums1)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums2)):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Pair: (<span class="subst">&#123;nums1[i]&#125;</span>, <span class="subst">&#123;nums2[j]&#125;</span>)&#x27;</span>)</span><br></pre></td></tr></table></figure></p><p>Traverse a rectangular grid: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nums = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums[i])):</span><br><span class="line">        <span class="built_in">print</span>(nums[i][j], end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>()  <span class="comment"># New line after each row</span></span><br></pre></td></tr></table></figure></p><p>These examples highlight the computational considerations whendealing with operations that require accessing elements across twodimensions or datasets, each influencing the total number of operationsperformed.</p><hr /><h2 id="on3-cubic-complexity"><code>O(n^3)</code>: Cubic Complexity</h2><ul><li><strong>Efficiency</strong>: Generally inefficient due to the highruntime, especially as the size of <code>n</code> increases. Oftenimpractical for large datasets.</li><li><strong>Characteristics</strong>: Typically appears in algorithmsthat involve <strong>three nested loops</strong>, affecting performancesignificantly as each layer adds another dimension of iteration.</li></ul><h3 id="common-examples-6">Common Examples:</h3><ul><li><strong>Triple Nested Loops</strong>: Used to generate all possibletriplets from an array, which is common in certain mathematical or<strong>brute-force</strong> solutions.</li></ul><h3 id="coding-example">Coding Example:</h3><p>This example illustrates a simple cubic complexity scenario where allunique triplets from an array are printed. Such operations arecomputationally intensive and <strong>usually avoided inperformance-critical applications</strong>.</p><p>Print all unique triplets in an array: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, <span class="built_in">len</span>(nums)):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(j + <span class="number">1</span>, <span class="built_in">len</span>(nums)):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;Triplet: (<span class="subst">&#123;nums[i]&#125;</span>, <span class="subst">&#123;nums[j]&#125;</span>, <span class="subst">&#123;nums[k]&#125;</span>)&#x27;</span>)</span><br></pre></td></tr></table></figure></p><p>This code efficiently demonstrates an <code>O(n^3)</code> complexityby iterating through three nested loops to produce every combination ofthree elements without repetition. The example is straightforward,highlighting the nature of cubic complexity in a clear and concisemanner.</p><hr /><h2 id="o2n-ocn-exponential-complexity"><code>O(2^n)</code> /<code>O(c^n)</code>: Exponential Complexity</h2><ul><li><strong>Efficiency</strong>: Highly inefficient for large values of<code>n</code> due to the exponential growth in the number ofoperations.</li><li><strong>Characteristics</strong>: Often associated with recursivefunctions where the number of recursive calls doubles or increases by aconstant multiplier at each step.</li></ul><h3 id="o2n"><code>O(2^n)</code>:</h3><ul><li><strong>Use Case</strong>: Commonly appears in recursive algorithmsthat explore all possible combinations or paths, such as in computingthe Fibonacci sequence or solving decision problems.</li><li><strong>Example</strong>: Computing the Fibonacci sequencerecursively where each call generates two further calls.</li></ul><h4 id="coding-example-for-o2n">Coding Example for<code>O(2^n)</code>:</h4><p>Fibonacci sequence using recursion, which doubles the calls at eachstep: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fibonacci</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    <span class="keyword">return</span> fibonacci(n - <span class="number">1</span>) + fibonacci(n - <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Testing the function</span></span><br><span class="line"><span class="built_in">print</span>(fibonacci(<span class="number">5</span>))  <span class="comment"># Output: 5 (0, 1, 1, 2, 3, 5)</span></span><br></pre></td></tr></table></figure></p><h3 id="ocn"><code>O(c^n)</code>:</h3><ul><li><strong>Explanation</strong>: This complexity arises when therecursive function expands by more than two branches per call, typicallyinfluenced by an additional variable or parameter <code>c</code>, whichcan sometimes be dependent on <code>n</code>.</li></ul><h4 id="coding-example-for-ocn">Coding Example for<code>O(c^n)</code>:</h4><p>General exponential recursion where c branches out depending on theinput size: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">exponential_recursion</span>(<span class="params">i, nums, c</span>):</span><br><span class="line">    <span class="keyword">if</span> i &gt;= <span class="built_in">len</span>(nums):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="comment"># The loop creates multiple branches per recursion, depending on c</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, c + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> i + j &lt; <span class="built_in">len</span>(nums):</span><br><span class="line">            total += exponential_recursion(i + j, nums, c)</span><br><span class="line">    <span class="keyword">return</span> total</span><br><span class="line"></span><br><span class="line"><span class="comment"># Example usage with c branches</span></span><br><span class="line">nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">c = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(exponential_recursion(<span class="number">0</span>, nums, c))  <span class="comment"># Output depends on specific conditions and `nums` length</span></span><br></pre></td></tr></table></figure></p><p>Both examples illustrate the complexity and <strong>potentialinefficiencies</strong> of exponential growth in recursive algorithms,particularly when the problem size or parameters allow recursive callsto multiply rapidly. These complexities are <strong>typically avoided inpractical applications</strong> unless optimisations or memoisationtechniques are applied to reduce the impact of redundancy in recursivecalls.</p><hr /><h2 id="on-factorial-complexity"><code>O(n!)</code>: FactorialComplexity</h2><ul><li><strong>Efficiency</strong>: Extremely slow and typicallyimpractical for large <code>n</code> due to the <strong>exponentialincrease</strong> in the number of operations required.</li><li><strong>Characteristics</strong>: Factorial complexity occurs inscenarios where you need to generate all possible permutations of adataset, which grows factorially with the number of elements.</li></ul><h3 id="common-examples-7">Common Examples:</h3><ul><li><strong>Travelling Salesman Problem (TSP)</strong>: Solved via<strong>brute-force</strong> search by evaluating every possible routeto determine the shortest possible path.</li><li><strong>Generating Permutations</strong>: Producing all possibleorderings of a set without any restrictions.</li><li><strong>Laplace Expansion</strong>: Used to compute the determinantof a matrix, where each expansion adds factorial growth incomplexity.</li><li><strong>Set Partitions</strong>: Enumerating all distinct ways topartition a set into non-empty subsets.</li></ul><p>These examples involve extensive computations as the input sizeincreases, making them highly inefficient for larger datasets. Due tothe nature of factorial growth, <em>such complexities are oftentheoretical or restricted to very constrained or small-scale problems inpractical applications.</em></p><h2 id="big-o-notation-cheat-sheet">Big-O Notation Cheat Sheet</h2><table><colgroup><col style="width: 8%" /><col style="width: 91%" /></colgroup><thead><tr class="header"><th>Complexity</th><th>Description</th></tr></thead><tbody><tr class="odd"><td><code>O(1)</code></td><td>Constant - The fastest and most efficient complexity, whereoperations complete in the same time regardless of the input size.</td></tr><tr class="even"><td><code>O(log n)</code></td><td>Logarithmic - Efficiency scales with the logarithm of the inputsize, typical in binary search.</td></tr><tr class="odd"><td><code>O(n)</code></td><td>Linear - Runtime grows directly in proportion to the inputsize.</td></tr><tr class="even"><td><code>O(n log n)</code></td><td>Linearithmic - Combines linear and logarithmic complexities; commonin efficient sorting algorithms like mergesort.</td></tr><tr class="odd"><td><code>O(n^2)</code></td><td>Quadratic - Often results from nested loops; each element isprocessed multiple times.</td></tr><tr class="even"><td><code>O(n^3)</code></td><td>Cubic - Similar to quadratic, but with three nested loops; lesscommon due to high inefficiency for large data sets.</td></tr><tr class="odd"><td><code>O(2^n)</code></td><td>Exponential - Doubling with each additional element; common inrecursive algorithms solving the subset problems.</td></tr><tr class="even"><td><code>O(n!)</code></td><td>Factorial - The slowest and least efficient; associated withalgorithms that generate all permutations of a dataset.</td></tr><tr class="odd"><td><code>O(n^n)</code></td><td>Exponential - Extreme cases where the complexity grows exponentiallywith the number of elements raised to their own power.</td></tr></tbody></table><hr /><h2 id="notes-for-myself">Notes for Myself</h2><ul><li>Case such as <code>n + nlogn</code>, we don't need to say the first<code>n</code> because in Big-O notation we only care about the largerterm <em>if they are the same variable</em>. so we can just say:<code>nlogn</code>.</li><li>BUT, case like <code>m + nlogn</code>, we have to mention the<code>m</code> in <code>m + nlogn</code> because <code>m</code> is adifferent variable.</li></ul><hr /><h2 id="references">References:</h2><ul><li>https://neetcode.io/courses/lessons/big-o-notation</li><li>https://stackoverflow.com/questions/1592649/examples-of-algorithms-which-has-o1-on-log-n-and-olog-n-complexities</li></ul>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Software Engineering Best Practices </category>
          
          <category> Career Development </category>
          
          <category> Notebooks </category>
          
          <category> Interviews </category>
          
          <category> Interview Preparation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
            <tag> technical-interview-prep </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java Notebook</title>
      <link href="/java-notebook/"/>
      <url>/java-notebook/</url>
      
        <content type="html"><![CDATA[<p>my java notebook</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Programming Languages </category>
          
          <category> Notebooks </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Manacher&#39;s Algorithm: Fast and Efficient Palindrome Detection</title>
      <link href="/manacher-s-algorithm-fast-and-efficient-palindrome-detection/"/>
      <url>/manacher-s-algorithm-fast-and-efficient-palindrome-detection/</url>
      
        <content type="html"><![CDATA[<h2 id="note-for-myself">Note for myself</h2><ul><li>add special char just to partition them for expansion e.g.<code>#</code> → <code>#A#B#B#C#</code></li><li>initialise ⇒<code>maxRight=0, palindromLengths=[], center=0</code></li><li>by looping it we check if the current <code>i</code> is withinmaxRight, if yes, we use a<ul><li><code>mirror = center*2 - i</code></li><li><code>min(maxRight - i, p[mirror])</code> for the case when the partof palindrome is not starting from <code>0</code></li></ul></li><li>and every loop just move the <code>maxRight</code> and<code>center</code> when <code>i + p[i] &gt; R</code> ⇒<code>maxRight = i + p[i], center=i</code></li><li>case below is looking for the number of palindrome:<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">countSubstrings</span> = (<span class="params">s</span>) =&gt; &#123; <span class="comment">// Manacher&#x27;s algorithm</span></span><br><span class="line">  <span class="keyword">let</span> modifiedString = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; s.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    modifiedString += s[i] + <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> n = modifiedString.<span class="property">length</span>;</span><br><span class="line">  <span class="keyword">const</span> P = <span class="keyword">new</span> <span class="title class_">Array</span>(n).<span class="title function_">fill</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">let</span> center = <span class="number">0</span>, right = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt;= right) &#123;</span><br><span class="line">      <span class="keyword">const</span> mirror = <span class="number">2</span> * center - i;</span><br><span class="line">      P[i] = <span class="title class_">Math</span>.<span class="title function_">min</span>(right - i, P[mirror]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> leftIndex = i - (<span class="number">1</span> + P[i]);</span><br><span class="line">    <span class="keyword">let</span> rightIndex = i + (<span class="number">1</span> + P[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (leftIndex &gt;= <span class="number">0</span> &amp;&amp; rightIndex &lt; n &amp;&amp; modifiedString[leftIndex] === modifiedString[rightIndex]) &#123;</span><br><span class="line">      P[i]++;</span><br><span class="line">      leftIndex--;</span><br><span class="line">      rightIndex++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (i + P[i] &gt; right) &#123;</span><br><span class="line">      center = i;</span><br><span class="line">      right = i + P[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    count += <span class="title class_">Math</span>.<span class="title function_">ceil</span>(P[i] / <span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> count;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>rewind please its hard to actually memorise - do it again!</p></blockquote><hr /><h2 id="what-is-manachers-algorithm">What is Manacher's Algorithm?</h2><p>Manacher's algorithm is an efficient algorithm used to find the<strong>longest palindromic substring in a given string</strong>. It wasinvented by Gustav Manacher in 1975. The algorithm works by using theproperties of palindromic substrings to avoid unnecessary comparisons,thereby reducing the overall time complexity.</p><p>Overall, Manacher's algorithm is a very elegant and efficientsolution to the problem of finding the longest palindromic substring ina given string.</p><p>The algorithm uses two key ideas:</p><ol type="1"><li>Symmetry property: A palindrome has a symmetry around its<code>center</code>. If we already know the palindrome of a<code>center</code>, we can use it to avoid checking characters thatcannot be part of a longer palindrome.</li><li>Dynamic Programming: We can use previous calculations to compute newones.</li></ol><p><em>The Manacher's algorithm has a time complexity of O(n), where nis the length of the string, which makes it very efficient.</em></p><p>Here's how the Manacher algorithm works:</p><ol type="1"><li><p>Preprocess the input string <code>s</code> by inserting a specialcharacter, such as '#', between each pair of characters to make thestring odd-length. For example, the string "abba" would become"#a#b#b#a#".</p></li><li><p>Initialise two arrays:</p><ol type="1"><li><code>P</code>, where <code>P[i]</code> stores the length of thelongest palindromic substring centered at <code>i</code>, and</li><li><code>C</code>, where <code>C[i]</code> stores the center of thelongest palindromic substring found so far.</li></ol></li><li><p>Set a variable called <code>maxRight</code> to <code>0</code>,which represents the rightmost boundary of the longest palindromicsubstring found so far, and set <code>center</code> to <code>0</code>,which represents its center.</p></li><li><p>Iterate through the string <code>s</code> from left to right, andfor each character <code>i</code>, do the following:</p><ol type="a"><li><p>If <code>i</code> is within the current palindromic substring(i.e., i &lt;= maxRight), set <code>P[i]</code> to<code>min(P[2 * center - i], maxRight - i)</code>, which means thepalindrome centered at <code>i</code> is a reflection of the palindromecentered at center.</p></li><li><p>Expand the palindrome centered at <code>i</code> by comparingcharacters <code>s[i - P[i] - 1]</code> and<code>s[i + P[i] + 1]</code>. If they are equal, increase<code>P[i]</code> by <code>1</code>.</p></li><li><p>If the expanded palindrome centered at <code>i</code> extendsbeyond <code>maxRight</code>, update <code>maxRight</code> and<code>center</code> accordingly.</p></li></ol></li><li><p>Find the maximum value in the <code>P</code> array, and itscorresponding <code>center</code> index. The longest palindromicsubstring is then the substring centered at this index, with length<code>P[center] - 1</code>.</p></li></ol><hr /><h2 id="for-myself">For myself</h2><p>My workaround: <img data-src="/manacher-s-algorithm-fast-and-efficient-palindrome-detection/workaround-1.png" class="" title="usual case"> <img data-src="/manacher-s-algorithm-fast-and-efficient-palindrome-detection/workaround-2.png" class="" title="example of case where window is not starting form 0"></p><h2 id="references">References</h2><ul><li><span class="exturl" data-url="aHR0cHM6Ly95b3V0dS5iZS9sLVhDV2pwcy1VUT9zaT1oZThHRWMyVzdrYkdlQ09D">YouTube -LeetCode Solution - 5.0 Longest Palindromic Substring | ManacherAlgorithm 100% Beat<i class="fa fa-external-link-alt"></i></span></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Data Structures &amp; Algorithms </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Computer Networking Notebook</title>
      <link href="/computer-networking-notebook/"/>
      <url>/computer-networking-notebook/</url>
      
        <content type="html"><![CDATA[<p>wip ...</p><span id="more"></span><h2 id="network-ip-vs-router-ip">Network IP vs Router IP</h2><h3 id="analogy-your-home-as-a-network">Analogy: Your Home as aNetwork</h3><p>Think of your <strong>home</strong> as your local network, and your<strong>home's postal address</strong> as your router's <strong>publicIP address</strong>.</p><ol type="1"><li><strong>Public IP Address (Router's External IP)</strong><ul><li><strong>Analogy</strong>: Your home's postal address (e.g.,219.75.101.20)</li><li>This address is how the outside world (e.g., mail delivery, friendsvisiting) finds your home. When you send a letter (data) from your home,it goes out with this address, and any mail sent to this address fromthe outside (such as a response from a website) knows how to reach yourhome.</li><li><strong>Security Note</strong>: Just as your home's address can beseen by anyone, your public IP can be seen by anyone on the internet.This is why you wouldn't put sensitive information like your securitycodes or safe keys publicly accessible at your postal address.</li></ul></li><li><strong>Local Network IPs (Private IPs)</strong><ul><li><strong>Analogy</strong>: Rooms within your home (e.g.,192.168.1.72)</li><li>Each device in your network is like a room in your house. Insideyour home, each room has its own specific purpose and place, much likehow each device in your network has its own specific IP address. Theseaddresses only make sense inside your network (home).</li><li><strong>Security Note</strong>: Just as someone can't directlyaccess a room in your house unless they first come to your main door(router), devices from the internet cannot directly access a device onyour private network without going through the router, which acts as agatekeeper.</li></ul></li></ol><h4 id="accessing-the-router">Accessing the Router:</h4><ul><li><strong>SSH to Router</strong>: If SSH is set up and accessible fromthe internet (usually not recommended for security reasons), someonecould potentially attempt to SSH into your router using its public IPaddress (e.g., 219.75.101.20). This would be akin to someone coming toyour home's main entrance and trying to unlock the door.</li><li><strong>Local Access</strong>: Accessing your router's settings istypically done from within the network using its private IP (like<code>192.168.1.1</code>), similar to how you'd manage things withinyour house internally.</li></ul><p><strong>Security Considerations</strong>: Just as you would keep yourhome secure by locking doors and perhaps having a security system, yournetwork should be secured. This includes using strong passwords,updating firmware, disabling unnecessary external access (like SSH fromthe internet), and using firewalls.</p><p>This analogy simplifies a bit, but it should help illustrate thebasic concepts of how public and private IP addresses function inrelation to your network (home) and the internet (outside world).</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Computer Networking </category>
          
          <category> Notebooks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> backend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The 7 Habits of Highly Effective People by Stephen Covey</title>
      <link href="/the-7-habits-of-highly-effective-people-by-stephen-covey/"/>
      <url>/the-7-habits-of-highly-effective-people-by-stephen-covey/</url>
      
        <content type="html"><![CDATA[<p>Hello there!</p><p>if you stumbled upon this blog by chance, welcome to my personalnotebook. here, i jot down insights, reflections, and key takeaways frombooks i'm reading—starting with <em>The 7 Habits of Highly EffectivePeople</em> by Stephen Covey, a gift from my aunt.</p><hr /><h2 id="overview">Overview</h2><p>We are what we repeatedly do. Excellence, then, is not an act, but ahabit.</p><p>Habits = knowledge (what to, why to) + desire (want to) + skill (howto)</p><p>it is a painful process, it is a change that has to be motivated byhigher purpose, by willingness to subordinate what you think you wantnow for what you want later.</p><p>Happiness can be defined, in part at least, as the fruit of thedesire and ability to sacrifice what we want now for what we wanteventually.</p><ul><li><strong>dependent</strong> is the paradigm of you-you take care ofme; you come through for me; you did not come through; I blame you forthe result.</li><li><strong>independent</strong> is the paradigm of I-I can do it; I amresponsible; I am self-reliant; I can choose.</li><li><strong>interdependent</strong> is the paradigm of we-we can do it;we can cooperate; we can combine our talents and abilities and createsomething greater together.</li></ul><hr /><h2 id="private-victory">Private Victory</h2><h3 id="habit-1-be-proactive">Habit 1: Be Proactive</h3><blockquote><p><strong>Quote:</strong> "Between stimulus and response, man has thefreedom to choose."</p></blockquote><h4 id="core-idea-take-responsibility-for-your-actions-and-life.">CoreIdea: Take responsibility for your actions and life.</h4><h4 id="key-points">Key Points:</h4><ol type="1"><li><strong>Proactivity vs. Reactivity</strong>:<ul><li><strong>Proactive</strong>: Focus on what you can control.</li><li><strong>Reactive</strong>: Focus on what you can't control.</li></ul></li><li><strong>Circle of Influence vs. Circle of Concern</strong>:<ul><li><strong>Circle of Influence</strong>: Things you can affect.</li><li><strong>Circle of Concern</strong>: Things you can't control.</li></ul></li><li><strong>Response-ability</strong>: Choose your response to anysituation.</li></ol><h4 id="action-plan">Action Plan:</h4><ol type="1"><li><strong>Shift Your Mindset</strong>:<ul><li>Identify areas where you feel reactive.</li><li>Practice using proactive language.</li></ul></li><li><strong>Expand Your Circle of Influence</strong>:<ul><li>List areas within your control.</li><li>Focus your energy on influencing these areas.</li></ul></li><li><strong>Take Responsibility</strong>:<ul><li>Own your decisions and their outcomes.</li><li>Reflect on past decisions and how you responded.</li></ul></li></ol><h4 id="to-do-list">To-Do List:</h4><ul><li><strong>Daily</strong>: Use proactive statements like "I chooseto..." or "I will..."</li><li><strong>Weekly</strong>: Review your Circle of Influence and expandit.</li><li><strong>Monthly</strong>: Reflect on decisions you've made and theiroutcomes.</li></ul><h4 id="personal-notes">Personal Notes:</h4><p>You have the ability to respond, therefore, it is calledresponsibility.</p><hr /><h2 id="wip-...">wip ...</h2><h2 id="habit-2-begin-with-the-end-in-mind">Habit 2: Begin with the Endin Mind</h2><p><strong>Quote:</strong> "Begin with the end in mind means to begineach day, task, or project with a clear vision of your desired directionand destination."</p><h3 id="core-idea">Core Idea:</h3><p>Define clear personal goals and values.</p><h3 id="key-points-1">Key Points:</h3><ul><li><strong>Vision and Values</strong>:<ul><li>Know where you want to go.</li><li>Align actions with long-term goals and values.</li></ul></li><li><strong>Personal Mission Statement</strong>:<ul><li>Write a mission statement: What you want to be and do.</li></ul></li><li><strong>Roles and Goals</strong>:<ul><li>Identify your roles (e.g., family, career).</li><li>Set specific goals for each role.</li></ul></li></ul><h3 id="action-plan-1">Action Plan:</h3><ol type="1"><li><strong>Define Your Vision and Values</strong>:<ul><li>Write a personal mission statement.</li><li>Identify your core values.</li></ul></li><li><strong>Set Long-Term Goals</strong>:<ul><li>Break down your vision into achievable goals.</li><li>Align these goals with your values and mission statement.</li></ul></li><li><strong>Create Visual Reminders</strong>:<ul><li>Use vision boards or written affirmations.</li></ul></li></ol><h3 id="to-do-list-1">To-Do List:</h3><ul><li><strong>Daily</strong>: Reflect on your personal missionstatement.</li><li><strong>Weekly</strong>: Set and review goals for each role you play(e.g., family, career).</li><li><strong>Monthly</strong>: Update your mission statement and goals asneeded.</li></ul><h3 id="personal-notes-1">Personal Notes:</h3><hr /><h2 id="habit-3-put-first-things-first">Habit 3: Put First ThingsFirst</h2><p><strong>Quote:</strong> "The key is not to prioritize what's on yourschedule, but to schedule your priorities."</p><h3 id="core-idea-1">Core Idea:</h3><p>Prioritize and manage your time based on importance.</p><h3 id="key-points-2">Key Points:</h3><ul><li><strong>Time Management Matrix</strong>:<ul><li><strong>Quadrant I</strong>: Urgent and important (crises).</li><li><strong>Quadrant II</strong>: Not urgent but important (planning,relationships).</li><li><strong>Quadrant III</strong>: Urgent but not important(interruptions).</li><li><strong>Quadrant IV</strong>: Not urgent and not important(time-wasters).</li></ul></li><li><strong>Focus on Quadrant II</strong>:<ul><li>Prevent crises by focusing on important tasks.</li></ul></li><li><strong>Delegation</strong>:<ul><li>Delegate tasks when possible.</li></ul></li></ul><h3 id="action-plan-2">Action Plan:</h3><ol type="1"><li><strong>Identify Key Roles and Goals</strong>:<ul><li>List your key roles (e.g., employee, parent, friend).</li><li>Set specific, time-bound goals for each role.</li></ul></li><li><strong>Prioritize Tasks</strong>:<ul><li>Use the Time Management Matrix to categorize tasks.</li><li>Focus on Quadrant II activities.</li></ul></li><li><strong>Schedule Important Activities</strong>:<ul><li>Block out time in your calendar for important but not urgenttasks.</li><li>Ensure a balance between professional and personal life.</li></ul></li></ol><h3 id="to-do-list-2">To-Do List:</h3><ul><li><strong>Daily</strong>: Prioritize tasks using the Time ManagementMatrix.</li><li><strong>Weekly</strong>: Schedule Quadrant II activities.</li><li><strong>Monthly</strong>: Review and adjust your priorities.</li></ul><h3 id="personal-notes-2">Personal Notes:</h3><hr /><h2 id="habit-4-think-win-win">Habit 4: Think Win-Win</h2><p><strong>Quote:</strong> "Win-win is a frame of mind and heart thatconstantly seeks mutual benefit in all human interactions."</p><h3 id="core-idea-2">Core Idea:</h3><p>Seek mutually beneficial solutions.</p><h3 id="key-points-3">Key Points:</h3><ul><li><strong>Abundance Mentality</strong>:<ul><li>Believe there's enough for everyone.</li></ul></li><li><strong>Interpersonal Leadership</strong>:<ul><li>Build relationships based on mutual respect.</li></ul></li><li><strong>Balance of Courage and Consideration</strong>:<ul><li>Express your needs and consider others' needs.</li></ul></li></ul><h3 id="action-plan-3">Action Plan:</h3><ol type="1"><li><strong>Adopt an Abundance Mentality</strong>:<ul><li>Practice thinking “win-win” in daily interactions.</li><li>Seek opportunities for mutual benefit.</li></ul></li><li><strong>Build Strong Relationships</strong>:<ul><li>Invest time in understanding others' perspectives.</li><li>Communicate openly and honestly.</li></ul></li><li><strong>Develop Trust</strong>:<ul><li>Be consistent and reliable.</li><li>Show empathy and respect in all interactions.</li></ul></li></ol><h3 id="to-do-list-3">To-Do List:</h3><ul><li><strong>Daily</strong>: Look for win-win solutions in yourinteractions.</li><li><strong>Weekly</strong>: Engage in activities that buildrelationships.</li><li><strong>Monthly</strong>: Reflect on your interactions and improveyour approach.</li></ul><h3 id="example">Example:</h3><ul><li><strong>Scenario</strong>: Working on a project with a colleague.<ul><li><strong>Step 1</strong>: Listen to their ideas.</li><li><strong>Step 2</strong>: Share your ideas clearly.</li><li><strong>Step 3</strong>: Find a solution that incorporates bothperspectives.</li></ul></li></ul><h3 id="personal-notes-3">Personal Notes:</h3><p>...</p>]]></content>
      
      
      <categories>
          
          <category> Personal Development </category>
          
          <category> Collections </category>
          
          <category> Notebooks </category>
          
          <category> Reading </category>
          
          <category> Book </category>
          
          <category> Stephen Covey </category>
          
      </categories>
      
      
        <tags>
            
            <tag> physical-book </tag>
            
            <tag> reading </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Notebook</title>
      <link href="/hexo-notebook/"/>
      <url>/hexo-notebook/</url>
      
        <content type="html"><![CDATA[<h2 id="issue-with-categoriestags-insensitive-name-change">issue withcategories/tags insensitive name change</h2><ul><li>If you have your <code>tags/categories</code> name changed from"ABC" to "abc", it will not reflected immediately, the folder will staythe same name. The trick I found so far is to rename to something elsefirst and change it back to the lowercase. E.g. ABC -&gt; ABC123 -&gt;abc</li></ul><h2 id="how-i-added-view-count-globe">how i added view count globe</h2><ul><li>https://www.revolvermaps.com/?target=setup2d in<code>themes/next/layout/_partials/sidebar/site-overview.swig</code></li><li>idea from https://qiuyiwu.github.io/2019/01/26/Hexo-View/</li></ul><h2 id="firebase">firebase</h2><ul><li>firebase at themes/next/layout/_partials/head/head-unique.swig<ul><li><p>todo:https://www.google.com/search?q=firebase+hexo+next+visitor+count&amp;rlz=1C5CHFA_enSG961SG961&amp;oq=firebase+hexo+next+visitor+count&amp;gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIGCAEQRRhA0gEINDkzOWowajSoAgCwAgE&amp;sourceid=chrome&amp;ie=UTF-8<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">firebase init firestore <span class="comment"># will give u the file to add - access by cmd + click</span></span><br><span class="line"><span class="comment"># select N on:</span></span><br><span class="line"><span class="comment"># ? File firestore.rules already exists. Do you want to overwrite it with the Firestore Rules</span></span><br><span class="line"><span class="comment"># from the Firebase Console? (y/N)</span></span><br><span class="line">firebase deploy --only firestore</span><br></pre></td></tr></table></figure></p></li><li><p>https://stackoverflow.com/questions/46590155/firestore-permission-denied-missing-or-insufficient-permissions</p></li><li><p>https://console.cloud.google.com/firestore/databases/-default-/data/panel/articles/My%20LeetCode%20Journey:%20From%20Novice%20to%20ByteDance%20Software%20Engineer?project=hexo-blog-9ccea</p></li><li><p>https://cloud.google.com/firestore/docs/security/get-started?_gl=1<em>1qcz2lv</em>_ga<em>MTMyODM5MzcwNC4xNzE0ODIzMDUz</em>_ga_WH2QY8WWF5*MTcxNTEwMTkxMy4yLjEuMTcxNTEwMzcxOS4wLjAuMA..&amp;_ga=2.209118674.-1328393704.1714823053#use_the_cli</p></li></ul></li></ul><h2 id="math-syntax">math syntax</h2><ul><li>https://theme-next.js.org/docs/third-party-services/math-equations#mjx-eqn%3Aeq4</li></ul><h2 id="wip">wip</h2>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Notebooks </category>
          
          <category> Frameworks </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My Beatbox Journey: From Solitude to the Stage</title>
      <link href="/my-beatbox-journey-from-solitude-to-the-stage/"/>
      <url>/my-beatbox-journey-from-solitude-to-the-stage/</url>
      
        <content type="html"><![CDATA[<img data-src="/my-beatbox-journey-from-solitude-to-the-stage/enkr-stage-mbs-w-varen.jpg" class="large"><p>Hello, I am <strong>Jing Hui PANG</strong>, also known on stage as<strong>ENKR (EnKr)</strong>. By day, I am a Full-Stack SoftwareEngineer, and by night, a passionate beatbox artist. My journey is aunique blend of technology and music, where each beat and code linecreates a harmonious rhythm. This blog post delves into my personalbeatbox journey, illustrating how a childhood hobby evolved into acornerstone of my identity and helped me transform challenges intostepping stones for growth.</p><hr /><h2 id="chapter-1-how-it-all-began">Chapter 1: How It All Began</h2><h3 id="early-beginnings">Early Beginnings</h3><p>My beatbox journey began officially when I turned 18 in 2016, but theseeds were planted much earlier. As a child, every day was a newadventure, my playroom echoing with my own sound effects. From theroaring engines of airplanes to the rhythmic beats of drums and rapidfire of toy guns, each sound was a joyous escape into a world where Iwas the creator of my own soundtrack. These sounds were my firstunknowing steps into the world of beatboxing.</p><p>Growing up was a battle against invisible barriers. Struggling dailywith <strong>dyslexia</strong> and <strong>ADHD</strong>, the simplesttasks became herculean efforts, leaving me often feeling out of stepwith the bustling world around me.</p><p>However, my mum made immense sacrifices, quitting her job to help meovercome these obstacles. Her dedication allowed me to learn like otherkids, and I am forever grateful for her sacrifice. Despite her support,my school years were challenging. Being extremely introverted and unableto focus in class due to my ADHD, I often found myself isolated andacademically behind my peers.</p><h3 id="a-turnaround-with-beatboxing">A Turnaround with Beatboxing</h3><p>In the midst of those stormy days, beatboxing emerged not just as ahobby but as a vital lifeline, a <em>rhythmic anchor</em> that held mesteady amid the turbulence of my thoughts. Each session washed over melike a calming wave, resetting my chaotic thoughts and allowing me tofocus like never before. It became my way to calm the storms in my mind.I noticed a significant change—I was calmer and could absorb knowledgefrom books like never before. This unique form of expression became mytool for managing stress and transforming my bursts of unfocused energyinto moments of intense concentration.</p><h3 id="the-stage-calls">The Stage Calls</h3><p>In 2016, a pivotal moment arrived with the talent show at mysecondary school. Up until then, my beatboxing was a private affair,reserved for solo sessions in the bathroom or casual performances forclose friends.</p><p>The very thought of stepping onto the stage, with the eyes of over2,000 people fixed on me, was paralysing. Yet, as I took that first stepinto the spotlight, a thrilling rush of adrenaline overcame my fears,transforming anxiety into exhilaration.</p><p>Encouragement came from an unexpected source—my best friend, RyanLing. He saw something in me that I hadn't yet seen in myself. Ryan notonly brought me the event poster but practically nudged me into signingup. His faith in me, combined with the support from my family and otherfriends who echoed his sentiments, convinced me to step out of mycomfort zone.</p><p>I poured my heart and soul into preparing for the talent show. Thehours spent mastering my routines paid off spectacularly—I won! Thatvictory marked a profound transformation, not merely a triumph but ametamorphosis. In the applause of the crowd, I found not just acceptancebut a new self-assurance that echoed louder than any beat I couldproduce. Performing on stage redefined how I saw myself and how otherssaw me. I went from the kid who beatboxed in solitude to a schoolcelebrity.</p><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/sec-sch-first-vic.jpg" class="large" title="My first ever victory for beatboxing"><h3 id="a-new-chapter">A New Chapter</h3><p>The following year, I pushed my creative boundaries further byintegrating beatboxing with another passion of mine, the Diabolo(Chinese Yo-Yo). I crafted a performance with my crew to combinebeatboxing as background music with choreographed Diabolo routines. Thisinnovative fusion not only entertained but <em>also won me accolades forthe second consecutive year.</em> <img data-src="/my-beatbox-journey-from-solitude-to-the-stage/sec-sch-perf-onstage.jpg" class="large" title="A solo section of me in the performance"> <img data-src="/my-beatbox-journey-from-solitude-to-the-stage/sec-sch-post-win-2-w-team.jpg" class="large" title="My second trophy, but this time is for the team. 😭"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/sec-sch-win-2.jpg" class="large" title="A picture with the second trophy before leaving it at the Diabolo club house. 🥹"></p><p>Stepping onto that stage altered my life. I shed the skin of anintroverted kid, emerging as someone new. <strong>Beatboxing taught meto carry myself with confidence, engage with others eye-to-eye, and walkwith a newfound assurance</strong> like never before ...</p><h4 id="some-memorable-moments">Some memorable moments</h4><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/sec-sch-mc-1.jpg" class="large" title="Short performance in Diabolo camp event"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/sec-sch-mc-2.jpg" class="large" title="Emcee for the event"><hr /><h2 id="chapter-2-rising-on-a-new-stage">Chapter 2: Rising on a NewStage</h2><h3 id="the-move-to-singapore">The Move to Singapore</h3><p>In 2018, after graduating from secondary school, I embarked on a newchapter by moving to Singapore to pursue my Diploma in InformationTechnology. This shift was not just geographical—it was a pivotal momentin my beatbox journey. I chose Singapore for its vibrant culturaltapestry and renowned educational institutions, which I believed wouldprovide not only a top-tier IT education but also a rich environment formy artistic pursuits.</p><p>Before this move, I had attempted to organise beatboxing gatheringsback in Malaysia. Although I managed to connect with only one fellowbeatboxer, Ah Yao, who was from the same state, Johor Bahru, we quicklybecame not just practice partners but hangout buddies, often chillingand discussing life beyond beatboxing. Despite our efforts, the vastdistances between beatboxers often transformed these gatherings fromhopeful plans into logistical challenges, it was really tough to seeeach other in person.</p><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/sg-1.jpg" class="large" title="A view from the place of my aunt, not the place I was staying-it was place with full of memories though..."><h3 id="finding-new-ground">Finding New Ground</h3><p>Upon arriving in Singapore, my living situation—sharing a room withrelatives—posed a significant challenge. Unlike back in Malaysia, whereI could freely unleash my beats at any hour, here, privacy was a rarecommodity, and practicing my routines risked becoming an unwelcomedisturbance. Yet, this new obstacle did nothing to dampen my passion; itonly fueled my determination. I sought out public spaces where I couldcontinue to hone my craft undisturbed. Parks, construction sites, andeven the secluded toilets beside MRT stations became my sanctuaries.Night after night, I would lose myself in these improvised studios,driven by an unyielding desire to refine my skills and push myboundaries. Each session was a testament to my resolve, proving that nomatter the setting, my commitment to beatboxing could turn any corner ofthe city into a stage for growth and expression.</p><h3 id="my-idols-and-inspiration">My Idols and Inspiration</h3><p>During this time, I looked up to beatbox giants who shaped myartistic vision: <span class="exturl" data-url="aHR0cHM6Ly9iZWF0Ym94LmZhbmRvbS5jb20vd2lraS9BbGVt">Alem<i class="fa fa-external-link-alt"></i></span>from France, with his unmatched technical prowess; <ahref="https://beatbox.fandom.com/wiki/Alexinho">Alexinho</a>, also fromFrance, known for his dynamic freestyling and counterbeats; <ahref="https://beatbox.fandom.com/wiki/NaPoM">NaPoM</a> from the USA, whomastered the deep subbass and liprolls; and Singapore's own <ahref="https://beatbox.fandom.com/wiki/Piratheeban">Piratheeban</a> andYK—masters in battle beatboxing and musicality, respectively. Theirmastery and creativity fueled my ambition and refined my understandingof what it meant to be a beatbox artist.</p><h3 id="first-taste-of-battle">First Taste of Battle</h3><p>After two years of refining my skills and performing solo, adeep-seated desire to compete took hold. Driven by curiosity one idleafternoon, I discovered a local competition organised by the SingaBeatbox Community. I registered immediately, eager for the chance totest my abilities against some of the best.</p><p>When I arrived at the competition hall at Clementi Community Centre,a sea of unfamiliar faces greeted me. Yet, despite the initialunfamiliarity, a profound connection was forgedinstantaneously—<strong>our shared language of beatboxing transcendedany need for words</strong>; it was utterly surreal. Although armed withmeticulously prepared routines, the sight of my idols Piratheeban and YKserving as judges was almost overwhelming. Seeing them in person, ratherthan through a screen, sent a surge of nerves through me that was bothterrifying and exhilarating.</p><p>Their inspirational showcases, pulsing with vibrant life, transformedmy nervous energy into fiery determination.</p><h4 id="piratheebans-showcase">Piratheeban's Showcase</h4><p>Witnessing Piratheeban perform live was a revelation. The clarity andvolume of his performance on the microphone were astounding, starklydifferent from what I had heard during his battles at the <ahref="https://youtu.be/vAsKOsJQMwU">Asia Beatbox Championship 2016</a>.Before, I had regarded him merely as a skilled beatboxer with specialsounds, but that day completely altered my perception. He wasn't justskilled; he was loud and clear, he was a maestro reshaping the art formright before my eyes.<iframe src="https://www.youtube.com/embed/VSv-VSmmQr4"></iframe></p><h4 id="yks-showcase">YK's Showcase</h4><p>And YK, his performance was akin to attending a full-blown concert.He skillfully wove his voice into his beatboxing, creating a seamlessfusion that transcended traditional beatboxing—it was pure music, abeautiful symphony of human sounds. His performance underscored apowerful realisation: <strong>Beatboxing isn't just an art form; it's aprofound musical expression, beatbox is music</strong>.<iframe src="https://www.youtube.com/embed/jhVxuEK6bbg"></iframe></p><p><span class="exturl" data-url="aHR0cHM6Ly95b3V0dS5iZS94VExpZDNaVFNsRQ==">The best version of Memories&amp; Illusions by YK produced using a loopstation<i class="fa fa-external-link-alt"></i></span></p><p>At that moment, a sudden clarity washed over me. I realised I was notthere merely to compete; I was there to make a mark, to impress, and tostand out. I was determined to resonate with the beats that had fueledmy countless practice sessions, to show that I too could contribute tothe ever-evolving tapestry of beatboxing music.</p><h4 id="moments">Moments</h4><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/pira-teaching.jpg" class="large" title="Pira was teaching mic technique, he was so nice."><h3 id="victory-and-beyond">Victory and Beyond</h3><p><strong>And stand out I did. I clinched victory in the entirecompetition, including the tag team category</strong>, spontaneouslyformed with my initial opponent. My partner, Luke Chong, proved to be anextraordinary beatboxer. Our synergy was immediate and electric, and tothis day, we continue to perform together as part of a crew calledObelisk. Luke has since ascended to become the CEO of <ahref="https://555beatboxsingapore.com/">555 Beatbox Initiatives</a>.</p><p>Claiming my first titles in both the solo and tag team categories atthe Clementi Community Centre in 2018 was an unforgettable experience.The bonds formed that day have evolved into a familial crew, an extendedbeatbox family that still supports and grows with me. Each moment fromthat day is etched in my memory—a vital beat in the rhythm of mylife.</p><p>This battle not only marked my entry into an incredible beatboxfamily but also catalysed a profound learning journey unlike any other.During the competition and in the days that followed, I actively soughtadvice and tips from everyone, inquiring about techniques that hadeluded me for years. The community was eager to share, allowing me tograsp nuances and sounds on the spot—a stark contrast to the solitaryhours spent deciphering techniques from YouTube videos back home. Thisvibrant, supportive community has grown stronger over time, and ourconnections extend far beyond mere beatboxing. We are more than friendswho share a passion; we are a family united by rhythm and mutualrespect, continually inspiring each other to new heights, We are rising555.</p><h4 id="some-moments-from-ccc-2018">Some moments from CCC 2018</h4><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/pic-w-pira.jpg" class="large" title="Picture with Pira!"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/pic-w-yk.jpg" class="large" title="Picture with YK!"><hr /><h2 id="chapter-3-in-the-arena">Chapter 3: In the Arena</h2><h3 id="what-a-year">2019 - What a Year</h3><p>In 2019, I achieved three prestigious titles, each marking asignificant milestone in my beatbox career: - <strong>Champion ofRadiance Beatbox Jam 2019, Singapore.</strong> - <strong>Champion of ACappella Beatbox Championship 2019, Singapore.</strong> -<strong>Champion of Cypher Beatbox Battle 2019, Singapore.</strong></p><p>This period was both brief and seemingly endless, filled withmemorable moments that I treasure to this day. I vividly recall thetechnical discussions and strategy exchanges with my crew before eachbattle and the invaluable reflections afterward. That year, I also setmy sights on competing in the <ahref="https://beatbox.fandom.com/wiki/Werewolf_Beatbox_Championship_2019">WerewolfBeatbox Championship, Indonesia</a>, which featured a panel of judgeswho are legends in the beatbox community, including Alem, <ahref="https://beatbox.fandom.com/wiki/D-low">Dlow</a>, Mad Twinz, and <ahref="https://beatbox.fandom.com/wiki/Pepouni">Pepouni</a>.</p><h3 id="radiance-beatbox-jam-2019-singapore">Radiance Beatbox Jam 2019,Singapore</h3><p>This event was among the first organised by the 555 BeatboxInitiative. We dedicated immense effort to ensure its success, and itwas a resounding hit within the community.</p><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/rbj1-19-poster.png" class="large" title="Poster of Radiance Beatbox Jam 1"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/rbj1-19-traffic.jpg" class="large" title="Picture with the crew while waiting for traffic light to get to the venue"><h3id="champion-of-a-cappella-beatbox-championship-2019-singapore">Championof A Cappella Beatbox Championship 2019, Singapore</h3><p>This championship is unforgettable, not only because of thecompetition but also for the unique collaboration with my team,<strong>Von Appeti</strong>, from Singapore Polytechnic. Competing as abass and vocal percussionist in the a cappella category alongsidebeatboxing was a thrilling challenge. This dual role allowed us to blendtraditional beatboxing with harmonic group performance, creating afusion that was both exhilarating and artistically enriching.</p><p>In our ensemble of five, two of us could beatbox, showcasing thediversity and talent within our group. This camaraderie offered afantastic opportunity to exchange skills and learn from one another. Astandout moment was our cover of "Titanium," where I switched roles frombass to vocal percussion mid-performance, igniting the audience withexcitement.</p><h4 id="spvt-von-appetis-sets-acachamps-2019">SPVT Von Appeti's Sets @Acachamps 2019</h4><iframe src="https://www.youtube.com/embed/5fIG04JE_Js"></iframe><p>The finals posed a formidable challenge against <strong>KK</strong>,one of the most musically gifted beatboxers I've encountered. His uniquestyle, characterised by powerful musicality and solid beats, heightenedthe competition's intensity. Truthfully, I hadn't anticipated winninggiven KK's exceptional talent; the battle felt like an uphill struggle.However, the victory not only affirmed my skills but also offered aprofound learning experience about resilience and mastering the art ofbeatboxing under pressure.</p><p>Additionally, the competition was a double triumph for me. AlongsideLuke Chong (HandFx), under our tag team name <strong>Vonderie</strong>,we clinched victory in the tag team category as well. Winning both thesolo and tag team competitions was an exhilarating affirmation of ourhard work and synergy.</p><h4 id="unforgettable-moments">Unforgettable moments</h4><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/abc-19-w-group.jpg" class="large no-shadow" title="Von Appeti group picture 🥺❤️"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/abc-19-w-spvt.jpg" class="large no-shadow" title="SPVT group picture! ❤️❤️❤️"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/2-trophies.jpg" class="large" title="Trophies of solo and tag team 🥹"><h3 id="champion-of-cypher-beatbox-battle-2019-singapore">Champion ofCypher Beatbox Battle 2019, Singapore</h3><p>This competition was undoubtedly a pinnacle of my beatboxing year.The judging panel boasted the formidable YK and <ahref="https://beatbox.fandom.com/wiki/Zhang_Ze">Zhang Ze</a>, a titan inthe international beatboxing scene. Zhang Ze's accolades are impressive:a three-time Champion of the China Beatbox Championship (2014, 2015,&amp; 2016) and one half of the renowned tag team A&amp;Z, which shookthe global beatboxing community at GBB 2017 with their innovativetechniques and compelling performances, <ahref="https://youtu.be/mrK-qDoMKLk">A&amp;Z (ZHANG ZE &amp; AH XIN) |Grand Beatbox TAG TEAM Battle 2017 | Elimination</a>. Knowing thecaliber of expertise Zhang Ze brought to the table, my nerves were tautwith a palpable mix of anticipation and exhilaration—this was more thanjust another competition, it was a test against a standard set by one ofthe best.</p><h4 id="zhang-zes-showcase">Zhang Ze's Showcase</h4><iframe src="https://www.youtube.com/embed/3ePPhH8foJI"></iframe><h4 id="yks-showcase-1">YK's Showcase</h4><iframe src="https://www.youtube.com/embed/bLpgtnDo8NI"></iframe><p>The finals presented not merely a battle, but an extraordinaryconfrontation with <strong>Varen</strong>, who was more than just arival; he was one of my dearest friends and a trusted crewmate fromObelisk. Our friendship, built on mutual respect and shared experiences,only amplified the intensity of the competition. Each performance wasnot just about showcasing our skills but also about honouring our sharedjourney in beatboxing. The atmosphere was electric, filled with theenergy of fierce competition intertwined with the warmth of brotherlyrespect. It was a display of high-caliber beatboxing where each drop andbeat resonated more profoundly because of our personal connections. Thisbattle pushed both of us to the limits of our creativity and technicalskills, turning the event into an unforgettable spectacle of artistryand friendship.</p><h4 id="unforgettable-moments-1">Unforgettable moments</h4><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/cbb-19-w-yk.jpg" class="large" title="Picture with my idol, YK! can u believe? 🥺"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/cbb-19-w-zhangze.jpg" class="large" title="Picture with Zhang Ze! 😭🔥"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/cbb-19-w-judges.jpg" class="large" title="Picture with the judges! Left to right: YK, EnKr (Me), Zhang Ze and Cai Fa"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/cbb-19-w-handfx.jpg" class="large" title="Picture with HandFx, my tag team partner ❤️"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/cbb-19-w-varen.jpg" class="large" title="Picture with Varen 🔥"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/cbb-19-w-top3.jpg" class="large" title="Top 3! LTR: Khai, HandFx, EnKr (Me) and Varen"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/cbb-19-w-top8.jpg" class="large" title="Picture with the participants!"><h3 id="werewolf-beatbox-championship-2019-indonesia">Werewolf BeatboxChampionship 2019, Indonesia</h3><p><ahref="https://beatbox.fandom.com/wiki/Werewolf_Beatbox_Championship_2019">TheWerewolf Beatbox Championship 2019 in Indonesia</a> was a landmark eventfor me, marking the final competition I would participate in beforestarting my full-time job as a Software Engineer. With my upcominghectic schedule, I was determined to end this chapter of my competitivebeatboxing journey on a high note.</p><p>Encouraging my 555 community to join, we submitted our wildcardstogether. For those unfamiliar, a beatbox wildcard is an entry ticketused to eliminate participants online. Instead of merely registering,beatboxers must publish a 1:30-minute video showcasing their skills,along with a short self-introduction. The organisation then selectsqualifiers based on these wildcards. Our commitment and enthusiasm wereevident—we even bought our flight tickets before knowing if we hadqualified. The community spirit was palpable, and we were eager toexperience an international stage together.</p><p>The <ahref="https://beatbox.fandom.com/wiki/Werewolf_Beatbox_Championship_2019#Judges">judgespanel</a>—Pepouni, Alem, D-low, Pash, and Jayton—comprised idols,teachers, and inspirations I had only seen on YouTube. Now, they werecoming to Asia, and I couldn't miss the opportunity to meet them.</p><p>I submitted my solo beatbox wildcard with a one-take video,reflecting my preparation and confidence. Here's my beatboxwildcard:</p><iframe width="560" height="315" src="https://www.youtube.com/embed/Xc16ZTsG3Cw?si=sX3jy3e_7v2qzkTb" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>Although I was well-prepared, the competition was fierce, and Ididn't qualify for the solo category. Surprisingly, this mixed feelingof sadness and happiness washed over me. I was disappointed but alsothrilled to immerse myself in the event, enjoy the judges' showcases,and relish being part of the crowd.</p><p>However, I did qualify for the tag team category with my partner,HandFx, under our team name <ahref="https://www.instagram.com/555vonderie/">Vonderie</a>. Here's ourwildcard:</p><iframe width="560" height="315" src="https://www.youtube.com/embed/5bFeZixXrr4?si=7RXVjwtAluoPZvic" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>The tag team experience was incredible, and we unexpectedly made itto the semi-finals. It was a surreal and joyous journey.</p><h4 id="battling-equinox">Battling Equinox</h4><iframe width="560" height="315" src="https://www.youtube.com/embed/TxMw3fgDSEg?si=ipj866w-_PVu7v06" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>As you can see at the ending, our surprise and excitement wereevident when we qualified to move on.</p><h4 id="battling-vocalizm">Battling Vocalizm</h4><iframe width="560" height="315" src="https://www.youtube.com/embed/dqoN_OQeATM?si=dCvDWrtp7Sfp8SZl" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>This event was a milestone in the Indonesia beatbox community,featuring not only intense battles but also inspiring showcases from thejudges. Alem, D-low, Pash, and Jayton brought their unique styles andexpertise, creating an electrifying atmosphere that motivated allparticipants to bring their best performances. Witnessing their liveshowcases was a highlight; each performance was a masterclass inbeatboxing, demonstrating advanced techniques and musicality that leftthe audience in awe.</p><p>The sense of community among beatboxers was profound. Despite beingcompetitors, we shared tips, experiences, and unwavering support,forging bonds that extended beyond the competition itself. This eventwas not just about winning; it was about personal growth, pushing theboundaries of my beatboxing abilities, and understanding the power ofcommunity support in achieving one's goals.</p><p>The Werewolf Beatbox Championship 2019 will always be a cherishedmemory, marking the culmination of my competitive beatboxing journey andthe beginning of a new chapter in my life as a Software Engineer. It wasa perfect blend of challenge, learning, and community, leaving a lastingimpact on my personal and artistic growth. Participating in thiscompetition was an incredible experience, testing my skills against someof the best beatboxers in the region. Competing on an internationalstage brought new challenges and learning opportunities, pushing me toinnovate and refine my approach. The camaraderie and exchange of ideaswith beatboxers from different backgrounds enriched my perspective andexpanded my repertoire.</p><h4 id="highlights-from-the-championship">Highlights from theChampionship</h4><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129090824.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129090831.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129102439.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129102442.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129102449.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129102450.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129111244.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129112444.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129112611.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129122705.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129132948.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129144604.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129144616.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129165623.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129210242.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129210249.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129210253.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129210415.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191129210418.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191130105543.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191130105544.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191130192407.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191130192944.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191130200158.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191130200201.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191130221122.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191130221124.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191130221132.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191130221134.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191130221147.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191130221149.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201120224.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201120225.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201122311.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201122314.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201122317.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201122318.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201125455.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201125457.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201125514.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201125626.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201131310.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201163029.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201163030.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201163448.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201163449.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201164246.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201164248.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201164250.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201164907.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201164911.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201165127.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201165129.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201165318.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201165322.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201165330_1.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201165349.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201170736.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201170740.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201170930.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201170955.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191201175926.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202133519.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202143300.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202143303.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202143324.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202143326.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202144420.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202144421.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202144424.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202144706.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202144707.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202144730.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202144732.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202144733.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202155424.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202155432.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202161255.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/IMG20191202233614.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/1575289871875.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/1575289877929.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/1575289887276.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/1575289894740.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/1575289900004.jpg" class="large"><img data-src="/my-beatbox-journey-from-solitude-to-the-stage/mmexport1576293836313.jpg" class="large"><h4 id="videos">Videos</h4><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129100907.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129101606.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129104508.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129133303.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129133948.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129144235.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129151846.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129155220.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129161027.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129162239.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129170108.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129170244.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129170311.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129170404.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129171348.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129200156.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129202416.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129211109.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129223948.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129225334.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129225520.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191129225908.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130085128.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130103624.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130104137.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130121332.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130124223.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130130848.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130131239.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130132807.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130133436.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130134829.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130135138.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130190527.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130202446.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130202503.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130202521.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130203806.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130205308.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130205901.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130211334.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130215056.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130222200.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191130222232.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191201123932.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191201124153.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191201124233.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191201141428.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191201160331.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191201160923.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191201161414.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191201163547.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191201172049.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191201181448.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191201181639.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191201210417.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191201210719.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191202133701.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191202184904.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191202185807.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191202202223.mp4" type="video/mp4"></video><video width="auto" height="auto" controls><source src="/my-beatbox-journey-from-solitude-to-the-stage/VID20191203034452.mp4" type="video/mp4"></video><hr /><h2 id="achievements">Achievements</h2><h3 id="solo-category">Solo Category</h3><ul><li>Champion of Clementi Community Centre 2018, Singapore</li><li>Champion of Radiance Beatbox Jam 2019, Singapore</li><li>Champion of A Cappella Beatbox Championship 2019, Singapore</li><li>Champion of Cypher Beatbox Battle 2019, Singapore</li><li>Top 16 at Armageddon International Beatbox Battle 2019,Malaysia</li><li>Top 8 at The Capital Beatbox Battle 2019, Malaysia</li><li>Vice Champion of A Cappella Beatbox Championship 2021,Singapore</li></ul><h3 id="tag-team-category">Tag Team Category</h3><ul><li>Champion of A Cappella Beatbox Battle 2019, Singapore</li><li>Top 4 at Werewolf Beatbox Championship 2019, Indonesia</li></ul><hr /><h2 id="now-the-beat-goes-on---reflections-and-aspirations">Now: TheBeat Goes On - Reflections and Aspirations</h2><p>Beatboxing was more than just a musical pursuit; it became atransformative force in my life, moulding me into the person I am today.Without it, I wouldn't recognise myself. <strong>It's not merely a partof my life; it has crafted a life—a unique rhythm all myown.</strong></p><p>Reflecting on my beatboxing journey, each competition, performance,and practice session has been a step in my transformative journey. Fromthe solitude of my childhood beatboxing sessions to the vibrant stagesof international competitions, beatboxing has been a constant source ofgrowth and empowerment.</p><p>Throughout this journey, I have been honoured to achieve significantmilestones. I became the Champion of Clementi Community Centre 2018 inSingapore, and in 2019, I triumphed in multiple events: Radiance BeatboxJam, A Cappella Beatbox Championship, and Cypher Beatbox Battle, all inSingapore. Additionally, I reached the Top 16 at the ArmageddonInternational Beatbox Battle in Malaysia and the Top 8 at The CapitalBeatbox Battle in Malaysia. In 2021, I earned the title of Vice Championat the A Cappella Beatbox Championship in Singapore. In the tag teamcategory, my partner and I, under the team name Vonderie, claimedvictory at the A Cappella Beatbox Battle 2019 in Singapore and reachedthe Top 4 at the Werewolf Beatbox Championship 2019 in Indonesia.</p><p>These achievements are not just titles; they represent theculmination of hard work, dedication, and the unwavering support of mycommunity. They are milestones that mark the peaks of my beatboxinglife, each one a testament to the power of passion and perseverance.However, my journey is far from over. As I continue to hone my craft, Iaspire to push the boundaries of beatboxing further. I aim tocollaborate with other artists, explore new genres, and bring beatboxingto new audiences. The rhythm of my beats is a reflection of my life'sjourney, and I am excited to see where it takes me next.</p><p><strong>Thank you to everyone who has supported me along theway</strong>—my family, friends, and fans. Your encouragement and beliefin me have been instrumental in my success. <em>Here's to the beats thatkeep us moving forward, one rhythm at a time.</em></p><hr /><p><strong><em>Esh.</em></strong></p><p><strong><em>I love beatbox.</em></strong></p><p><strong><em>We are rising 555.</em></strong></p>]]></content>
      
      
      <categories>
          
          <category> About Me </category>
          
          <category> Hobbies </category>
          
          <category> Beatboxing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> beatbox </tag>
            
            <tag> hobby </tag>
            
            <tag> stage-performance </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shoutout to Stellar Hexo Blogs</title>
      <link href="/shoutout-to-stellar-hexo-blogs/"/>
      <url>/shoutout-to-stellar-hexo-blogs/</url>
      
        <content type="html"><![CDATA[<p>In the vibrant world of blogging, choosing the right platform canmake all the difference. Today, I want to talk about Hexo, a fast,simple, and powerful framework that transforms plain text into staticwebsites and blogs. It's designed for those who love tweaking their sitebut also appreciate speed and efficiency. This post is a celebration ofthose who use Hexo to create some truly inspiring content.</p><span id="more"></span><h2 id="why-choose-hexo">Why Choose Hexo?</h2><p>So, why do people flock to Hexo? First off, it's incrediblyfast—static pages mean load times are minimal. It's also highlycustomisable, giving users complete control over their site's design andfunctionality. Plus, Hexo's Markdown-centric nature makes it a darlingespecially for developers and writers who prefer to focus on theircontent without fussing too much over the technical stuff.</p><h2 id="featured-hexo-blogs">Featured Hexo Blogs</h2><p>Here are some of my favourite picks from the Hexo community. Eachblog stands out for its unique content and the personal flair itscreator brings to the platform.</p><ul><li><span class="exturl" data-url="aHR0cHM6Ly93aW50ZXJ0dHIubWUv">Winterttr<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9xaW5kYXpodS5naXRodWIuaW8v">Qinda Zhu<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuanVuaGFvdy5jb20v">Junhao Wang<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9qdW43MTEuZ2l0aHViLmlvLw==">Jun711<i class="fa fa-external-link-alt"></i></span></li><li><ahref="https://codegitz.github.io/2017/12/04/hexo%E8%BF%9B%E9%98%B6%E9%85%8D%E7%BD%AE/">Codegitz</a></li><li><ahref="https://haojen.github.io/Claudia-theme-blog/archives/">Haojen</a></li><li><span class="exturl" data-url="aHR0cHM6Ly9sZWltYW8uZ2l0aHViLmlvLw==">Lei Mao<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9pby1vaS5tZS8=">reuixiy<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmVzb24ub3JnLw==">ESON<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9wcG9mZmljZS5naXRodWIuaW8vaGV4by10aGVtZS1pY2FydXMv">PPOffice(Theme: Icarus)<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly96aGFuZ3NodXFpYW8ub3JnLw==">米米的博客<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucGFkZGluZ2xlZnQuY29tL3BvcnRmb2xpby8=">Sing's Log<i class="fa fa-external-link-alt"></i></span> -tw's blogger</li></ul><p>I want to give a big shoutout to these some amazing folks and sitesthat sparked my journey and provided a wealth of inspiration!</p><h2 id="conclusion">Conclusion</h2><p>Whether you're a tech enthusiast, a travel guru, or a culinarywizard, Hexo offers a solid foundation for building and managing yourblog. I hope these featured blogs inspire you to explore what Hexo cando for your own digital storytelling. If you're using Hexo and want yourblog featured in a future post, comment it down below I'd love to seewhat you've created!</p><p>Happy blogging!</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Frameworks </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Understanding Programming Styles: Declarative vs Imperative</title>
      <link href="/understanding-programming-styles-declarative-vs-imperative/"/>
      <url>/understanding-programming-styles-declarative-vs-imperative/</url>
      
        <content type="html"><![CDATA[<p>Programming isn't just about writing code; it's about choosing theright approach to solve a problem effectively and efficiently. Today,we'll delve into two fundamental programming styles: Declarative andImperative. Each style has its philosophies, methodologies, and uses,which can greatly influence your project's design and maintenance.</p><span id="more"></span><h2 id="declarative-programming-style">Declarative ProgrammingStyle</h2><p>Declarative programming is all about specifying <strong>what</strong>you want to achieve, without having to explicitly describe<strong>how</strong> to accomplish it. This style is more about writingexpressions than writing step-by-step commands.</p><h3 id="characteristics">Characteristics:</h3><ul><li><strong>High-Level Abstraction:</strong> Details of operations areabstracted away.</li><li><strong>Readability:</strong> Easier to understand, especially fornon-programmers.</li><li><strong>Reusability:</strong> Promotes the use of more generalsolutions.</li></ul><h3 id="example-in-sql">Example in SQL:</h3><p>Consider this SQL query which is a perfect example of declarativeprogramming: <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, age <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> age <span class="operator">&gt;=</span> <span class="number">30</span>;</span><br></pre></td></tr></table></figure> Here, the command describes what result isneeded – employees over 30 – without specifying how to traverse thedatabase tables.</p><h2 id="imperative-programming-style">Imperative Programming Style</h2><p>In contrast, imperative programming focuses on the<strong>how</strong>; it requires the programmer to define explicitsteps to achieve a desired outcome.</p><h3 id="characteristics-1">Characteristics:</h3><ul><li><strong>Control Flow:</strong> Direct control with commands likeloops and conditionals.</li><li><strong>State Changes:</strong> Manipulation of program state viaassignments.</li><li><strong>Performance:</strong> Allows fine-tuning, which can lead tomore optimized code.</li></ul><h3 id="example-in-python">Example in Python:</h3><p>Here's how you would write a program to calculate the factorial of anumber using Python, an imperative language: <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">factorial</span>(<span class="params">n</span>):</span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">        result *= i</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(factorial(<span class="number">5</span>))  <span class="comment"># Output: 120</span></span><br></pre></td></tr></table></figure> This snippetshows a clear sequence of operations to compute the factorial.</p><h2 id="comparative-analysis">Comparative Analysis</h2><p>To encapsulate the differences, here's a side-by-side comparison ofboth programming styles:</p><table><colgroup><col style="width: 23%" /><col style="width: 38%" /><col style="width: 37%" /></colgroup><thead><tr class="header"><th>Aspect</th><th>Declarative</th><th>Imperative</th></tr></thead><tbody><tr class="odd"><td>What vs How</td><td>Focuses on "what"</td><td>Focuses on "how"</td></tr><tr class="even"><td>Control Flow</td><td>Abstracted</td><td>Explicit</td></tr><tr class="odd"><td>Complexity</td><td>Low to moderate</td><td>Can be high</td></tr><tr class="even"><td>Flexibility</td><td>Lower</td><td>Higher</td></tr><tr class="odd"><td>Examples</td><td>SQL, HTML, Haskell</td><td>C, Java, Python</td></tr></tbody></table><h2 id="conclusion-which-to-use-when">Conclusion: Which to UseWhen?</h2><p>Choosing between declarative and imperative programming depends onthe specific needs of your project: - Use <strong>declarative</strong>when you need simplicity and readability, and when the operations arenot performance-critical. - Opt for <strong>imperative</strong> when yourequire control and when performance optimization is crucial.</p><p>Understanding these styles not only helps in selecting the right toolfor the job but also in better understanding the potential andlimitations of different programming languages and paradigms.</p><hr /><p>Stay tuned for more insights into programming paradigms andtechniques. Whether you're a novice coder or a seasoned developer,mastering these styles can vastly improve your coding efficiency andproblem-solving skills.</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Programming Styles </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> software-development </tag>
            
            <tag> coding-styles </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My LeetCode Journey: From Novice to ByteDance Software Engineer</title>
      <link href="/my-leetcode-journey-from-novice-to-bytedance-software-engineer/"/>
      <url>/my-leetcode-journey-from-novice-to-bytedance-software-engineer/</url>
      
        <content type="html"><![CDATA[<h2 id="introduction-to-my-leetcode-strategy">Introduction to MyLeetCode Strategy</h2><p>After six months of consistent grinding on <ahref="https://leetcode.com/">LeetCode</a> and navigating through abouttwenty-ish coding interviews, I have finally landed a job at<strong>ByteDance</strong>. Far from a coding wizard, I am an averagecoder who sticks with medium-level problems until I crack them. Overtime, I have cobbled together a few strategies that have surprisinglyhelped me punch above my weight. Maybe they could work for you too!Stepping into the coding challenges felt like entering a big arena.LeetCode became my training ground, and like many, I often stumbled onthe tough problems. But the key? Stick it out and find your rhythm.Here's how I kept my head in the game and punched through those codingchallenges.</p><hr /><h2 id="personalised-practice-routine">Personalised PracticeRoutine</h2><h3 id="daily-goals">Daily Goals</h3><p>I made it my mantra to crack <em>at least one or two problemsdaily</em>. On turbo-charged days, when I felt like it, I would amp itup to three, juggling between easy, medium, and hard to stay sharp andresilient. Picture this: <strong>it's like keeping your brain in a gymsession, where every problem solved is a muscle flexed.</strong></p><img data-src="/my-leetcode-journey-from-novice-to-bytedance-software-engineer/leetcode-stats.png" class="" title="LeetCode stats - i was job hunting from late Apr to mid Oct, and yes streak ended just like that 😩"><h3 id="timed-sessions">Timed Sessions</h3><p><strong>What's a fight without a timer?</strong> I practised with theclock ticking, mirroring those nail-biting interview settings. (alsoLeetCode has a timer feature now!) Starting with 10 minutes for easypeasy ones, 30 for the tricky guys, and an hour for the brain-busters.As time went on, I got faster, nailing easies in 5 and hards in 30. Youget this weird sixth sense for timing, and bro, does it make you feellike a coding ninja!</p><p>Also, remember that it's totally okay to tap out on a hard questionand learn from the best answers online. The real trick is to <em>revisita similar question later on, ensuring you can solve it the next timearound</em>. Just promise yourself that if you peek at the answer once,you must solve it on your own the next time you encounter it. Once younail the concept, lock it away in your mental solution bank for futurechallenges!</p><img data-src="/my-leetcode-journey-from-novice-to-bytedance-software-engineer/leetcode-counter.png" class="no-shadow" title="The counter on LeetCode"><h3 id="review-and-reflect">Review and Reflect</h3><p>After each practice session, I would hold a little debrief, askingmyself: What went well? What tripped me up? It felt like reviewing gametape—<em>always revealing</em>. Post-interview, I would revisit thequestions, diving into similar ones, making my notes, to make sure thelessons really stuck.</p><p>Personally, I discovered the best way to avoid simply memorisingsolutions like a robot is to <strong>keep things mixedup</strong>—switching topics weekly or even tackling random dailyquestions. This approach really keeps your brain on its toes! Stickingto one topic like <strong>Graphs</strong> for a week, then <strong>HashMaps</strong> the next week, may seem organised, but from experience, ittends to lead more to memorisation than actual understanding andthinking. Mixing it up has shown me that true learning comes fromgrappling with problems dynamically, understanding not just the "how"but the "why" behind the list of solutions you have in your solutionbank!</p><h3 id="weak-areas-first">Weak Areas First</h3><p>I took the plunge into the areas that scared me the most, tackling myweaknesses head-on. It was uncomfortable, sure, but there's no growthfound lounging in comfort zones, right?</p><p>I must give a massive shout-out to <ahref="https://neetcode.io/">NeetCode's</a> roadmap—it <strong>was agame-changer</strong> during my job search. Following their structuredapproach really helped; it lays out what you need to grasp fundamentallybefore moving on to more challenging topics like <strong>2D DynamicProgramming</strong> and <strong>Advanced Graphs</strong>. Understandingthe essentials first, then progressively tackling more complex areas, istruly the way to go. <strong>Remember, there's no shortcut to realmastery.</strong></p><img data-src="/my-leetcode-journey-from-novice-to-bytedance-software-engineer/neetcode-roadmap.png" class="no-shadow" title="NeetCode" alt="s Roadmap"><h3 id="mock-coding-interview-sessions">Mock Coding InterviewSessions</h3><p>Huge shoutout to my friends, <ahref="https://www.linkedin.com/in/desmondyst/">Desmond Yong</a> and <ahref="https://www.linkedin.com/in/darren-leo-463010209/">Darren Leo</a>,for those invaluable and unforgettable mock sessions we managed to fitin before work, during LeetCode marathons at McDonald's, on off days,and after hours. We all worked at the same company and the same office,making these gatherings not just convenient but incredibly rewarding.These sessions were absolutely priceless! Sure, there are plenty ofplatforms for practice—and yes, we used them—but nothing compares to thereal-time feedback, playful roasting, and engaging discussions with palsover a whiteboard. It was all in good fun and brought massive gains, aswe learnt from each other's unique approaches and questions.</p><p>For our practice sessions, we often turned to <ahref="https://soc-tips.com/">Soc-tips.com</a>, taking turns leadingserious mock interviews and utilising the platform's feedback featuresto capture key insights and improvements.</p><p>I have personally found that explaining and sharing what I learn isthe best way to solidify my understanding. Here's why:</p><ul><li><strong>Seneca</strong>, the great philosopher, once said:<strong>"While we teach, we learn."</strong> This idea is at the heartof the <strong>Protégé Effect</strong>, which suggests that teachingwhat we've learnt to others enhances our own understanding.</li><li>Research shows that explaining concepts to others, especially thoseunfamiliar with the topic, can significantly deepen your owncomprehension.</li></ul><p>I often apply this method in my personal life, simplifying complexalgorithms for my family. One of my favorite explanations was about<strong>Manacher's algorithm</strong> for finding the longestpalindromic substring in a string. I shared how cleverly the algorithmadds a special character to transform the problem into one that can be"calculated" and "decided" through code. This not only reinforces mygrasp of the concepts but also shows how these algorithms can be used inreal life.</p><h3 id="discipline-over-distraction">Discipline Over Distraction</h3><p>Here's the kicker—I committed to a digital detox. Social media,gaming, endless scrolling—<strong>all cut out</strong>. My eyes were seton the prize: landing a dream job at a big tech company. At that time, Iwas all in with the <strong>Law of Attraction</strong>, deeply believingthat I would make it—and I did. Every spare moment was dedicated toLeetCode; on the bus home, on the way to the gym, on the metro (MRT)—youname it, I was coding, even jotting down diagrams on my iPad (which Ibought specifically for interview prep and now doubles as my secondaryscreen). It was tough to turn down casual hangouts and tempting joboffers, but maintaining focus was essential.</p><hr /><h2 id="really-useful-resources">Really Useful Resources!</h2><p>Here's a roundup of materials and resources that have beeninstrumental in my coding journey. Whether you're gearing up forTechnical Coding Interviews or just looking to hone your coding skills,these links might just be what you need:</p><h3 id="the-important-ones">The Important Ones</h3><ul><li><ahref="https://www.notion.so/enkr/LeetCode-challenge-af5b4b790deb4dd5b5f7e990c18f65c5">MyNotion LeetCode Challenge</a> - I used that to track my LeetCodeprogress and keep my solutions.</li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuY3JhY2tpbmd0aGVjb2RpbmdpbnRlcnZpZXcuY29tLw==">Cracking theCoding Interview<i class="fa fa-external-link-alt"></i></span> - The quintessential book by Gayle LaakmannMcDowell; it's a bible for coding interviews.</li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cubmVldGNvZGUuaW8v">NeetCode<i class="fa fa-external-link-alt"></i></span> - Fantastic forbrushing up on your coding interview skills with neat, categorizedproblems.</li><li><span class="exturl" data-url="aHR0cHM6Ly95b3V0dS5iZS8yVjd5UHJ4SjhDaz9zaT1CdDBoSWh0Z3NScDRTT2RK">YouTube -LeetCode's Advice (Best Explanation, imo!)<i class="fa fa-external-link-alt"></i></span></li></ul><h3 id="youtubers">YouTubers</h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cueW91dHViZS5jb20vQEJhY2tUb0JhY2tTV0U=">Back To BackSWE<i class="fa fa-external-link-alt"></i></span> - One of my favorite tech interview prep gurus on YouTube. Hisexplanations are super clear and very helpful.</li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cueW91dHViZS5jb20vQGhhY2tiZWFydGVycnk=">HackBear 泰瑞<i class="fa fa-external-link-alt"></i></span> -Anotehr My favorite tech guy on YouTube (btw, his videos are inChinese). His explanations and sharings were invaluable andinsightful.</li></ul><h3 id="github">GitHub</h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dvb2ppYWhhby9pbnRlcnZpZXdz">Interview Prep<i class="fa fa-external-link-alt"></i></span>- A comprehensive repository of interview preparation materials andresources.</li><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0czM2t6RDNuL0NhdGFsb2d1ZQ==">Catalogue<i class="fa fa-external-link-alt"></i></span> - Youcan find some system design-related books here for free!</li><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3lhbmdzaHVuL3RlY2gtaW50ZXJ2aWV3LWhhbmRib29r">TechInterview Handbook<i class="fa fa-external-link-alt"></i></span> - Curated coding interview preparation materialsfor busy software engineers.</li><li><ahref="https://github.com/kxrt/Singapore-Summer2024-TechInternships">Summer2024 Tech Internships - Singapore</a></li><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BhcmFkaXRlL3NnLXRlY2gtbGlzdA==">SG TechList<i class="fa fa-external-link-alt"></i></span></li><li><ahref="https://github.com/jwasham/coding-interview-university">CodingInterview University</a></li><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2xhYnVsYWRvbmcvZnVja2luZy1hbGdvcml0aG0=">labuladong的算法小抄<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvU1JFV29ya3M=">SREWorks<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL214c3NsL3NyZS1pbnRlcnZpZXctcHJlcC1ndWlkZQ==">SiteReliability Engineer (SRE) Interview Preparation Guide<i class="fa fa-external-link-alt"></i></span></li><li><ahref="https://github.com/NirmalSilwal/Data-Structure-and-Algorithm-Java-interview-kit">DataStructure and Algorithm Training</a></li></ul><h3 id="other">Other</h3><ul><li><span class="exturl" data-url="aHR0cHM6Ly9lbXJlLm1lLw==">Blog - Emre's Programming Guides<i class="fa fa-external-link-alt"></i></span> -Useful articles and guides on various programming topics and interviewpreparations.</li><li><ahref="https://www.educative.io/courses/grokking-modern-system-design-interview-for-engineers-managers">GrokkingModern System Design Interview for Engineers &amp; Managers</a></li></ul><blockquote><p>Feel free to dive into any of these resources to boost your codingprowess and interview readiness! And if you have some favorites of yourown, I would love to hear about them—please share!</p></blockquote><hr /><h2 id="conclusion-encouragement-and-final-thoughts">Conclusion:Encouragement and Final Thoughts</h2><p>Six months of intense coding, and the results speak for themselves.<strong>Remember, perseverance is key</strong>. Just your average coderhere, but one who stuck to the game plan and saw it through against theodds.</p><p>As a Software Engineer, this journey wasn't just about masteringcoding—it encompassed honing your soft skills as well, from that initialHR calls and behavioral interviews to project management discussions andonline assessments. It was all about setting a definitive and clear goaland doing whatever it took to achieve it. I hope this story inspires youto develop your own game plan, one that is both enjoyable anddisciplined. <strong>And always remember, do not despair in the face ofrejections; you're not truly losing if you're actually trying your best.The best is yet to come.</strong></p><p>Looking forward to sharing more and tackling this coding journey withyou. Let's keep those codes compiling and our spirits high!</p><p><strong>Keep grinding, trust the process, it will payoff.</strong></p>]]></content>
      
      
      <categories>
          
          <category> Career Development </category>
          
          <category> Interviews </category>
          
          <category> Technical Coding Interviews </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> coding-interview </tag>
            
            <tag> interview-preparation </tag>
            
            <tag> bytedance </tag>
            
            <tag> software-engineering </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learning from Lim Hock Chee: Life and Business Insights from the CEO of Sheng Siong</title>
      <link href="/learning-from-lim-hock-chee-life-and-business-insights-from-the-ceo-of-sheng-siong/"/>
      <url>/learning-from-lim-hock-chee-life-and-business-insights-from-the-ceo-of-sheng-siong/</url>
      
        <content type="html"><![CDATA[<p>On a serene evening on 19 April 2024, I found myself amongst a keenaudience in a local auditorium, all of us buzzing with anticipation fora talk by Lim Hock Chee, the visionary CEO of Sheng Siong. Thanks to akind invite from my friend, personal wealth manager, <ahref="https://sg.linkedin.com/in/troy-lai-990108198">Troy Lai</a>, thiswasn't just another evening. It was a doorway to invaluable insightsfrom one of Singapore's top business leaders. Speaking eloquently inMandarin, Mr. Lim shared his wisdom on personal ethics and businessacumen with a candour that was both enlightening and refreshing.</p><img data-src="/learning-from-lim-hock-chee-life-and-business-insights-from-the-ceo-of-sheng-siong/photo_2024-04-20_17-52-05.jpg" class="" title="Lim Hock Chee speaking at the event"><span id="more"></span><h2 id="key-takeaways-from-lim-hock-chees-talk">Key Takeaways from LimHock Chee's Talk</h2><h3 id="the-essence-of-integrity-and-kindness-善良和正直的重要性">TheEssence of Integrity and Kindness (善良和正直的重要性)</h3><p>Mr. Lim stressed, <strong>"Being kind and doing the right thing arefundamental to gaining respect and success."</strong> This resonateddeeply, reaffirming my belief that integrity is crucial in allrelationships, both personal and professional.</p><p><strong>Personal Reflection:</strong> This talk has strengthened myresolve to live by these values more diligently, ensuring they reflectin every decision and interaction.</p><h3 id="the-power-of-self-reflection-先了解自己再了解他人">The Power ofSelf-Reflection (先了解自己，再了解他人)</h3><p>One of the standout themes was the importance of self-awareness.Understanding ourselves paves the way for genuine self-improvement andempathetic leadership.</p><p><strong>Personal Plan:</strong> Inspired, I aim to set aside timewhenever I have time at night or each week for self-reflection, tobetter understand my motivations and fine-tune my responses tochallenges.</p><h3id="cultivating-a-positive-work-culture-培养积极的工作文化">Cultivatinga Positive Work Culture (培养积极的工作文化)</h3><p>Passionately, Mr. Lim discussed the critical role of fostering apositive work environment where leaders embody the principles theyadvocate. This is essential for inspiring innovation and collectiveadvancement.</p><p><strong>Workplace Application:</strong> I'm inspired to further thispositive culture at my workplace, encouraging creativity and supportingmy team to think innovatively.</p><h3id="entrepreneurship-and-team-building-创业与团队建设">Entrepreneurshipand Team Building (创业与团队建设)</h3><p>The story of starting small and dreaming big, as shared by Lim HockChee, was particularly compelling. He highlighted the importance ofbuilding a team that aligns with your vision.</p><p><strong>Inspired Action:</strong> Moved by his narrative, I will soonto plan and kick-start a side project I've been dreaming about. It'smore than a business venture; it's about creating a community united bya shared vision and passion and I always want to build somethingremarkable and that brings value to the world.</p><h2 id="conclusion">Conclusion</h2><p>Lim Hock Chee's insights extend beyond mere business tactics; theyare profound life lessons. His vitality and attention to detail instorytelling offered a masterclass in passion and perseverance. Hisjourney exemplifies the dedication needed to achieve excellence—a beaconfor my path forward.</p><p>These lessons transcend boundaries, offering universal insights. As Iintegrate these into my daily life, I'm inspired by the transformativepower of integrity and proactive leadership.</p><p><strong>Scenes from an unforgettable evening:</strong> <img data-src="/learning-from-lim-hock-chee-life-and-business-insights-from-the-ceo-of-sheng-siong/photo_2024-04-20_17-52-17.jpg" class="" title="Engaging with ideas"><img data-src="/learning-from-lim-hock-chee-life-and-business-insights-from-the-ceo-of-sheng-siong/photo_2024-04-20_17-52-22.jpg" class="" title="Capturing moments"> <img data-src="/learning-from-lim-hock-chee-life-and-business-insights-from-the-ceo-of-sheng-siong/photo_2024-04-20_17-52-19.jpg" class="" title="Picture with him!"></p><hr />]]></content>
      
      
      <categories>
          
          <category> Personal Development </category>
          
          <category> Career Development </category>
          
          <category> Life Lessons </category>
          
          <category> Project Management </category>
          
          <category> Leadership Skills </category>
          
      </categories>
      
      
        <tags>
            
            <tag> workshop </tag>
            
            <tag> entrepreneurship </tag>
            
            <tag> corporate-culture </tag>
            
            <tag> inspirational </tag>
            
            <tag> motivation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Decoding Dunbar&#39;s Number: The Limits of Social Connections</title>
      <link href="/decoding-dunbar-s-number-the-limits-of-social-connections/"/>
      <url>/decoding-dunbar-s-number-the-limits-of-social-connections/</url>
      
        <content type="html"><![CDATA[<!--### Tags:- "Dunbar's Number"- "Social Psychology"- "Network Theory"- "Organisational Behaviour"- "Team Dynamics"- "Social Media Impact"- "Communication"### Categories:- "Psychology"- "Social Science"- "Professional Development"- "Team Management"--><p>In a world brimming with social interactions, both offline andonline, the concept of Dunbar's Number offers a compelling glimpse intothe cognitive limits of human relationships. First posited by Britishanthropologist Robin Dunbar, this theory suggests that there is a limitto the number of people with whom one can maintain stable socialrelationships. Here's an in-depth exploration of this fascinatingconcept and its implications for our personal and professionallives.</p><span id="more"></span><h2 id="what-is-dunbars-number">What is Dunbar's Number?</h2><p>Dunbar's Number is the suggested maximum number of stablerelationships that one individual can maintain, which Robin Dunbarproposed to be around 150. These are relationships in which anindividual knows how each person relates to every other person withinthis circle.</p><h2 id="scientific-underpinnings">Scientific Underpinnings</h2><p><strong>Neocortex Size:</strong> The hypothesis behind Dunbar'sNumber is linked to the size of the neocortex in the human brain. Dunbarfound that the neocortex ratio in primates predicts their social groupsize: <strong>the larger the neocortex, the larger the group</strong>.Humans, with relatively large neocortices, are thus theorised to handlemore complex social networks.</p><p><strong>Historical Context:</strong> Evidence supporting Dunbar'stheory can be seen in historical and sociological structures. Manytraditional societies, military units, and even business organisationshave been structured around this number, optimising coherence andmanageability.</p><h2 id="modern-day-relevance">Modern-Day Relevance</h2><p>Despite the exponential growth of network-building platforms likeFacebook, the average number of meaningful relationships doesn't strayfar from 150. This constraint highlights a fundamental aspect of humansocial interaction: while we can have an extensive network of contacts,the capacity for maintaining emotionally close relationships islimited.</p><h2 id="structure-of-social-ties">Structure of Social Ties</h2><p>Dunbar detailed a layered structure of social ties, which can be seenas concentric circles of intimacy:</p><ol type="1"><li>Close Support Group <strong>(5 Close Friends)</strong>: These areyour confidants.</li><li>Sympathy Group <strong>(15 Good Friends)</strong>: Friends you trustand often confide in.</li><li>Affinity Group <strong>(50 Friends)</strong>: Friends with whom yousocialise regularly.</li><li>Active Network <strong>(150 Meaningful Contacts)</strong>:Acquaintances you interact with at least once a year.</li><li>Extended Network <strong>(500 Acquaintances)</strong>: People yourecognise.</li><li>Tribal Network <strong>(1500 People You Can Recognise)</strong>: Theoutermost layer, where recognition is superficial.</li></ol><h2 id="implications-for-professional-environments">Implications forProfessional Environments</h2><p>In professional settings, understanding Dunbar's Number can help indesigning more effective organisational structures and team sizes. Forinstance, smaller, more manageable groups often exhibit bettercommunication and cohesion, which are crucial for successful projectmanagement and overall corporate health.</p><h2 id="further-exploration">Further Exploration</h2><p>Dunbar's Number opens up numerous avenues for exploration: -<strong>Network Theory</strong>: This involves studying how individualsconnect within larger networks. - <strong>OrganisationalSociology</strong>: Examining how the structure of organisations affectsproductivity and morale. - <strong>Impact of DigitalCommunication</strong>: Assessing how modern technologies aretransforming traditional social structures.</p><h2 id="conclusion">Conclusion</h2><p>Dunbar's Number isn't merely an academic curiosity; it's a crucialmetric that can help us design better social systems, both personallyand professionally. By understanding the limits of our socialcapabilities, we can create environments that foster more meaningful andeffective interactions.</p>]]></content>
      
      
      <categories>
          
          <category> _Other </category>
          
          <category> Social Science Insights </category>
          
      </categories>
      
      
        <tags>
            
            <tag> interesting </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Demystifying Database Design: A Dive into 3NF and BCNF</title>
      <link href="/demystifying-database-design-a-dive-into-3nf-and-bcnf/"/>
      <url>/demystifying-database-design-a-dive-into-3nf-and-bcnf/</url>
      
        <content type="html"><![CDATA[<p>Welcome to a journey through the realm of database normalisation—akey aspect of backend development that ensures your database is not onlyfunctional but also efficient and easy to manage. Today, let's breakdown two crucial normalisation forms—Third Normal Form (3NF) andBoyce-Codd Normal Form (BCNF)—using everyday examples to make theseconcepts clear and memorable.</p><span id="more"></span><h1 id="why-normalise">Why Normalise?</h1><p>Imagine you're organising a big party. You have a list of guestswhere each guest's contact details are repeated for every event they'reattending. It would be cumbersome and error-prone, right? Normalisationin databases works similarly; it helps organise the data to avoidrepetition and confusion, making the database easier to manage—likehaving a single, organised guest list.</p><h1 id="third-normal-form-3nf-clearing-up-confusion">Third Normal Form(3NF): Clearing Up Confusion</h1><h2 id="what-is-3nf">What is 3NF?</h2><p>A database is in Third Normal Form if it's free from the first twoforms' woes (repetitions and dependencies) and goes a step further: iteliminates indirect dependencies. That's like ensuring not only thateach piece of guest information is recorded once but also that alldetails directly relate to the guest without unnecessary detours.</p><h2 id="real-life-example">Real-life example:</h2><p>Consider a school database:</p><table><thead><tr class="header"><th>StudentID</th><th>Name</th><th>Subject</th><th>ProfessorID</th><th>ProfessorName</th></tr></thead><tbody><tr class="odd"><td>1</td><td>Alice</td><td>Math</td><td>101</td><td>Prof. X</td></tr><tr class="even"><td>2</td><td>Bob</td><td>Science</td><td>102</td><td>Prof. Y</td></tr><tr class="odd"><td>3</td><td>Charlie</td><td>English</td><td>103</td><td>Prof. Z</td></tr></tbody></table><p>Here, <code>ProfessorName</code> depends on <code>ProfessorID</code>rather than on the <code>StudentID</code> or <code>Subject</code>. Thisis like knowing the professor's name by their ID, not by the student orthe subject they teach.</p><h2 id="how-to-achieve-3nf">How to Achieve 3NF:</h2><p>To organise this into 3NF, split the details into two tables whereprofessors are listed separately. This way, each piece of information isstored only once and directly relates to the primary subject of itstable.</p><p>Students Table:</p><table><thead><tr class="header"><th>StudentID</th><th>Name</th><th>Subject</th><th>ProfessorID</th></tr></thead><tbody><tr class="odd"><td>1</td><td>Alice</td><td>Math</td><td>101</td></tr><tr class="even"><td>2</td><td>Bob</td><td>Science</td><td>102</td></tr><tr class="odd"><td>3</td><td>Charlie</td><td>English</td><td>103</td></tr></tbody></table><p>Professors Table:</p><table><thead><tr class="header"><th>ProfessorID</th><th>ProfessorName</th></tr></thead><tbody><tr class="odd"><td>101</td><td>Prof. X</td></tr><tr class="even"><td>102</td><td>Prof. Y</td></tr><tr class="odd"><td>103</td><td>Prof. Z</td></tr></tbody></table><h1 id="boyce-codd-normal-form-bcnf-a-tighter-ship">Boyce-Codd NormalForm (BCNF): A Tighter Ship</h1><h2 id="what-is-bcnf">What is BCNF?</h2><p>BCNF is like 3NF but <em>with stricter rules</em>. It's aboutensuring that every non-trivial dependency in the table relies solely ona <code>superkey</code>, a combination of columns that uniquelyidentifies a row in the table.</p><h3 id="practical-example">Practical Example:</h3><p>Take a look at this course registration table:</p><table><thead><tr class="header"><th>CourseID</th><th>Student</th><th>Professor</th></tr></thead><tbody><tr class="odd"><td>1</td><td>Alice</td><td>Prof. X</td></tr><tr class="even"><td>1</td><td>Bob</td><td>Prof. X</td></tr><tr class="odd"><td>2</td><td>Alice</td><td>Prof. Y</td></tr></tbody></table><p>The problem? <code>CourseID</code> alone doesn't always uniquelyidentify the professor since the same course could be taught bydifferent professors in different years or semesters.</p><h3 id="how-to-fix-it">How to Fix It:</h3><p>By restructuring the data, where <code>CourseID</code> combined withanother attribute (like a semester) always leads to a specificprofessor. This ensures each table entry is uniquely identifiable by itskey components, preventing any ambiguity. Absolutely! Let's elaborate onthe example by adding another attribute—let's say "Semester"—to thetable to ensure each entry is uniquely identifiable, thus adhering tothe principles of BCNF.</p><p><strong>Example Table After Restructuring:</strong> To resolve thisand adhere to BCNF, we add the "Semester" attribute, which, combinedwith <code>CourseID</code>, will act as a superkey:</p><table><thead><tr class="header"><th>CourseID</th><th>Semester</th><th>Student</th><th>Professor</th></tr></thead><tbody><tr class="odd"><td>1</td><td>Fall 2024</td><td>Alice</td><td>Prof. X</td></tr><tr class="even"><td>1</td><td>Fall 2024</td><td>Bob</td><td>Prof. X</td></tr><tr class="odd"><td>2</td><td>Spring 2025</td><td>Alice</td><td>Prof. Y</td></tr></tbody></table><p>Now, each combination of <code>CourseID</code> and<code>Semester</code> uniquely identifies the professor, ensuring noambiguity remains:</p><ul><li><strong>Superkey:</strong> (<code>CourseID</code>,<code>Semester</code>)</li><li>Every row is now uniquely identifiable by this superkey, satisfyingBCNF's requirement that every determinant must be a superkey.</li></ul><p>This restructuring eliminates any potential anomalies associated withupdates, deletions, or insertions by ensuring that the dependencieswithin the table adhere strictly to the superkey rule. Such adjustmentsare crucial for maintaining the integrity and efficiency of databaseoperations, particularly in environments with complex datainteractions.</p><h1 id="final-thoughts-keeping-it-practical">Final Thoughts: Keeping ItPractical</h1><p>While normalisation is about reducing redundancy and improving dataintegrity, it's also about finding the right balance. Over-normalisingcan lead to overly complex databases, making them hard to query andmanage. Always consider the specific needs of your application andstrive for a practical level of normalisation that supports performanceand maintainability.</p><hr /><p>By understanding and applying these normalisation forms, you'resetting the stage for a robust, scalable, and efficient database system.Dive into these principles, experiment with them, and watch as yourbackend systems become more streamlined than ever!</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Programming Languages </category>
          
          <category> SQL </category>
          
          <category> Notebooks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> database-design </tag>
            
            <tag> backend </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCSS/CSS Notebook</title>
      <link href="/scss-css-notebook/"/>
      <url>/scss-css-notebook/</url>
      
        <content type="html"><![CDATA[<p>As a software engineer, mastering SCSS and CSS has been a gamechanger in my web development career. These technologies not onlyfacilitate intricate designs but also optimise functionality andresponsiveness. This blog post explores some of the powerful SCSS/CSSfeatures that have revolutionised how I approach web design.</p><span id="more"></span><h2 id="dynamic-visual-effects-with-mix-blend-modes">Dynamic VisualEffects with Mix Blend Modes</h2><p>The <code>mix-blend-mode</code> property is a CSS gem for creatingstunning visual effects by blending elements' colors with theirbackground in various ways:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blend</span> &#123;</span><br><span class="line">  <span class="attribute">mix-blend-mode</span>: exclusion;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Utilising this property can add an artistic flair to images and text,giving your website a unique aesthetic that stands out.</p><p>ref: https://css-tricks.com/almanac/properties/m/mix-blend-mode/</p><h2 id="ensuring-text-clarity-and-layout-control">Ensuring Text Clarityand Layout Control</h2><p>Preventing Text Wrapping with White Space Control:</p><p>To keep text in a single, unbroken line, especially useful innavigations and button texts:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">white-space</span>: nowrap;</span><br></pre></td></tr></table></figure><p>ref:https://stackoverflow.com/questions/17704539/css-getting-text-in-one-line-rather-than-two</p><p>Managing Overflowing Text:</p><p>For text that might extend beyond the bounds of its container,ensuring it wraps effectively without disrupting the layout:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">overflow-wrap</span>: break-word;</span><br></pre></td></tr></table></figure><p>This property is crucial for maintaining a polished look,particularly on smaller screens.</p><h2 id="responsive-design-with-media-queries-in-scss">Responsive Designwith Media Queries in SCSS</h2><p>Adjusting layouts responsively based on device screen sizes isseamless with SCSS media queries:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.xx-container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50vw</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="variable">$screen_sm</span>) &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>These snippets facilitate dynamic styling that adapts fluidly acrossdifferent devices, enhancing user experience.</p><h2 id="fine-tuning-user-interfaces">Fine-Tuning User Interfaces</h2><p>Resizable Text Areas:</p><p>Allowing users to resize text areas vertically enhances usability,particularly in forms and comment boxes:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">resize</span>: vertical;</span><br></pre></td></tr></table></figure><p>Text Justification for Improved Readability:</p><p>Achieving a clean and aligned text display can be done with:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">text</span>-align: justify;</span><br><span class="line"><span class="selector-tag">text</span>-justify: inter-word;</span><br></pre></td></tr></table></figure><h2 id="optimising-element-sizing-and-positioning">Optimising ElementSizing and Positioning</h2><p>Adjusting Heights for Cross-Browser Compatibility:</p><p>Some properties behave differently across browsers, such as<code>fit-content</code>. For better compatibility, especially withFirefox:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">height</span>: -moz-max-content;</span><br><span class="line"><span class="attribute">height</span>: fit-content <span class="meta">!important</span>;</span><br></pre></td></tr></table></figure><p>Managing Scroll Positions with Scroll Margin:</p><p>Setting a custom scroll position for anchored IDs enhancesnavigational precision:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">scroll-margin-top</span>: <span class="number">100px</span>;</span><br></pre></td></tr></table></figure><h2 id="mastering-flexbox-and-grid-for-perfect-layouts">MasteringFlexbox and Grid for Perfect Layouts</h2><p>Flexbox for Centering:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">align-items</span>: center;</span><br><span class="line"><span class="attribute">justify-content</span>: center;</span><br></pre></td></tr></table></figure><p>Grid for Complex Layouts:</p><p>Creating responsive, grid-based designs is simplified using CSSGrid:</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent</span> <span class="selector-class">.child</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(auto-fit, <span class="built_in">minmax</span>(<span class="number">25rem</span>, <span class="number">1</span>fr));</span><br><span class="line">  <span class="attribute">grid-gap</span>: <span class="number">3rem</span>;</span><br><span class="line">  <span class="selector-tag">text</span>-align: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="choosing-between-px-and-rem-for-responsive-design">ChoosingBetween PX and REM for Responsive Design</h2><p>Another common question you will be asked or you have been lookingfor the answer. Understanding the difference between <code>px</code> and<code>rem</code> can significantly affect the scalability andaccessibility of your website:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2rem</span>; <span class="comment">/* 32px */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1rem</span>; <span class="comment">/* 16px */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>rem</code> units adapt based on the root element's font size,making them ideal for responsive designs that need to accommodatevarious device settings.</p><p>To use <code>rem</code> in your project, just replace your<code>px</code> values with <code>rem</code> values, bearing in mind theroot font-size. You might need to make adjustments based on the visualdesign and proportions. For example, if you want a font size of 18px,and your root font-size is 16px, the REM value would be<strong><code>18/16 = 1.125rem</code></strong>.</p><h2 id="conclusion">Conclusion</h2><p>Leveraging the advanced features of SCSS and CSS not only streamlinesthe styling process but also ensures that web applications areaccessible, aesthetically pleasing, and responsive. The journey throughCSS and SCSS is ongoing, and each project brings new insights andopportunities for creative solutions.</p><hr /><p>Embrace these techniques and integrate them into your web developmentpractices to craft more engaging, efficient, and user-friendly webapplications.</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Notebooks </category>
          
          <category> Web Development </category>
          
          <category> Front-end </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ui-ux-design </tag>
            
            <tag> designing </tag>
            
            <tag> frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash Notebook</title>
      <link href="/bash-notebook/"/>
      <url>/bash-notebook/</url>
      
        <content type="html"><![CDATA[<!--Getting Started with BashIntermediate TechniquesAdvanced Bash Scripts and Tricks--><img data-src="/bash-notebook/terminal.png" class="large no-shadow"><p>Through this post, I aim to share some of the tips and tricks I havegathered along my journey with Bash. I am not an expert, my experienceshave taught me valuable lessons that I believe can benefit others, andI'm excited to share them with you! Whether you're a Bash beginner orhave some fundamentals under your belt, I hope you'll find somethinghere that enhances your command line prowess. And, of course, I inviteyou to share your own insights and experiences in the commentsbelow—let's learn from each other and grow together!</p><span id="more"></span><hr /><h2 id="what-is-bash">What is Bash?</h2><p>When we speak of the <strong>command line</strong>, we are reallyreferring to the shell. The shell is a program that takes keyboardcommands and passes them to the operating system to carry out. Almostall Linux distributions supply a shell program from the GNU Projectcalled <code>bash</code>. The name is an acronym for<code>bourne-again shell</code>, a reference to the fact that Bash is anenhanced replacement for <code>sh</code>, the original Unix shellprogram written by <ahref="https://en.wikipedia.org/wiki/Stephen_R._Bourne">Steve R.Bourne</a>.</p><p>In the realm of software engineering, the command line holds aspecial place. It's the backbone of automation, the gateway to systemadministration, and the tool of choice for the discerning developer.Among the various shells available, Bash stands out as a symbol of<strong>efficiency</strong> and <strong>flexibility</strong>. As someonedeeply enamored with the elegance of Bash, I have embarked on a journeyto explore its depths and harness its potential.</p><p>To me, Bash is more than just a tool; it's the soul of the computer.It's where magic happens, where commands come to life, and where truepower resides. With just a few keystrokes and the mighty<code>sudo</code>, one can orchestrate the symphony of the system, all<em>without the need for a mouse</em>. It's this simplicity and potencythat have made me a fervent advocate of Bash.</p><h2 id="efficiency-is-key">Efficiency is key!</h2><p>As someone who values efficiency (lazy person... in short :D), Ioften look for "shortcuts" to streamline my workflow. In the world ofbash scripting, these shortcuts are known as <code>alias</code>. Theyallow you to abbreviate long commands or frequently used commandsequences into simple, memorable shortcuts.</p><p>Here's how you can set up your own aliases to enhance productivity,especially when you find yourself repeatedly typing the samecommands:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Basics</span></span><br><span class="line"><span class="built_in">alias</span> h=<span class="string">&quot;history&quot;</span></span><br><span class="line"><span class="built_in">alias</span> ?=<span class="string">&quot;pwd&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># show everything in that directory // list long format including hidden files</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">&quot;ls -rslah&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can use the ls command to create an alias to help you find where you left off:</span></span><br><span class="line"><span class="built_in">alias</span> left=<span class="string">&#x27;ls -t -1&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Stole it from Lionel (ex-company&#x27;s leader HAHA!)</span></span><br><span class="line"><span class="built_in">alias</span> ,=<span class="string">&quot;cd ..&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> wt=<span class="string">&quot;curl wttr.in/Singapore?FQ&quot;</span> <span class="comment"># A nerdy way to check the weather ...</span></span><br><span class="line"><span class="built_in">alias</span> listen=<span class="string">&quot;sudo lsof -i -P -n | grep LISTEN&quot;</span></span><br><span class="line"><span class="comment"># My IP in the network</span></span><br><span class="line"><span class="built_in">alias</span> ip=<span class="string">&quot;ipconfig getifaddr en0 | tee &gt;(pbcopy)&quot;</span></span><br><span class="line"><span class="comment"># Router IP address</span></span><br><span class="line"><span class="built_in">alias</span> routerip=<span class="string">&quot;curl ipecho.net/plain ; echo&quot;</span></span><br><span class="line"><span class="comment"># List all open files and network connections that are in a listening state on your system.</span></span><br><span class="line"><span class="built_in">alias</span> listen=<span class="string">&quot;sudo lsof -nP -iTCP -sTCP:LISTEN&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You may also:</span></span><br><span class="line"><span class="comment"># Apache&#x27;s</span></span><br><span class="line"><span class="built_in">alias</span> res=<span class="string">&quot;sudo apachectl restart&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Elixir&#x27;s</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">log</span>=<span class="string">&quot;tail -f /var/app/xxx_releases/<span class="variable">$RELEASE</span>/tmp/log/erlang.log.1&quot;</span></span><br><span class="line"><span class="built_in">alias</span> remote=<span class="string">&quot;/var/app/xxx_releases/<span class="variable">$RELEASE</span>/bin/xxx remote&quot;</span></span><br><span class="line"><span class="built_in">alias</span> deploy=<span class="string">&quot;sudo killall beam.smp &amp;&amp; /var/app/xxx/_deploy/update_prod&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>These are my most used commands on a daily basis</p></blockquote><p>To make these aliases permanent, add them to your<code>.bashrc</code> or <code>.bash_profile</code> file, taking<code>.bash_profile</code> as an example, you may: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br></pre></td></tr></table></figure></p><p>OR, personally I prefer to just open it on my visual studio code:<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code ~/.bash_profile</span><br></pre></td></tr></table></figure></p><p>With these simple steps, you can greatly reduce the number ofkeystrokes needed in your daily tasks and focus more on your developmentwork. I believe having aliases set is the smart way to work efficientlyin the command line!</p><h3 id="ls---options">ls - Options:</h3><table><colgroup><col style="width: 7%" /><col style="width: 92%" /></colgroup><thead><tr class="header"><th>Option</th><th>Description</th></tr></thead><tbody><tr class="odd"><td><code>-r</code></td><td>Reverses the order of the sort, oldest first.</td></tr><tr class="even"><td><code>-s</code></td><td>Displays the block size of each file in units.</td></tr><tr class="odd"><td><code>-l</code></td><td>Uses a long listing format, showing detailed information about eachfile.</td></tr><tr class="even"><td><code>-a</code></td><td>Lists all entries including those starting with a dot (hiddenfiles).</td></tr><tr class="odd"><td><code>-i</code></td><td>Displays the inode number of each file.</td></tr><tr class="even"><td><code>-h</code></td><td>Human-readable format, shows file sizes in KB, MB, etc.</td></tr><tr class="odd"><td><code>-t</code></td><td>Sorts the output by modification time, newest first (lastmodified).</td></tr><tr class="even"><td><code>-R</code></td><td>Lists directories and their contents recursively.</td></tr><tr class="odd"><td><code>-d</code></td><td>Lists directories themselves, not their contents.</td></tr></tbody></table><p>These options can be mixed and matched to create a command that fitsexactly what you need.</p><h3 id="history">history</h3><ul><li><code>history</code> stores up to 1k commands by default.</li></ul><h2 id="reading-the-manual">Reading the Manual</h2><p>Just use <code>man</code> followed by the command you want to learnabout. The <code>man</code> command, short for"<strong>manual</strong>," is a powerful tool available in Unix andUnix-like systems such as Linux and macOS. It provides detaileddocumentation on a wide range of system commands, utilities, and more.Here's how to use it: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man &lt;<span class="built_in">command</span>&gt;</span><br></pre></td></tr></table></figure></p><p>For example, to get more information about the <code>ls</code>command, you would type: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">man <span class="built_in">ls</span></span><br><span class="line">man git</span><br><span class="line">man grep</span><br></pre></td></tr></table></figure></p><blockquote><p>This command will display a comprehensive manual page for<code>ls</code>, covering its usage, options, and examples.<code>man</code> covers most of the commands you'll use in the terminal,offering a great way to dive deeper into commands such as<code>grep</code>, <code>awk</code>, <code>systemctl</code>, and manyothers.</p></blockquote><p><strong>Remember:</strong> - Not every tool or script has a<code>man</code> page, especially those that are user-installed. -Sometimes, the documentation might lag behind the latest updates ofsoftware versions. - The depth of information can be daunting at firstbut becomes an indispensable resource with familiarity.</p><h2 id="tips-in-linux-understand-your-server">Tips in Linux: UnderstandYour Server</h2><p>Bash and Linux are two different things that are often usedtogether.</p><p>Linux is a free and open-source operating system that is based on theUnix operating system. It is widely used in servers, supercomputers, andembedded systems, and is popular among developers, systemadministrators, and other IT professionals.</p><p>Bash, on the other hand, is a shell program that runs on top of Linux(and other Unix-like systems) and provides a command-line interface forusers to interact with the system. It is also a scripting language thatallows users to write scripts to automate tasks and perform complexoperations.</p><h3 id="here-are-some-differences-between-bash-and-linux">Here are somedifferences between Bash and Linux:</h3><ol type="1"><li>Bash is a program, while Linux is an operating system. Bash runs ontop of Linux (or other Unix-like systems) to provide a command-lineinterface for users to interact with the system.</li><li>Bash is a shell program that provides a command-line interface andscripting language, while Linux provides the underlying operating systemservices such as memory management, process scheduling, and devicedrivers.</li><li>Bash is one of several shell programs available on Linux. Othershell programs include sh, csh, and zsh. Users can choose the shellprogram that best suits their needs.</li><li>Linux is an operating system that comes in different distributions,such as Ubuntu, Fedora, and Debian. Each distribution provides adifferent set of tools, software, and user interfaces. Bash, on theother hand, is available on all distributions of Linux.</li><li>Bash is a powerful scripting language that can be used to automatetasks and perform complex operations. It can also be used to writeprograms and perform system administration tasks. Linux provides a widerange of system administration tools and utilities that can be used inconjunction with Bash scripts.</li></ol><blockquote><p>Overall, Bash and Linux are two different things that work togetherto provide a powerful and flexible system for users to interact with andmanage.</p></blockquote><table><colgroup><col style="width: 5%" /><col style="width: 94%" /></colgroup><thead><tr class="header"><th>Command</th><th>Description</th></tr></thead><tbody><tr class="odd"><td>whoami</td><td>Displays current username.</td></tr><tr class="even"><td>id</td><td>Returns users identity</td></tr><tr class="odd"><td>hostname</td><td>Sets or prints the name of current host system.</td></tr><tr class="even"><td>uname</td><td>Prints basic information about the operating system name and systemhardware.</td></tr><tr class="odd"><td>pwd</td><td>Returns working directory name.</td></tr><tr class="even"><td>ifconfig</td><td>The ifconfig utility is used to assign or to view an address to anetwork interface and/or configure network interface parameters.</td></tr><tr class="odd"><td>ip</td><td>Ip is a utility to show or manipulate routing, network devices,interfaces and tunnels.</td></tr><tr class="even"><td>netstat</td><td>Shows network status.</td></tr><tr class="odd"><td>ss</td><td>Another utility to investigate sockets.</td></tr><tr class="even"><td>ps</td><td>Shows process status.</td></tr><tr class="odd"><td>who</td><td>Displays who is logged in.</td></tr><tr class="even"><td>env</td><td>Prints environment or sets and executes command.</td></tr><tr class="odd"><td>lsblk</td><td>Lists block devices.</td></tr><tr class="even"><td>lsusb</td><td>Lists USB devices</td></tr><tr class="odd"><td>lsof</td><td>Lists opened files.</td></tr><tr class="even"><td>lspci</td><td>Lists PCI devices.</td></tr></tbody></table><p>With three years of experience (only...) digging into servermaintenance and troubleshooting, I have amassed a collection ofessential commands that are indispensable for anyone managingservers.</p><p>Whether you're setting up, maintaining, or troubleshooting, thesecommands are likely to be some of your most used tools, I might be wrongplease leave a comment below for your favourite commands you used whentroubleshooting!</p><p>Whether you're setting up, maintaining, or troubleshooting, thesecommands might just become your new go-to tools—though I could be wrong!Everyone has their favorites, right? I'd love to hear about yourfavourite set of commands . Drop your top picks in the comments belowand let's swap some server-savvy secrets! HAHA!</p><p>Here's a deeper look into each one and why you should know them:</p><h3 id="os-details-check">OS Details Check</h3><p>Discover what's running under the hood: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/os-release</span><br></pre></td></tr></table></figure></p><blockquote><p>Output: <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">NAME=&quot;Amazon Linux&quot;</span><br><span class="line">VERSION=&quot;2023&quot;</span><br><span class="line">ID=&quot;amzn&quot;</span><br><span class="line">ID_LIKE=&quot;fedora&quot;</span><br><span class="line">VERSION_ID=&quot;2023&quot;</span><br><span class="line">PLATFORM_ID=&quot;platform:al2023&quot;</span><br><span class="line">PRETTY_NAME=&quot;Amazon Linux 2023&quot;</span><br><span class="line">ANSI_COLOR=&quot;0;33&quot;</span><br><span class="line">CPE_NAME=&quot;cpe:2.3:o:amazon:amazon_linux:2023&quot;</span><br><span class="line">HOME_URL=&quot;https://aws.amazon.com/linux/&quot;</span><br><span class="line">BUG_REPORT_URL=&quot;https://github.com/amazonlinux/amazon-linux-2023&quot;</span><br><span class="line">SUPPORT_END=&quot;2028-03-01&quot;</span><br></pre></td></tr></table></figure></p></blockquote><p>This command provides key details about your Linuxdistribution—essential for compatibility and troubleshooting.</p><h3 id="kernel-version">Kernel Version</h3><p>Check your core: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">man <span class="built_in">uname</span> <span class="comment"># Read manual as always</span></span><br><span class="line"><span class="built_in">uname</span></span><br><span class="line"><span class="built_in">uname</span> -a</span><br><span class="line"><span class="built_in">uname</span> -v <span class="comment"># Get kernel version</span></span><br></pre></td></tr></table></figure></p><h3 id="cpu-info">CPU Info</h3><p>Understand your processor that reveals the CPU architecture,capabilities and for performance tuning: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lscpu</span><br></pre></td></tr></table></figure></p><h3 id="memory-info">Memory Info</h3><p>Monitor your RAM usage: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">free -h</span><br></pre></td></tr></table></figure></p><h3 id="disk-space">Disk Space</h3><p>Keep an eye on storage: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure></p><h3 id="network-interfaces">Network Interfaces</h3><p>List all network interfaces and IP addresses to ensure your networksettings are correct: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure></p><h3 id="system-services">System Services</h3><p>Manage background processes: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status</span><br></pre></td></tr></table></figure></p><h3 id="reminder-system-update">Reminder: System Update</h3><h4 id="why-update">Why Update?</h4><ul><li><strong>Security:</strong> Patch vulnerabilities</li><li><strong>Stability:</strong> Fix bugs</li><li><strong>Performance:</strong> Enhance speed</li><li><strong>Compatibility:</strong> Ensure software works welltogether</li></ul><h4 id="how-to-update---yum">How to Update - <code>yum</code>:</h4><ol type="1"><li><strong>Check for Updates:</strong> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum check-update</span><br></pre></td></tr></table></figure></li><li><strong>Apply Updates:</strong> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum update -y</span><br></pre></td></tr></table></figure></li><li><strong>Reboot if Required:</strong> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> needs-restarting -r</span><br></pre></td></tr></table></figure></li></ol><h4 id="tips">Tips:</h4><ul><li><strong>Regular Checks:</strong> Weekly checks or automatedalerts</li><li><strong>Backups:</strong> <em>Always back up data beforeupdates</em></li><li><strong>Post-Update Monitoring:</strong> Check for any issues afterupdates</li></ul><p>This concise guide covers the essentials of why and how to keep yoursystem updated using <code>yum</code>.</p><blockquote><p><em>What are your go-to tools for server management?</em></p></blockquote><h2 id="z---powerful-navigator">z - Powerful navigator</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3J1cGEveg==">Z<i class="fa fa-external-link-alt"></i></span> is a powerful script thatspeeds up your directory navigation more than you could imagine!</p><h3 id="installation-set-up">Installation &amp; Set-up</h3><ol type="1"><li><p>Download the <code>z.sh</code> script using <code>wget</code><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/rupa/z/master/z.sh -O ~/z.sh <span class="comment"># output to ~/z.sh</span></span><br></pre></td></tr></table></figure></p></li><li><p>Initialise Z Add the following lines to your bash profile filleto initialise the script every time a shell opens:</p><p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\n\n#initialize Z (https://github.com/rupa/z) \n. ~/z.sh \n\n&quot;</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure></p><p>OR, directly on your profile:</p><p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># run z.sh by default</span></span><br><span class="line"><span class="keyword">if</span> [ -f ~/z.sh ]; <span class="keyword">then</span></span><br><span class="line">  . ~/z.sh</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p></li><li><p>Reload the Shell Apply the changes by sourcing your profile</p><p>For example: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></p></li></ol><p>That's it! These steps should make navigating directories quicker andmore intuitive like so:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z myfold <span class="comment"># Even tho your folder is named my_folder_xxx, it will always match with the top used directory</span></span><br></pre></td></tr></table></figure><blockquote><p>Meaning, you have to somehow have some data by using a few times of<code>cd</code> before using it.</p></blockquote><p>In short, the more you use it, the better it gets. I hope this guidehelps you as much as it has helped me! :D</p><h2 id="grep">grep</h2><p>One of the most basic command line you should already know! But I amleaving some notes here as I found interesting and useful.</p><h3 id="simple-usage">Simple usage:</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">anything | grep the-keyword</span><br></pre></td></tr></table></figure><h3 id="insensitive-case">Insensitive case:</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll | grep -i <span class="string">&quot;things-u-wanna-find&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>SEARCH: How to show lines Before/After/Around the Match:</p></blockquote><p>more ...</p><h3 id="sres-must-know">SRE's must know</h3><p><strong>SRE Interview questions I got asked:</strong> Q2: Whichcommand do you use to count all lines with ERROR keyword (casesensitive)? <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&quot;ERROR&quot;</span> ./stderr.log | <span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure></p><p>Q3: Which command do you use to display 5 lines before and 5 linesafter the line with ERROR keyword and line numbers as well?<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -A 5 -B 5 -n <span class="string">&quot;ERROR&quot;</span> stderr.log</span><br></pre></td></tr></table></figure></p><h3 id="some-notes">Some notes</h3><p><code>^</code> is the start-of-line anchor, it matches the beginningof a line.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep ^Host ~/.ssh/config</span><br></pre></td></tr></table></figure><p>This command is searching for lines in the<strong><code>~/.ssh/config</code></strong> file that<strong>start</strong> with the word "Host".</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep ^Host ~/.ssh/config | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="awk">awk</h2><p><code>awk</code> is a powerful text processing tool that's commonlyused in UNIX-like operating systems. It excels at column-basedoperations, making it ideal for data extraction and reporting fromstructured text data. <code>awk</code> is not just a command; it's anentire programming language designed for text processing.</p><h3 id="basics-of-awk">Basics of <code>awk</code></h3><p>The basic syntax of <code>awk</code> is: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;pattern &#123; action &#125;&#x27;</span> file</span><br></pre></td></tr></table></figure></p><ul><li><strong><code>pattern</code></strong>: This specifies the conditionfor which the <strong><code>action</code></strong> should be executed.If no pattern is provided, the action is executed for every line.</li><li><strong><code>action</code></strong>: This iswhat <strong><code>awk</code></strong> does when the pattern matches.Actions are enclosed in <strong><code>&#123; &#125;</code></strong>.</li><li><strong><code>file</code></strong>: The file you want to process. Ifno file is specified, <strong><code>awk</code></strong> reads from thestandard input.</li></ul><h2 id="wc---word-count">wc - Word Count</h2><ul><li>https://linuxhint.com/wc-command-bash/</li></ul><p>Get wordcount from a log text file: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> log.txt | <span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure></p><p>Get total occurrences of the word "ERROR" case insensitively and byline: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> log.txt | grep -io <span class="string">&quot;ERROR&quot;</span>  | <span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure></p><h3 id="wc---options">wc - Options:</h3><table><thead><tr class="header"><th>Option</th><th>Description</th></tr></thead><tbody><tr class="odd"><td><code>-l</code></td><td>Count the number of lines in the input.</td></tr><tr class="even"><td><code>-L</code></td><td>Display the length of the longest line.</td></tr><tr class="odd"><td><code>-w</code></td><td>Count the number of words in the input.</td></tr><tr class="even"><td><code>-c</code></td><td>Count the number of bytes in the input.</td></tr><tr class="odd"><td><code>-m</code></td><td>Count the number of characters in the input.</td></tr></tbody></table><p>wip ...</p><h2 id="ssh">SSH</h2><h3 id="genkey">genkey</h3><p>Keys will be created (id_rsa and id_rsa.pub) under ~/.ssh:<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 2048</span><br><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure></p><h3 id="pbcopy-key">pbcopy key</h3><ul><li>https://stackoverflow.com/a/2643584/13677125 Copy ~/.ssh/id_rsa.pubto the clipboard: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub | pbcopy</span><br></pre></td></tr></table></figure></li></ul><h3 id="scp">scp</h3><p>ssh cp into your local folder: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp ec2-user@www.test.com:/var/app/project_name/_tmp/xxx.log ~/Downloads/xxx-copy.log</span><br></pre></td></tr></table></figure></p><h2 id="mkdir">mkdir</h2><h3 id="recursively">recursively</h3><p>You can create nested directories recursively using the<strong><code>-p</code></strong> flag with the<strong><code>mkdir</code></strong> command. The<strong><code>-p</code></strong> flag ensures that each directory iscreated if it doesn't exist, and it won't return an error if thedirectory already exists. <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ./folder-a/folder-b</span><br></pre></td></tr></table></figure></p><h2 id="as-known-as-source"><code>.</code> as known as<code>source</code></h2><p>A dot in that context means to "source" the contents of that fileinto the current shell. With <ahref="http://ss64.com/bash/source.html">source</a> itself being a shellbuiltin command. And <code>source</code> and the <code>.</code> operatorbeing synonyms.</p><p>Files such as this are often used to incorporate setup commands suchas adding things to ones environment variables, e.g.<code>addvars.sh</code>: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> VAR1=<span class="string">&quot;some var1 string&quot;</span></span><br><span class="line"><span class="built_in">export</span> VAR2=<span class="string">&quot;some var2 string&quot;</span></span><br></pre></td></tr></table></figure></p><p>Notice that I don't have any variables in my current shell'senvironment. <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">env</span> | grep VAR</span><br></pre></td></tr></table></figure></p><p>Now when I source this file: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. addvars.sh</span><br></pre></td></tr></table></figure></p><p>OK, doesn't seem like it did anything, but when we check the<code>env</code> variables again: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">env</span> | grep VAR</span><br><span class="line"><span class="built_in">env</span> -0 | <span class="built_in">sort</span> -z | <span class="built_in">tr</span> <span class="string">&#x27;\0&#x27;</span> <span class="string">&#x27;\n&#x27;</span></span><br></pre></td></tr></table></figure> output: &gt; VAR1=somevar1 string &gt; VAR2=some var2 string</p><p>OR, you may check all env by doing: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printenv</span></span><br><span class="line"><span class="built_in">printenv</span> | <span class="built_in">sort</span></span><br></pre></td></tr></table></figure></p><p>wip ...</p><h2 id="curl">curl</h2><p>wip ...</p><h2 id="chmod">chmod</h2><ul><li>https://chmod-calculator.com/</li></ul><p>The <code>chmod 777</code> command in Linux is used to set thepermissions of a file or directory to be fully open. Specifically, itpermits read, write, and execute permissions for the owner, the group,and others. Here's how it breaks down:</p><ul><li>The first <code>7</code> sets the owner's permissions to<code>read(4) + write(2) + execute(1) = 7</code></li><li>The second <code>7</code> sets the group's permissions to<code>read(4) + write(2) + execute(1) = 7</code></li><li>The third <code>7</code> sets the permissions for others to<code>read(4) + write(2) + execute(1) = 7</code></li></ul><p>So, a <code>chmod 777</code> on a file means that anyone can read,write, and execute the file. For a directory, it means anyone can view,modify, or enter the directory. This is usually considered insecure formost cases because it allows anyone to modify the file or directory.</p><p>The <code>-R</code> option stands for "recursive." When used with<code>chmod</code>, it applies the permission change to the directoryand also to all files and subdirectories contained in the directory. Forexample:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> -R 755 /path/to/directory</span><br></pre></td></tr></table></figure><p>This will set the directory and all its contents to be readable,writable, and executable by the owner, and readable and executable byeveryone else. Subdirectories will also have the same permissions setrecursively.</p><p>Understanding the implications of different permission settings isvital, especially given your role in managing web applications andDevOps. Incorrectly set permissions can be a security risk or canprevent applications from functioning correctly. Therefore, it's usuallybest to give the minimum necessary permissions for operation.</p><p>Would you like to know more about Linux file permissions, or is theresomething else you'd like to inquire about?</p><h2 id="gs-ghostscript">gs — GhostScript</h2><ul><li>Merge PDFs — https://stackoverflow.com/a/19358402</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=merged.pdf 2023-*</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=merged.pdf 2023-05.pdf 2023-06.pdf</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=PandJingHui_3months_payslips.pdf 2023-07.pdf 2023-08.pdf 2023-09.pdf</span><br></pre></td></tr></table></figure><h2 id="unzip">unzip</h2><h3 id="unzip-every-zipped-folder-in-a-directory">Unzip every zippedfolder in a directory</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip \*.zip</span><br></pre></td></tr></table></figure><h2 id="convert">convert</h2><p><strong>ImageMagick (Convert)</strong></p><ul><li><strong>Primary Use</strong>: Specifically designed for imageprocessing. It's primarily used for creating, editing, composing, orconverting bitmap images.</li><li><strong>Capabilities</strong>: Offers a wide range of options forimage manipulations such as resizing, flipping, mirroring, rotating,distorting, shearing, transforming, and more. It also supports a vastnumber of image formats.</li><li><strong>Simplicity for Images</strong>: Generally provides simplerand more direct commands for image manipulation and conversion, makingit more suitable for tasks that solely involve images.</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> *.JPG; <span class="keyword">do</span></span><br><span class="line">  convert <span class="string">&quot;<span class="variable">$file</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;file%.jpg&#125;</span>.jpeg&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="ffmpeg">1. <strong>FFmpeg</strong></h3><ul><li><strong>Primary Use</strong>: Primarily designed for video and audioprocessing. It excels at handling multimedia data streams and complexencoding and decoding processes.</li><li><strong>Capabilities</strong>: Can handle batch processing of videoand audio files, applying filters, changing codecs, and modifyingmultimedia files in various ways.</li><li><strong>Complexity</strong>: Typically offers more complex anddetailed command-line options for video and audio processing, whichmight be overkill or less efficient for simple image conversions.</li></ul><h3 id="imagemagick-convert">2. <strong>ImageMagick(Convert)</strong></h3><ul><li><strong>Primary Use</strong>: Specifically designed for imageprocessing. It's primarily used for creating, editing, composing, orconverting bitmap images.</li><li><strong>Capabilities</strong>: Offers a wide range of options forimage manipulations such as resizing, flipping, mirroring, rotating,distorting, shearing, transforming, and more. It also supports a vastnumber of image formats.</li><li><strong>Simplicity for Images</strong>: Generally provides simplerand more direct commands for image manipulation and conversion, makingit more suitable for tasks that solely involve images.</li></ul><h3 id="practical-differences-in-usage">Practical Differences inUsage</h3><ul><li><strong>Efficiency</strong>: For image file conversions, ImageMagickis generally more efficient and provides tools better suited for the jobwith less overhead compared to FFmpeg.</li><li><strong>Functionality</strong>: FFmpeg is more powerful for anymedia format conversion or processing that includes video or audio.However, for straight image-to-image conversion, ImageMagick is usuallypreferred due to its optimization for images.</li></ul><p>In your case, using <code>convert</code> from ImageMagick forconverting HEIC to JPEG is more straightforward and efficient, giventhat <code>convert</code> is optimized for image operations.</p><p>[WIP]</p><h2 id="nbconvert">nbconvert</h2><h3 id="convert-jupyter-notebook-to-specific-file-type">Convert Jupyternotebook to specific file type</h3><p>Convert Jupyter to ... <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">! jupyter nbconvert --to filetype <span class="string">&#x27;filename.ipynb&#x27;</span></span><br></pre></td></tr></table></figure></p><p>Example: <figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">! jupyter nbconvert <span class="attr">--to</span> md xxx<span class="selector-class">.ipynb</span></span><br><span class="line">! jupyter nbconvert <span class="attr">--to</span> <span class="selector-tag">html</span> xxx<span class="selector-class">.ipynb</span></span><br><span class="line">! jupyter nbconvert <span class="attr">--to</span> <span class="selector-tag">html</span> xxx.ipynb</span><br></pre></td></tr></table></figure> &gt; filetype: asciidoc, custom, html, latex,markdown, notebook, pdf, python, qtpdf, qtpng, rst, script, slides,webpdf</p><h2 id="dig---dns-of-a-website">dig - DNS of a website</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig https://enkr1.github.io/blog/</span><br></pre></td></tr></table></figure><img data-src="/bash-notebook/dig-output.png" class="no-shadow" title="Output"><h2 id="symlink">symlink</h2><p>To create a new symlink (will fail if symlink exists already):<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /<span class="selector-tag">path</span>/<span class="selector-tag">to</span>/file /<span class="selector-tag">path</span>/<span class="selector-tag">to</span>/symlink</span><br></pre></td></tr></table></figure></p><p>To create or update a symlink: <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ln</span> -<span class="keyword">sf</span> /path/<span class="keyword">to</span>/<span class="keyword">file</span> /path/<span class="keyword">to</span>/symlink</span><br></pre></td></tr></table></figure></p><h2 id="ps---check-processes">ps - Check Processes</h2><p>The <code>ps</code> command in Unix-based systems is used to list thecurrently running processes.</p><h3 id="basic-usage">Basic Usage</h3><p>Displays processes associated with the current terminal.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps</span><br></pre></td></tr></table></figure><h3 id="extended-usage">Extended Usage</h3><ul><li><strong><code>-a</code></strong>: Show processes for all users.</li><li><strong><code>-x</code></strong>: Include processes without acontrolling terminal.</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ax</span><br></pre></td></tr></table></figure><p>This combination (<code>-ax</code>) provides a comprehensive view ofall active processes on the system, which is useful for full systemmonitoring or debugging purposes.</p><h3 id="examples">Examples</h3><ul><li>To see all processes in a detailed format: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux</span><br></pre></td></tr></table></figure></li><li>To sort processes by memory usage: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps aux --<span class="built_in">sort</span>=-%mem <span class="comment"># on Linux</span></span><br><span class="line">ps aux | <span class="built_in">sort</span> -rnk 4 <span class="comment"># on Mac</span></span><br></pre></td></tr></table></figure></li><li>To search for a specific process, such as Apache:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep apache</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>This utility is essential for system administration, allowing you tomonitor and manage running processes effectively.</p></blockquote><h2 id="traceroute">traceroute</h2><p><code>traceroute</code> is a network diagnostic tool that tracks thepath data packets take from your computer to a destination host, showingeach hop and the time taken for each hop.</p><h3 id="why-using-it">Why using it?</h3><ul><li><strong>Diagnose Network Issues:</strong> Identify where delays orpacket loss occur.</li><li><strong>Network Bottlenecks:</strong> Pinpoint problematic segmentsin the network.</li><li><strong>Understand Network Topology:</strong> Gain insights intorouting paths and network structure.</li><li><strong>ISP Troubleshooting:</strong> Determine if connectivityissues are local or beyond your ISP.</li><li><strong>Verify Network Configuration:</strong> Ensure routing pathsare correctly configured.</li><li><strong>Debug DNS Issues:</strong> Check if domain names resolvecorrectly and trace the path to the destination.</li></ul><h3 id="when-to-use-it">When to use it?</h3><ul><li><strong>Slow Internet Speeds:</strong> Determine where latency isintroduced.</li><li><strong>Connectivity Problems:</strong> Identify if the issue iswithin the local network or external.</li><li><strong>Network Performance Issues:</strong> Locate bottleneckscausing slowdowns.</li><li><strong>Troubleshooting Remote Servers:</strong> Diagnose accessissues to remote servers.</li><li><strong>Verifying Network Changes:</strong> Confirm that newconfigurations work as intended.</li></ul><h3 id="how-to-use-it">How to use it:</h3><ol type="1"><li><p><strong>Run <code>traceroute</code>:</strong> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">traceroute &lt;destination&gt;</span><br></pre></td></tr></table></figure>Example: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">traceroute google.com</span><br></pre></td></tr></table></figure></p></li><li><p><strong>Interpreting Results:</strong></p><ul><li><strong>Normal Hops:</strong> Each hop shows the IP address andround-trip times (RTTs).</li><li><strong>High Latency:</strong> Significant RTT increases indicatepotential bottlenecks.</li><li><strong>Packet Loss:</strong> Asterisks (*) indicate probe timeouts,suggesting packet loss.</li><li><strong>Unreachable Destination:</strong> Continuous timeouts or noresponse indicates routing or connectivity issues.</li></ul></li><li><p><strong>Additional Options:</strong></p><ul><li>Set maximum hops: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">traceroute -m 20 &lt;destination&gt;</span><br></pre></td></tr></table></figure></li><li>Set timeout for each probe: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">traceroute -w 2 &lt;destination&gt;</span><br></pre></td></tr></table></figure></li><li>Set number of queries per hop: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">traceroute -q 1 &lt;destination&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>Learn More:</strong> View the manual page for detailedoptions: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man traceroute</span><br></pre></td></tr></table></figure></p></li></ol><h2 id="top">top</h2><p>Most used CPU processor in real time: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">top</span><br><span class="line">top -o rsize</span><br></pre></td></tr></table></figure></p><h2 id="uptime">uptime</h2><p>Displays how long the system has been running since the last reboot:<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uptime</span></span><br></pre></td></tr></table></figure></p><h2 id="cal">cal</h2><p>Show calendar in bash: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cal</span><br></pre></td></tr></table></figure></p><h2 id="say">say</h2><p>HAHAHAHA its just sth funny: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">say whatever you want to say</span><br></pre></td></tr></table></figure></p><h2 id="start-a-python-web-server">Start a python web server</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server</span><br></pre></td></tr></table></figure><h2 id="wifi-password">WiFi password</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">security find-generic-password -wa wifi-name</span><br><span class="line">security find-generic-password -wa <span class="string">&quot;Starbucks&quot;</span> | pbcopy</span><br></pre></td></tr></table></figure><h2 id="touch-id-forever">Touch ID forever!</h2><p>vim here &amp; enter password for one last time: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/pam.d/sudo</span><br></pre></td></tr></table></figure></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sudo: auth account password session</span></span><br><span class="line">auth       sufficient     pam_tid.so <span class="comment"># This is what we need</span></span><br><span class="line">auth       sufficient     pam_smartcard.so</span><br><span class="line">auth       required       pam_opendirectory.so</span><br><span class="line">account    required       pam_permit.so</span><br><span class="line">password   required       pam_deny.so</span><br><span class="line">session    required       pam_permit.so</span><br></pre></td></tr></table></figure><blockquote><p>Done! You can now unlock sudo with Touch ID like a ninja!</p></blockquote><h2 id="setting-up-with-colours">Setting up with colours</h2><ul><li>https://stackoverflow.com/questions/5947742/how-to-change-the-output-color-of-echo-in-linux?lq=1</li><li>https://en.wikipedia.org/wiki/ANSI_escape_code</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Reset</span></span><br><span class="line">Color_Off=<span class="string">&#x27;\033[0m&#x27;</span>       <span class="comment"># Text Reset</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Regular Colors</span></span><br><span class="line">Black=<span class="string">&#x27;\033[0;30m&#x27;</span>        <span class="comment"># Black</span></span><br><span class="line">Red=<span class="string">&#x27;\033[0;31m&#x27;</span>          <span class="comment"># Red</span></span><br><span class="line">Green=<span class="string">&#x27;\033[0;32m&#x27;</span>        <span class="comment"># Green</span></span><br><span class="line">Yellow=<span class="string">&#x27;\033[0;33m&#x27;</span>       <span class="comment"># Yellow</span></span><br><span class="line">Blue=<span class="string">&#x27;\033[0;34m&#x27;</span>         <span class="comment"># Blue</span></span><br><span class="line">Purple=<span class="string">&#x27;\033[0;35m&#x27;</span>       <span class="comment"># Purple</span></span><br><span class="line">Cyan=<span class="string">&#x27;\033[0;36m&#x27;</span>         <span class="comment"># Cyan</span></span><br><span class="line">White=<span class="string">&#x27;\033[0;37m&#x27;</span>        <span class="comment"># White</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bold</span></span><br><span class="line">BBlack=<span class="string">&#x27;\033[1;30m&#x27;</span>       <span class="comment"># Black</span></span><br><span class="line">BRed=<span class="string">&#x27;\033[1;31m&#x27;</span>         <span class="comment"># Red</span></span><br><span class="line">BGreen=<span class="string">&#x27;\033[1;32m&#x27;</span>       <span class="comment"># Green</span></span><br><span class="line">BYellow=<span class="string">&#x27;\033[1;33m&#x27;</span>      <span class="comment"># Yellow</span></span><br><span class="line">BBlue=<span class="string">&#x27;\033[1;34m&#x27;</span>        <span class="comment"># Blue</span></span><br><span class="line">BPurple=<span class="string">&#x27;\033[1;35m&#x27;</span>      <span class="comment"># Purple</span></span><br><span class="line">BCyan=<span class="string">&#x27;\033[1;36m&#x27;</span>        <span class="comment"># Cyan</span></span><br><span class="line">BWhite=<span class="string">&#x27;\033[1;37m&#x27;</span>       <span class="comment"># White</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Underline</span></span><br><span class="line">UBlack=<span class="string">&#x27;\033[4;30m&#x27;</span>       <span class="comment"># Black</span></span><br><span class="line">URed=<span class="string">&#x27;\033[4;31m&#x27;</span>         <span class="comment"># Red</span></span><br><span class="line">UGreen=<span class="string">&#x27;\033[4;32m&#x27;</span>       <span class="comment"># Green</span></span><br><span class="line">UYellow=<span class="string">&#x27;\033[4;33m&#x27;</span>      <span class="comment"># Yellow</span></span><br><span class="line">UBlue=<span class="string">&#x27;\033[4;34m&#x27;</span>        <span class="comment"># Blue</span></span><br><span class="line">UPurple=<span class="string">&#x27;\033[4;35m&#x27;</span>      <span class="comment"># Purple</span></span><br><span class="line">UCyan=<span class="string">&#x27;\033[4;36m&#x27;</span>        <span class="comment"># Cyan</span></span><br><span class="line">UWhite=<span class="string">&#x27;\033[4;37m&#x27;</span>       <span class="comment"># White</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Background</span></span><br><span class="line">On_Black=<span class="string">&#x27;\033[40m&#x27;</span>       <span class="comment"># Black</span></span><br><span class="line">On_Red=<span class="string">&#x27;\033[41m&#x27;</span>         <span class="comment"># Red</span></span><br><span class="line">On_Green=<span class="string">&#x27;\033[42m&#x27;</span>       <span class="comment"># Green</span></span><br><span class="line">On_Yellow=<span class="string">&#x27;\033[43m&#x27;</span>      <span class="comment"># Yellow</span></span><br><span class="line">On_Blue=<span class="string">&#x27;\033[44m&#x27;</span>        <span class="comment"># Blue</span></span><br><span class="line">On_Purple=<span class="string">&#x27;\033[45m&#x27;</span>      <span class="comment"># Purple</span></span><br><span class="line">On_Cyan=<span class="string">&#x27;\033[46m&#x27;</span>        <span class="comment"># Cyan</span></span><br><span class="line">On_White=<span class="string">&#x27;\033[47m&#x27;</span>       <span class="comment"># White</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># High Intensity</span></span><br><span class="line">IBlack=<span class="string">&#x27;\033[0;90m&#x27;</span>       <span class="comment"># Black</span></span><br><span class="line">IRed=<span class="string">&#x27;\033[0;91m&#x27;</span>         <span class="comment"># Red</span></span><br><span class="line">IGreen=<span class="string">&#x27;\033[0;92m&#x27;</span>       <span class="comment"># Green</span></span><br><span class="line">IYellow=<span class="string">&#x27;\033[0;93m&#x27;</span>      <span class="comment"># Yellow</span></span><br><span class="line">IBlue=<span class="string">&#x27;\033[0;94m&#x27;</span>        <span class="comment"># Blue</span></span><br><span class="line">IPurple=<span class="string">&#x27;\033[0;95m&#x27;</span>      <span class="comment"># Purple</span></span><br><span class="line">ICyan=<span class="string">&#x27;\033[0;96m&#x27;</span>        <span class="comment"># Cyan</span></span><br><span class="line">IWhite=<span class="string">&#x27;\033[0;97m&#x27;</span>       <span class="comment"># White</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bold High Intensity</span></span><br><span class="line">BIBlack=<span class="string">&#x27;\033[1;90m&#x27;</span>      <span class="comment"># Black</span></span><br><span class="line">BIRed=<span class="string">&#x27;\033[1;91m&#x27;</span>        <span class="comment"># Red</span></span><br><span class="line">BIGreen=<span class="string">&#x27;\033[1;92m&#x27;</span>      <span class="comment"># Green</span></span><br><span class="line">BIYellow=<span class="string">&#x27;\033[1;93m&#x27;</span>     <span class="comment"># Yellow</span></span><br><span class="line">BIBlue=<span class="string">&#x27;\033[1;94m&#x27;</span>       <span class="comment"># Blue</span></span><br><span class="line">BIPurple=<span class="string">&#x27;\033[1;95m&#x27;</span>     <span class="comment"># Purple</span></span><br><span class="line">BICyan=<span class="string">&#x27;\033[1;96m&#x27;</span>       <span class="comment"># Cyan</span></span><br><span class="line">BIWhite=<span class="string">&#x27;\033[1;97m&#x27;</span>      <span class="comment"># White</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># High Intensity backgrounds</span></span><br><span class="line">On_IBlack=<span class="string">&#x27;\033[0;100m&#x27;</span>   <span class="comment"># Black</span></span><br><span class="line">On_IRed=<span class="string">&#x27;\033[0;101m&#x27;</span>     <span class="comment"># Red</span></span><br><span class="line">On_IGreen=<span class="string">&#x27;\033[0;102m&#x27;</span>   <span class="comment"># Green</span></span><br><span class="line">On_IYellow=<span class="string">&#x27;\033[0;103m&#x27;</span>  <span class="comment"># Yellow</span></span><br><span class="line">On_IBlue=<span class="string">&#x27;\033[0;104m&#x27;</span>    <span class="comment"># Blue</span></span><br><span class="line">On_IPurple=<span class="string">&#x27;\033[0;105m&#x27;</span>  <span class="comment"># Purple</span></span><br><span class="line">On_ICyan=<span class="string">&#x27;\033[0;106m&#x27;</span>    <span class="comment"># Cyan</span></span><br><span class="line">On_IWhite=<span class="string">&#x27;\033[0;107m&#x27;</span>   <span class="comment"># White</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Example usage</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;Red&#125;</span>This text is red<span class="variable">$&#123;Color_Off&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$&#123;Black&#125;</span>This text is black<span class="variable">$&#123;Color_Off&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="brew">brew</h2><ul><li>https://formulae.brew.sh/ First, always check the latest info, makesure brew is up-to-date, etc: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">brew -h</span><br><span class="line">brew update</span><br><span class="line">brew upgrade</span><br><span class="line">brew cleanup</span><br></pre></td></tr></table></figure></li></ul><p>Checking list of packages like so: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew list</span><br></pre></td></tr></table></figure> <img data-src="/bash-notebook/brew-1.png" class="no-shadow" title="Output"></p><ul><li>https://formulae.brew.sh/formula/ffmpeg</li><li>https://formulae.brew.sh/formula/htop</li><li>https://formulae.brew.sh/formula/docker-compose</li></ul><p>wip: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ -x $(<span class="built_in">command</span> -v ffmpeg) ]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># encode HEVC</span></span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">ff265</span></span>() &#123;</span><br><span class="line">        ffmpeg -i <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -filter:v <span class="string">&quot;scale=in_color_matrix=auto:in_range=auto:out_color_matrix=bt709:out_range=tv&quot;</span> -pix_fmt:v <span class="string">&quot;yuv420p&quot;</span> -colorspace:v <span class="string">&quot;bt709&quot;</span> -color_primaries:v <span class="string">&quot;bt709&quot;</span> -color_trc:v <span class="string">&quot;bt709&quot;</span> -color_range:v <span class="string">&quot;tv&quot;</span> -chroma_sample_location left -crf 20 <span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">ff264</span></span>() &#123;</span><br><span class="line">      ffmpeg -i <span class="variable">$1</span> -vcodec libx264 -crf 28 <span class="variable">$2</span></span><br><span class="line">    &#125;</span><br><span class="line">    log_verbose <span class="string">&quot;use \033[34mff265\033[0m function to encode HEVC video&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p><hr /><h2 id="bash-basics-core-concepts">Bash Basics: Core Concepts</h2><h3 id="mv">mv</h3><p>Move file: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> <span class="built_in">test</span> ~/Downloads/test</span><br></pre></td></tr></table></figure></p><p>Rename file: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> this.txt that.txt</span><br></pre></td></tr></table></figure></p><h2 id="cp---copy-file-to-filedir">cp - Copy file to file/dir</h2><ul><li><strong>cp</strong> - copy files and directories</li><li><strong>ditto</strong> - copy directory hierarchies, create andextract archives</li></ul><p><span class="exturl" data-url="aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzQwOTc0NDM3LzEzNjc3MTI1">What isDifference between cp and ditto command on OSX?<i class="fa fa-external-link-alt"></i></span></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> test.txt ~/Downloads/</span><br><span class="line"><span class="built_in">cp</span> test.txt copied.txt</span><br></pre></td></tr></table></figure><h3 id="explanation-of-and">Explanation of <code>&amp;</code> and<code>&amp;&amp;</code></h3><ul><li><strong><code>&amp;</code></strong>: This is used to run the commandin the background. For instance, <code>some_command &amp;</code> wouldstart <code>some_command</code> and immediately return you to thecommand prompt while <code>some_command</code> continues to run in thebackground.</li><li><strong><code>&amp;&amp;</code></strong>: This is used to run thesecond command only if the first command completes successfully. Forexample, <code>first_command &amp;&amp; second_command</code> will onlyexecute <code>second_command</code> if <code>first_command</code> exitswith a status of 0 (which indicates success in Unix-like systems).</li></ul><h3 id="special-parameters">Special parameters</h3><p>https://tiswww.case.edu/php/chet/bash/bashref.html#Special-Parameters</p><ul><li><code>$0</code> — the name of the target script</li><li><code>$1</code> — the 1st arg passed</li><li><code>$2</code> — the 2nd arg …</li><li><code>$n</code> — the <code>n</code>th arg …</li><li><code>$#</code> — the number of args</li><li><code>$*</code> — all args as single string</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> arg <span class="keyword">in</span> <span class="string">&quot;$*&quot;</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$arg</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># output: foo bar baz</span></span><br></pre></td></tr></table></figure><p><code>$@</code> — all args as list</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> arg <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$arg</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># output:</span></span><br><span class="line"><span class="comment"># foo</span></span><br><span class="line"><span class="comment"># bar</span></span><br><span class="line"><span class="comment"># abaz</span></span><br></pre></td></tr></table></figure><h3 id="test-conditions">Test conditions</h3><p><strong><code>[ ... ]</code></strong> is a synonym for the<strong><code>test</code></strong> command. Inside the brackets, youspecify a condition, and based on whether this condition is true orfalse, you can make decisions in your script.</p><h4 id="numbers">Numbers</h4><ul><li><strong><code>eq</code></strong>: equal to</li><li><strong><code>ne</code></strong>: not equal to</li><li><strong><code>gt</code></strong>: greater than</li><li><strong><code>ge</code></strong>: greater than or equal to</li><li><strong><code>lt</code></strong>: less than</li><li><strong><code>le</code></strong>: less than or equal to</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;a is equal to b&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h4 id="strings">Strings</h4><ul><li><strong><code>=</code></strong> or <strong><code>==</code></strong>:check if two strings are equal</li><li><strong><code>!=</code></strong>: check if two strings are notequal</li><li><strong><code>z</code></strong>: check if the string is empty</li><li><strong><code>n</code></strong>: check if the string is notempty</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">str1=<span class="string">&quot;hello&quot;</span></span><br><span class="line">str2=<span class="string">&quot;world&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$str1</span>&quot;</span> != <span class="string">&quot;<span class="variable">$str2</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;The strings are different.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="testing-files">Testing Files</h3><ul><li><strong><code>e</code></strong>: Check if file exists</li><li><strong><code>f</code></strong>: Check if it's a regular file (not adirectory or device file)</li><li><strong><code>d</code></strong>: Check if it's a directory</li><li><strong><code>s</code></strong>: Check if file is not empty</li><li><strong><code>r</code></strong>, <strong><code>w</code></strong>, <strong><code>x</code></strong>:Check if file is readable, writable, or executable</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">filename=<span class="string">&quot;./my_script.sh&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$filename</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$filename</span> is a regular file.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><hr /><h2 id="some-amazing-sources">Some Amazing Sources</h2><ul><li><span class="exturl" data-url="aHR0cHM6Ly90bGRwLm9yZy9IT1dUTy9CYXNoLVByb2ctSW50cm8tSE9XVE8uaHRtbA==">BASHProgramming - Introduction HOW-TO<i class="fa fa-external-link-alt"></i></span></li><li><ahref="https://www.cyberciti.biz/tips/bash-aliases-mac-centos-linux-unix.html">Usefulbash aliases</a></li><li><ahref="https://linuxize.com/post/how-to-remove-files-and-directories-using-linux-command-line/">Howto Remove (Delete) Files in Linux</a></li><li><span class="exturl" data-url="aHR0cHM6Ly95b3V0dS5iZS9DLUFRQUpYZG9TOA==">YouTube - 8 Bash ShortcutsEvery Linux User Should Know<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly95b3V0dS5iZS9WOEVVZGlhX2tPRQ==">YouTube - My 5 Favorite LinuxShell Tricks for SPEEEEEED (and efficiency)<i class="fa fa-external-link-alt"></i></span></li></ul><hr />]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Programming Languages </category>
          
          <category> Notebooks </category>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> bash </tag>
            
            <tag> tips-and-tricks </tag>
            
            <tag> command-line </tag>
            
            <tag> linux </tag>
            
            <tag> scripting </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A Collection of Inspirational Mottos That Guide My Life</title>
      <link href="/a-collection-of-inspirational-mottos-that-guide-my-life/"/>
      <url>/a-collection-of-inspirational-mottos-that-guide-my-life/</url>
      
        <content type="html"><![CDATA[<p>In the journey of life and career, certain phrases have resonatedwith me, shaping my perspective and approach. Here, I share some of themottos that have become my personal guiding principles, along with aglimpse into how they've influenced my path.</p><hr /><h2 id="elon-musk">Elon Musk</h2><blockquote><p><em>"Have a problem to solve instead of learning the tools tosolve."</em></p></blockquote><p>Elon Musk's advice emphasises the importance of being driven bypurpose. In my own journey as a software engineer, this mindset hasshifted my focus from merely acquiring technical skills to applying themcreatively to solve real-world challenges.</p><blockquote><p><em>"There need to be reasons to get up in the morning."</em></p></blockquote><p>Finding purpose and motivation in life is crucial. This quote remindsme of the importance of setting meaningful goals, whether it'sinnovating in the tech industry or contributing positively tosociety.</p><hr /><h2 id="andrew-tate">Andrew Tate</h2><blockquote><p><em>"Everything is rented, you can't start slipping."</em></p></blockquote><p>This quote serves as a powerful reminder that success andachievements are transient. It motivates me to continuously strive forexcellence and not to become complacent in my endeavors.</p><blockquote><p><em>"If you actually try your best, you can't lose."</em></p></blockquote><p>This motto instills the belief that true success lies in effort anddedication. It has taught me to measure my achievements by the sincerityof my efforts rather than the outcome.</p><hr /><h2 id="jonathan-ma">Jonathan Ma</h2><blockquote><p><em>"Programming is a tool to turn ideas into reality. Use it as anopportunity to unleash creativity and build somethingremarkable."</em></p></blockquote><p>As a software engineer, this quote resonates deeply with me. Ithighlights the power of programming as a medium for creativity andinnovation, inspiring me to build impactful and meaningful projects.</p><hr /><h2 id="burken-scott-in-the-book-make-things-happen">Burken Scott in thebook "Make Things Happen"</h2><blockquote><p><em>"The brave are those who feel fear but choose to take actionanyway."</em></p></blockquote><p>Courage is not the absence of fear, but the ability to move forwardin spite of it. This motto has encouraged me to face challenges head-on,whether in my professional or personal life.</p><hr /><h2 id="billie-jean-king">Billie Jean King</h2><blockquote><p><em>"Pressure is a Privilege"</em></p></blockquote><hr /><h2 id="unknown">Unknown</h2><blockquote><p><em>"Let hunger guide perseverance towards greatness."</em></p></blockquote><p>This quote serves as a reminder that ambition and the desire toachieve can fuel our journey towards excellence. It has inspired me tostay hungry for knowledge and growth.</p><blockquote><p><em>"Do what you have to do until you can do what you want todo."</em></p></blockquote><p>This quote reminds me that perseverance and hard work are essentialin the pursuit of my goals. It has taught me the value of patience andpersistence in achieving my dreams.</p><blockquote><p><em>"In life, as in a Markov chain, each moment stands alone. Thepast may inform it, but the present is where decisions are made. Lookforward, move with purpose, and let each step be a newbeginning."</em></p></blockquote><p>A quote I thought of from studying Networking and Graphical Models...</p><blockquote><p><em>"The magic that you are looking for is in the work you areavoiding."</em></p></blockquote><p>ouch...</p><blockquote><p><em>"As long as u're granted life, u're guaranteed death. What u doin between is up to u."</em></p></blockquote><blockquote><p><em>"idw to be happy, i want to be great"</em></p></blockquote><hr /><p>These quotes encapsulate the values and beliefs that guide my actionsand decisions.</p><p>They serve as a source of inspiration and motivation, reminding me tostay true to my principles and to strive for excellence in allendeavors.</p><p>I hope they inspire you as much as they have inspired me.</p>]]></content>
      
      
      <categories>
          
          <category> Personal Development </category>
          
          <category> Inspirational Insights </category>
          
      </categories>
      
      
        <tags>
            
            <tag> inspirational </tag>
            
            <tag> motivation </tag>
            
            <tag> quote </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Networking &amp; Graphical Models</title>
      <link href="/networking-graphical-models/"/>
      <url>/networking-graphical-models/</url>
      
        <content type="html"><![CDATA[<h2 id="wip">WIP?</h2>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Personal Development </category>
          
          <category> Notebooks </category>
          
          <category> Online Courses </category>
          
          <category> MIT &amp; IDSS - AI &amp; ML </category>
          
          <category> Machine Learning &amp; AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ai </tag>
            
            <tag> mit-idss </tag>
            
            <tag> self-study </tag>
            
            <tag> machine-learning </tag>
            
            <tag> data-science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript Notebook</title>
      <link href="/javascript-notebook/"/>
      <url>/javascript-notebook/</url>
      
        <content type="html"><![CDATA[<p>Welcome to my JavaScript notebook! Here, I've compiled a variety oftips, tricks, and simple snippets that I've gathered over time. Thesenotes come from various sources, including my professional work,problem-solving on LeetCode, and personal projects. My aim is todocument these insights for my own reference and to share them withanyone who might find them useful or interesting. Whether you're afellow developer or just curious about JavaScript, I hope you'll findsomething valuable in these pages.</p><h2 id="array">Array</h2><p>Creating an array filled with empty arrays: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> filledWithEmptyArrays = <span class="title class_">Array</span>(<span class="number">3</span>).<span class="title function_">fill</span>().<span class="title function_">map</span>(<span class="function">() =&gt;</span> []);</span><br></pre></td></tr></table></figure></p><p>Creating a 2D array (e.g., for a visitation matrix):<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> visited = <span class="title class_">Array</span>.<span class="title function_">from</span>(&#123; <span class="attr">length</span>: l &#125;, <span class="function">() =&gt;</span> <span class="title class_">Array</span>.<span class="title function_">from</span>(&#123; <span class="attr">length</span>: l &#125;, <span class="function">() =&gt;</span> <span class="number">0</span>));</span><br></pre></td></tr></table></figure></p><p>Creating an array filled with zeros: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Array</span>(<span class="number">26</span>).<span class="title function_">fill</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure></p><p>Creating an array filled with false: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Array</span>(n).<span class="title function_">fill</span>(<span class="literal">false</span>);</span><br></pre></td></tr></table></figure></p><h3 id="dp">dp</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> dp = <span class="keyword">new</span> <span class="title class_">Array</span>(N).<span class="title function_">fill</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h3 id="d-array">2D array</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> N = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> M = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">let</span> dp = <span class="title class_">Array</span>.<span class="title function_">from</span>(&#123; <span class="attr">length</span>: N + <span class="number">1</span> &#125;, <span class="function">() =&gt;</span> <span class="keyword">new</span> <span class="title class_">Array</span>(M + <span class="number">1</span>).<span class="title function_">fill</span>(<span class="number">0</span>));</span><br></pre></td></tr></table></figure><p>output: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dp [</span><br><span class="line">  [ <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> ],</span><br><span class="line">  [ <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> ],</span><br><span class="line">  [ <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> ],</span><br><span class="line">  [ <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> ],</span><br><span class="line">  [ <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> ],</span><br><span class="line">  [ <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><h3 id="visited">visited</h3><p>0 = Unvisited, 1 = Visiting, 2 = Visited; Or simply use boolean,depends on the use case. <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> visited = <span class="keyword">new</span> <span class="title class_">Array</span>(numCourses).<span class="title function_">fill</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure></p><h3 id="adjacency">adjacency</h3><p>This approach is explicit about initialising the array with nullvalues before mapping. <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> N = <span class="number">10</span></span><br><span class="line"><span class="keyword">let</span> adj = <span class="keyword">new</span> <span class="title class_">Array</span>(N).<span class="title function_">fill</span>(<span class="literal">null</span>).<span class="title function_">map</span>(<span class="function">() =&gt;</span> []);</span><br><span class="line"><span class="keyword">let</span> prerequisites = [[<span class="number">1</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">1</span>]];</span><br><span class="line"></span><br><span class="line">prerequisites.<span class="title function_">forEach</span>(<span class="function">(<span class="params">[a, b]</span>) =&gt;</span> adj[a].<span class="title function_">push</span>(b));</span><br></pre></td></tr></table></figure></p><h3 id="sorting-arrays">Sorting Arrays</h3><p>Sort an array of numbers in ascending order: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">11</span>, <span class="number">2</span>, <span class="number">22</span>, <span class="number">1</span>].<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a - b);</span><br></pre></td></tr></table></figure></p><hr /><h2 id="priority-queue-pq">Priority Queue (pq)</h2><p>Min-Heap based on sum of pairs: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pq = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>(&#123;</span><br><span class="line">  <span class="attr">compare</span>: <span class="function">(<span class="params">a, b</span>) =&gt;</span> a.<span class="property">sum</span> - b.<span class="property">sum</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>Max-Heap based on sum of pairs: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pq = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>(&#123;</span><br><span class="line">  <span class="attr">compare</span>: <span class="function">(<span class="params">a, b</span>) =&gt;</span> b.<span class="property">sum</span> - a.<span class="property">sum</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>Can enqueue with data set like so: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pq.<span class="title function_">enqueue</span>(&#123; <span class="attr">sum</span>: <span class="number">100</span>, <span class="attr">i</span>: <span class="number">0</span>, <span class="attr">j</span>: <span class="number">0</span> &#125;);</span><br></pre></td></tr></table></figure></p><h3 id="minpriorityqueue">MinPriorityQueue</h3><ul><li>This class allows you to manage elements in a min-heap fashion,where the smallest element is always at the top.</li><li>It's particularly useful for problems where you need to efficientlyaccess and remove the smallest element repeatedly.</li></ul><h3 id="maxpriorityqueue">MaxPriorityQueue</h3><ul><li>This class manages elements in a max-heap fashion, where the largestelement is always at the top.</li><li>Use it when you need to access and remove the largest elementefficiently.</li></ul><h4 id="example-usage">Example Usage:</h4><p>Here's a quick example of using a <code>MinPriorityQueue</code> in aLeetCode problem:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> heap = <span class="keyword">new</span> <span class="title class_">MinPriorityQueue</span>();</span><br><span class="line">heap.<span class="title function_">enqueue</span>(<span class="number">10</span>);</span><br><span class="line">heap.<span class="title function_">enqueue</span>(<span class="number">5</span>);</span><br><span class="line">heap.<span class="title function_">enqueue</span>(<span class="number">20</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(heap.<span class="title function_">dequeue</span>().<span class="property">element</span>); <span class="comment">// Outputs 5</span></span><br></pre></td></tr></table></figure><p><strong>Note</strong>: These classes are specific to the LeetCodeenvironment and are not available in standard JavaScript. You will needto implement your own or use a third-party library if you are workingoutside LeetCode. <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save @datastructures-js/priority-queue</span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  <span class="title class_">PriorityQueue</span>,</span><br><span class="line">  <span class="title class_">MinPriorityQueue</span>,</span><br><span class="line">  <span class="title class_">MaxPriorityQueue</span></span><br><span class="line">&#125; = <span class="built_in">require</span>(<span class="string">&#x27;@datastructures-js/priority-queue&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>PriorityQueue in this repo is implemented as 3 types:</p><ul><li>PriorityQueue that accepts a custom comparator betweenelements.</li><li>MinPriorityQueue which considers an element with smaller prioritynumber as higher in priority.</li><li>MaxPriorityQueue which cosiders an element with bigger prioritynumber as higher in priority.</li></ul></blockquote><h3 id="build-from-scratch">Build From Scratch</h3><h4 id="min-heap-implementation">Min-Heap Implementation</h4><p>A min-heap is a binary tree where the parent nodes are smaller thantheir children. Here's a basic implementation:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MinHeap</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">heap</span> = [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getParentIndex</span>(<span class="params">index</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>((index - <span class="number">1</span>) / <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getLeftChildIndex</span>(<span class="params">index</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span> * index + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getRightChildIndex</span>(<span class="params">index</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span> * index + <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">swap</span>(<span class="params">index1, index2</span>) &#123;</span><br><span class="line">        [<span class="variable language_">this</span>.<span class="property">heap</span>[index1], <span class="variable language_">this</span>.<span class="property">heap</span>[index2]] = [<span class="variable language_">this</span>.<span class="property">heap</span>[index2], <span class="variable language_">this</span>.<span class="property">heap</span>[index1]];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">enqueue</span>(<span class="params">value</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">heap</span>.<span class="title function_">push</span>(value);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">heapifyUp</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">heapifyUp</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> index = <span class="variable language_">this</span>.<span class="property">heap</span>.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (index &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> parentIndex = <span class="variable language_">this</span>.<span class="title function_">getParentIndex</span>(index);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">heap</span>[parentIndex] &gt; <span class="variable language_">this</span>.<span class="property">heap</span>[index]) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">swap</span>(parentIndex, index);</span><br><span class="line">                index = parentIndex;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">dequeue</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">heap</span>.<span class="property">length</span> === <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">heap</span>.<span class="property">length</span> === <span class="number">1</span>) <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">heap</span>.<span class="title function_">pop</span>();</span><br><span class="line">        <span class="keyword">const</span> minValue = <span class="variable language_">this</span>.<span class="property">heap</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">heap</span>[<span class="number">0</span>] = <span class="variable language_">this</span>.<span class="property">heap</span>.<span class="title function_">pop</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">heapifyDown</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> minValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">heapifyDown</span>(<span class="params">index</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> smallest = index;</span><br><span class="line">        <span class="keyword">const</span> leftChild = <span class="variable language_">this</span>.<span class="title function_">getLeftChildIndex</span>(index);</span><br><span class="line">        <span class="keyword">const</span> rightChild = <span class="variable language_">this</span>.<span class="title function_">getRightChildIndex</span>(index);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (leftChild &lt; <span class="variable language_">this</span>.<span class="property">heap</span>.<span class="property">length</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">heap</span>[leftChild] &lt; <span class="variable language_">this</span>.<span class="property">heap</span>[smallest]) &#123;</span><br><span class="line">            smallest = leftChild;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (rightChild &lt; <span class="variable language_">this</span>.<span class="property">heap</span>.<span class="property">length</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">heap</span>[rightChild] &lt; <span class="variable language_">this</span>.<span class="property">heap</span>[smallest]) &#123;</span><br><span class="line">            smallest = rightChild;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (smallest !== index) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">swap</span>(index, smallest);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">heapifyDown</span>(smallest);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">size</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">heap</span>.<span class="property">length</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="max-heap-implementation">Max-Heap Implementation</h4><p>A max-heap is similar to a min-heap, but the parent nodes are largerthan their children.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MaxHeap</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">heap</span> = [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getParentIndex</span>(<span class="params">index</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>((index - <span class="number">1</span>) / <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getLeftChildIndex</span>(<span class="params">index</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span> * index + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getRightChildIndex</span>(<span class="params">index</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span> * index + <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">swap</span>(<span class="params">index1, index2</span>) &#123;</span><br><span class="line">        [<span class="variable language_">this</span>.<span class="property">heap</span>[index1], <span class="variable language_">this</span>.<span class="property">heap</span>[index2]] = [<span class="variable language_">this</span>.<span class="property">heap</span>[index2], <span class="variable language_">this</span>.<span class="property">heap</span>[index1]];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">enqueue</span>(<span class="params">value</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">heap</span>.<span class="title function_">push</span>(value);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">heapifyUp</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">heapifyUp</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> index = <span class="variable language_">this</span>.<span class="property">heap</span>.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (index &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> parentIndex = <span class="variable language_">this</span>.<span class="title function_">getParentIndex</span>(index);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">heap</span>[parentIndex] &lt; <span class="variable language_">this</span>.<span class="property">heap</span>[index]) &#123; <span class="comment">// Max-Heap condition</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">swap</span>(parentIndex, index);</span><br><span class="line">                index = parentIndex;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">dequeue</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">heap</span>.<span class="property">length</span> === <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">heap</span>.<span class="property">length</span> === <span class="number">1</span>) <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">heap</span>.<span class="title function_">pop</span>();</span><br><span class="line">        <span class="keyword">const</span> maxValue = <span class="variable language_">this</span>.<span class="property">heap</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">heap</span>[<span class="number">0</span>] = <span class="variable language_">this</span>.<span class="property">heap</span>.<span class="title function_">pop</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">heapifyDown</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> maxValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">heapifyDown</span>(<span class="params">index</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> largest = index;</span><br><span class="line">        <span class="keyword">const</span> leftChild = <span class="variable language_">this</span>.<span class="title function_">getLeftChildIndex</span>(index);</span><br><span class="line">        <span class="keyword">const</span> rightChild = <span class="variable language_">this</span>.<span class="title function_">getRightChildIndex</span>(index);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (leftChild &lt; <span class="variable language_">this</span>.<span class="property">heap</span>.<span class="property">length</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">heap</span>[leftChild] &gt; <span class="variable language_">this</span>.<span class="property">heap</span>[largest]) &#123; <span class="comment">// Max-Heap condition</span></span><br><span class="line">            largest = leftChild;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (rightChild &lt; <span class="variable language_">this</span>.<span class="property">heap</span>.<span class="property">length</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">heap</span>[rightChild] &gt; <span class="variable language_">this</span>.<span class="property">heap</span>[largest]) &#123; <span class="comment">// Max-Heap condition</span></span><br><span class="line">            largest = rightChild;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (largest !== index) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">swap</span>(index, largest);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">heapifyDown</span>(largest);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">size</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">heap</span>.<span class="property">length</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="key-points-to-remember">Key Points to Remember:</h4><ul><li><strong>Min-Heap</strong>: Always keeps the smallest element at thetop.</li><li><strong>Max-Heap</strong>: Always keeps the largest element at thetop.</li><li><strong>Time Complexity</strong>: Insertion and deletion operationsboth take <span class="math inline">\(O(\log n)\)</span> time, where<span class="math inline">\(n\)</span> is the number of elements in theheap.</li><li><strong>Use Cases</strong>: Min-heaps are useful for problemsrequiring efficient access to the minimum element (e.g., Dijkstra'salgorithm), while max-heaps are used when you need quick access to themaximum element (e.g., priority scheduling).</li></ul><h3 id="leetcode-imported-tips">LeetCode Imported Tips</h3><p>When working on LeetCode problems, you might come across built-inutility classes like <code>MinPriorityQueue</code> and<code>MaxPriorityQueue</code>. These classes are provided by theLeetCode environment to simplify the process of implementing priorityqueues, which are essentially min-heaps and max-heaps.</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">JavaScript</span>node.js <span class="number">20</span>.<span class="number">10</span>.<span class="number">0</span></span><br><span class="line"><span class="attribute">Your</span> code is run with --harmony flag, enabling new ES6 features.</span><br><span class="line"></span><br><span class="line"><span class="attribute">lodash</span>.js library is included by default.</span><br><span class="line"></span><br><span class="line"><span class="attribute">For</span> Priority Queue / Queue data structures, you may use <span class="number">5</span>.<span class="number">4</span>.<span class="number">0</span> version of datastructures-js/priority-queue and <span class="number">4</span>.<span class="number">2</span>.<span class="number">3</span> version of datastructures-js/queue.</span><br></pre></td></tr></table></figure><ul><li><ahref="https://support.leetcode.com/hc/en-us/articles/360011833974-What-are-the-environments-for-the-programming-languages">LeetCode- What are the environments for the programming languages?</a></li><li><ahref="https://github.com/datastructures-js/priority-queue/blob/v5/README.md#contents">GitHub- <span class="citation"data-cites="datastructures-js/priority-queue">@datastructures-js/priority-queue</span></a></li></ul><hr /><h2 id="working-with-json">Working with JSON</h2><p>Convert an object or array to a JSON string: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj);</span><br></pre></td></tr></table></figure></p><hr /><h2 id="map---set">map - set()</h2><p>Initialise a map with key-value pairs: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myMap = <span class="keyword">new</span> <span class="title class_">Map</span>([</span><br><span class="line">  [<span class="string">&#x27;key1&#x27;</span>, <span class="string">&#x27;value1&#x27;</span>],</span><br><span class="line">  [<span class="string">&#x27;key2&#x27;</span>, <span class="string">&#x27;value2&#x27;</span>],</span><br><span class="line">  [<span class="string">&#x27;key3&#x27;</span>, <span class="string">&#x27;value3&#x27;</span>]</span><br><span class="line">]);</span><br></pre></td></tr></table></figure></p><p>Convert map values to an array: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> valuesArray = <span class="title class_">Array</span>.<span class="title function_">from</span>(myMap.<span class="title function_">values</span>());</span><br></pre></td></tr></table></figure></p><h2 id="set---add">set - add()</h2><p>...</p><hr /><h2 id="math">Math</h2><p>Find the maximum value in a list of numbers: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Math</span>.<span class="title function_">max</span>(...list);</span><br></pre></td></tr></table></figure></p><p>Round a number to at most 2 decimal places: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Math</span>.<span class="title function_">round</span>(num * <span class="number">100</span>) / <span class="number">100</span>;</span><br></pre></td></tr></table></figure></p><p>To ensure numbers like 1.005 round correctly: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Math</span>.<span class="title function_">round</span>((num + <span class="title class_">Number</span>.<span class="property">EPSILON</span>) * <span class="number">100</span>) / <span class="number">100</span>;</span><br></pre></td></tr></table></figure></p><hr /><h2 id="css-adding-styles-to-before-and-after">CSS: Adding Styles to:before and :after</h2><p>Dynamically add CSS styles to <code>:before</code> and<code>:after</code> selectors: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> styleElem = <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;style&quot;</span>));</span><br><span class="line">styleElem.<span class="property">innerHTML</span> = <span class="string">&quot;.add-fading-&quot;</span> + nth + <span class="string">&quot;:before &#123; z-index: 1 !important; &#125;&quot;</span>;</span><br></pre></td></tr></table></figure></p><h2 id="npm-packages">NPM Packages</h2><h3 id="md-file-tree-by-michalbe">md-file-tree by <ahref="http://github.com/michalbe"><span class="citation"data-cites="michalbe">@michalbe</span></a></h3><p>Generate a markdown tree of all files in a directory,recursively:</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">## Display <span class="keyword">in</span> console</span><br><span class="line"><span class="built_in">md</span>-file-<span class="built_in">tree</span></span><br><span class="line"></span><br><span class="line">## Output to a file such as README.<span class="built_in">md</span></span><br><span class="line"><span class="built_in">md</span>-file-<span class="built_in">tree</span> &gt; README.<span class="built_in">md</span></span><br></pre></td></tr></table></figure><h3 id="javascript-obfuscator">JavaScript Obfuscator</h3><p>Obfuscate JavaScript code to make it harder to understand:<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> jsObfuscator = <span class="built_in">require</span>(<span class="string">&quot;js-obfuscator&quot;</span>);</span><br><span class="line"></span><br><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&quot;./000_unencrypted-js/main.js&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>, <span class="keyword">function</span> (<span class="params">error, code</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (error) <span class="keyword">throw</span> error;</span><br><span class="line">    <span class="keyword">var</span> obfuscatedResult = jsObfuscator.<span class="title function_">obfuscate</span>(code);</span><br><span class="line">    fs.<span class="title function_">writeFile</span>(<span class="string">&quot;./js/main.js&quot;</span>, obfuscatedResult.<span class="title function_">getObfuscatedCode</span>(), <span class="keyword">function</span> (<span class="params">fsError</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fsError) <span class="variable language_">console</span>.<span class="title function_">log</span>(fsError);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Obfuscated.&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h2 id="typescript-child-manager-configuration">TypeScript: ChildManager Configuration</h2><p>Example configuration for managing multiple processes:<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;processes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Frontend&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;executor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yarn&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;start&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../fe-project&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;isWindows&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;maxLogs&quot;</span><span class="punctuation">:</span> <span class="number">200</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;WebSocket&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;executor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yarn&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;start&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../server-project&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;isWindows&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;maxLogs&quot;</span><span class="punctuation">:</span> <span class="number">300</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Docker&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;executor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;docker-compose&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;up&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../be-project&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;isWindows&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;maxLogs&quot;</span><span class="punctuation">:</span> <span class="number">300</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;captureExit&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;longLive&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;debug&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p><h2 id="html-onkeydown">HTML: onkeydown</h2><p>To put on <code>&lt;form&gt;</code> to prevent user clicks onenter.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onkeydown=<span class="string">&quot;return event.key != &#x27;Enter&#x27;;&quot;</span></span><br></pre></td></tr></table></figure><h2 id="spread-operator">Spread operator</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">name</span>: <span class="string">&quot;Jing Hui&quot;</span>, <span class="attr">age</span>: <span class="number">24</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> test = &#123;...obj, <span class="attr">age</span>: <span class="number">25</span>, <span class="attr">nationality</span>: <span class="string">&quot;malaysian&quot;</span>&#125;</span><br></pre></td></tr></table></figure><hr /><h2 id="destructuring-assignments">Destructuring assignments</h2><p>You can use them in different contexts, such as swapping values,extracting properties from objects or arrays, and working withfunctions:</p><h3 id="swapping-two-variables">Swapping Two Variables</h3><p>This is the most common use case: swapping two variables withoutusing a temporary variable.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">let</span> b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Swap a and b</span></span><br><span class="line">[a, b] = [b, a];</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// Output: 10</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b); <span class="comment">// Output: 5</span></span><br></pre></td></tr></table></figure><blockquote><p>got this from Rotate Array (todo add link)</p></blockquote><h3 id="extracting-values-from-arrays">Extracting Values fromArrays</h3><p>You can use destructuring to assign array elements to variables.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Destructure first two elements</span></span><br><span class="line"><span class="keyword">const</span> [first, second] = numbers;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(first);  <span class="comment">// Output: 1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(second); <span class="comment">// Output: 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Skip elements</span></span><br><span class="line"><span class="keyword">const</span> [, , third] = numbers;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(third);  <span class="comment">// Output: 3</span></span><br></pre></td></tr></table></figure><h3 id="default-values-in-array-destructuring">Default Values in ArrayDestructuring</h3><p>If the array is shorter than expected, you can provide defaultvalues.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> colors = [<span class="string">&#x27;red&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Destructure with a default value</span></span><br><span class="line"><span class="keyword">const</span> [primaryColor, secondaryColor = <span class="string">&#x27;blue&#x27;</span>] = colors;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(primaryColor);  <span class="comment">// Output: &#x27;red&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(secondaryColor); <span class="comment">// Output: &#x27;blue&#x27; (default value)</span></span><br></pre></td></tr></table></figure><h3 id="object-destructuring">Object Destructuring</h3><p>You can destructure objects to extract specific properties intovariables.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> person = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;Alice&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">  <span class="attr">job</span>: <span class="string">&#x27;Engineer&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Destructure object properties</span></span><br><span class="line"><span class="keyword">const</span> &#123; name, age &#125; = person;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name); <span class="comment">// Output: &#x27;Alice&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(age);  <span class="comment">// Output: 30</span></span><br></pre></td></tr></table></figure><h3 id="object-destructuring-with-aliases">Object Destructuring withAliases</h3><p>You can also rename the extracted properties by assigning them to newvariable names.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> employee = &#123;</span><br><span class="line">  <span class="attr">firstName</span>: <span class="string">&#x27;John&#x27;</span>,</span><br><span class="line">  <span class="attr">lastName</span>: <span class="string">&#x27;Doe&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Destructure with alias</span></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="attr">firstName</span>: fName, <span class="attr">lastName</span>: lName &#125; = employee;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fName); <span class="comment">// Output: &#x27;John&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(lName);  <span class="comment">// Output: &#x27;Doe&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="nested-object-destructuring">Nested Object Destructuring</h3><p>Destructuring can also be used for nested objects.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> student = &#123;</span><br><span class="line">  <span class="attr">info</span>: &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;Mark&#x27;</span>,</span><br><span class="line">    <span class="attr">grade</span>: <span class="string">&#x27;A&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">courses</span>: [<span class="string">&#x27;Math&#x27;</span>, <span class="string">&#x27;Physics&#x27;</span>]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Destructure nested properties</span></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="attr">info</span>: &#123; name &#125;, <span class="attr">courses</span>: [firstCourse] &#125; = student;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name);        <span class="comment">// Output: &#x27;Mark&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(firstCourse); <span class="comment">// Output: &#x27;Math&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="function-parameter-destructuring">Function ParameterDestructuring</h3><p>You can destructure objects or arrays passed as functionparameters.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Destructure object in function parameters</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">printStudent</span>(<span class="params">&#123; name, age &#125;</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;name&#125;</span> is <span class="subst">$&#123;age&#125;</span> years old.`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> student = &#123; <span class="attr">name</span>: <span class="string">&#x27;Emily&#x27;</span>, <span class="attr">age</span>: <span class="number">25</span> &#125;;</span><br><span class="line"><span class="title function_">printStudent</span>(student); <span class="comment">// Output: &#x27;Emily is 25 years old.&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Destructure array in function parameters</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">[a, b]</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">sum</span>([<span class="number">3</span>, <span class="number">7</span>])); <span class="comment">// Output: 10</span></span><br></pre></td></tr></table></figure><h3 id="rest-operator-in-destructuring-spread-operator">Rest Operator inDestructuring (Spread Operator)</h3><p>You can use the rest (<code>...</code>) operator to capture theremaining elements after destructuring.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fruits = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;cherry&#x27;</span>, <span class="string">&#x27;date&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Destructure first element and capture the rest</span></span><br><span class="line"><span class="keyword">const</span> [firstFruit, ...otherFruits] = fruits;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(firstFruit);   <span class="comment">// Output: &#x27;apple&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(otherFruits);  <span class="comment">// Output: [&#x27;banana&#x27;, &#x27;cherry&#x27;, &#x27;date&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="ignoring-values-in-destructuring">Ignoring Values inDestructuring</h3><p>You can ignore certain elements when destructuring arrays.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> scores = [<span class="number">100</span>, <span class="number">90</span>, <span class="number">85</span>, <span class="number">80</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Ignore the second score</span></span><br><span class="line"><span class="keyword">const</span> [firstScore, , thirdScore] = scores;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(firstScore); <span class="comment">// Output: 100</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(thirdScore); <span class="comment">// Output: 85</span></span><br></pre></td></tr></table></figure><h3 id="combining-arrays-and-destructuring">Combining Arrays andDestructuring</h3><p>Destructuring works seamlessly when combining multiple arrays.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> arr2 = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// Combine and destructure</span></span><br><span class="line"><span class="keyword">const</span> combined = [...arr1, ...arr2];</span><br><span class="line"><span class="keyword">const</span> [first, second, ...rest] = combined;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(first);  <span class="comment">// Output: 1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(second); <span class="comment">// Output: 2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(rest);   <span class="comment">// Output: [3, 4, 5, 6]</span></span><br></pre></td></tr></table></figure><h2 id="todo-rest-operator-...">TODO: Rest Operator(<code>...</code>)</h2><p>The <strong>rest operator</strong> is used to <strong>gather</strong>multiple elements into a single array or object. You usually see it infunction parameters or destructuring.</p><h3 id="example-1-rest-in-function-parameters">Example 1: Rest inFunction Parameters</h3><p>In functions, the rest operator gathers all the extra argumentspassed to the function into an array.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">showNumbers</span>(<span class="params">...numbers</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(numbers); <span class="comment">// Gathers arguments into an array</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">showNumbers</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>); <span class="comment">// Output: [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><h4 id="breakdown">Breakdown:</h4><ul><li>The <code>...numbers</code> gathers all the arguments (1, 2, 3, 4,5) into a single array named <code>numbers</code>.</li></ul><hr /><h3 id="example-2-rest-in-array-destructuring">Example 2: Rest in ArrayDestructuring</h3><p>In destructuring, the rest operator gathers remaining elements of anarray into a new array.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> [first, second, ...rest] = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(first);   <span class="comment">// Output: 10</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(second);  <span class="comment">// Output: 20</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(rest);    <span class="comment">// Output: [30, 40, 50]</span></span><br></pre></td></tr></table></figure><h4 id="breakdown-1">Breakdown:</h4><ul><li><code>first</code> gets the value <code>10</code>,<code>second</code> gets <code>20</code>, and the rest of the values(<code>30, 40, 50</code>) are collected into the <code>rest</code>array.</li></ul><hr /><h3 id="example-3-rest-in-object-destructuring">Example 3: Rest inObject Destructuring</h3><p>You can also use the rest operator to gather remaining properties ofan object.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> person = &#123; <span class="attr">name</span>: <span class="string">&#x27;Alice&#x27;</span>, <span class="attr">age</span>: <span class="number">25</span>, <span class="attr">country</span>: <span class="string">&#x27;USA&#x27;</span> &#125;;</span><br><span class="line"><span class="keyword">const</span> &#123; name, ...details &#125; = person;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name);     <span class="comment">// Output: Alice</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(details);  <span class="comment">// Output: &#123; age: 25, country: &#x27;USA&#x27; &#125;</span></span><br></pre></td></tr></table></figure><h4 id="breakdown-2">Breakdown:</h4><ul><li><code>name</code> gets <code>Alice</code>, and the remainingproperties (<code>age</code>, <code>country</code>) are collected intothe <code>details</code> object.</li></ul><hr /><h2 id="spread-operator-...">Spread Operator (<code>...</code>)</h2><p>The <strong>spread operator</strong> is used to <strong>spreadout</strong> the elements of an array, object, or iterable intoindividual elements.</p><h3 id="example-1-spread-in-arrays">Example 1: Spread in Arrays</h3><p>Spread operator expands the elements of an array. This is often usedto combine arrays.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line"><span class="keyword">const</span> arr2 = [<span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> combined = [...arr1, ...arr2];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(combined); <span class="comment">// Output: [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure><h4 id="breakdown-3">Breakdown:</h4><ul><li><code>...arr1</code> spreads out <code>[1, 2]</code>, and<code>...arr2</code> spreads out <code>[3, 4]</code>, combining theminto one array.</li></ul><hr /><h3 id="example-2-spread-in-function-calls">Example 2: Spread inFunction Calls</h3><p>You can pass the elements of an array as individual arguments to afunction using the spread operator.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(...numbers)); <span class="comment">// Output: 7</span></span><br></pre></td></tr></table></figure><h4 id="breakdown-4">Breakdown:</h4><ul><li><code>...numbers</code> spreads the array <code>[5, 6, 7]</code>into <code>Math.max</code> as individual arguments(<code>5, 6, 7</code>).</li></ul><hr /><h3 id="example-3-spread-in-objects">Example 3: Spread in Objects</h3><p>The spread operator can copy properties from one object toanother.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj1 = &#123; <span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span> &#125;;</span><br><span class="line"><span class="keyword">const</span> obj2 = &#123; <span class="attr">c</span>: <span class="number">3</span> &#125;;</span><br><span class="line"><span class="keyword">const</span> merged = &#123; ...obj1, ...obj2 &#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(merged); <span class="comment">// Output: &#123; a: 1, b: 2, c: 3 &#125;</span></span><br></pre></td></tr></table></figure><h4 id="breakdown-5">Breakdown:</h4><ul><li><code>...obj1</code> spreads the properties of <code>obj1</code>into a new object, followed by <code>...obj2</code> spreading theproperties of <code>obj2</code>.</li></ul><hr /><h3 id="summary-of-differences">Summary of Differences</h3><table><colgroup><col style="width: 12%" /><col style="width: 43%" /><col style="width: 44%" /></colgroup><thead><tr class="header"><th>Feature</th><th>Rest Operator (<code>...</code>)</th><th>Spread Operator (<code>...</code>)</th></tr></thead><tbody><tr class="odd"><td><strong>Purpose</strong></td><td>Gathers elements into an array/object</td><td>Spreads elements into individual items</td></tr><tr class="even"><td><strong>Usage</strong></td><td>Function parameters, destructuring</td><td>Function calls, array/object merging</td></tr><tr class="odd"><td><strong>Example</strong></td><td><code>function(...args) &#123;&#125;</code></td><td><code>Math.max(...[1, 2, 3])</code></td></tr></tbody></table><hr /><h3 id="final-thoughts">Final Thoughts</h3><ul><li><strong>Rest</strong> collects multiple elements into an array orobject.<ul><li>Example: Collect remaining arguments in a function.</li></ul></li><li><strong>Spread</strong> takes an array or object and breaks it intoindividual elements.<ul><li>Example: Pass an array as arguments to a function or mergearrays/objects.</li></ul></li></ul><hr /><h2 id="common-errors">🐛 Common Errors</h2><h3 id="array-referencing-issue">Array Referencing Issue</h3><p>The method that causes all elements to reference the same array:<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> adj = <span class="keyword">new</span> <span class="title class_">Array</span>(N).<span class="title function_">fill</span>([]);</span><br></pre></td></tr></table></figure></p><ol type="1"><li>When using fill with objects (including arrays), it copies thereference to the object.</li><li>For primitive types (like numbers or strings), it copies thevalue.</li><li>Avoiding Common Pitfalls: Don't use fill with mutable objects if youneed distinct instances.</li></ol><h4 id="the-correct-way">✅ The Correct Way!</h4><p>This approach is more concise and directly initialises the arrayelements: <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> adj = <span class="keyword">new</span> <span class="title class_">Array</span>(N).<span class="title function_">fill</span>(<span class="literal">null</span>).<span class="title function_">map</span>(<span class="function">() =&gt;</span> []);</span><br><span class="line"><span class="comment">// OR</span></span><br><span class="line"><span class="keyword">let</span> adj = <span class="title class_">Array</span>.<span class="title function_">from</span>(&#123; <span class="attr">length</span>: N &#125;, <span class="function">() =&gt;</span> []);</span><br></pre></td></tr></table></figure></p><hr /><h2 id="todo">TODO</h2><ul><li>https://threejs.org/</li></ul>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Programming Languages </category>
          
          <category> Notebooks </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Recommendation Systems</title>
      <link href="/recommendation-systems/"/>
      <url>/recommendation-systems/</url>
      
        <content type="html"><![CDATA[<h2 id="wip">WIP?</h2>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Personal Development </category>
          
          <category> Notebooks </category>
          
          <category> Online Courses </category>
          
          <category> MIT &amp; IDSS - AI &amp; ML </category>
          
          <category> Machine Learning &amp; AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ai </tag>
            
            <tag> mit-idss </tag>
            
            <tag> self-study </tag>
            
            <tag> machine-learning </tag>
            
            <tag> data-science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deep Learning</title>
      <link href="/deep-learning/"/>
      <url>/deep-learning/</url>
      
        <content type="html"><![CDATA[<h2 id="wip">WIP?</h2>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Personal Development </category>
          
          <category> Notebooks </category>
          
          <category> Online Courses </category>
          
          <category> MIT &amp; IDSS - AI &amp; ML </category>
          
          <category> Machine Learning &amp; AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ai </tag>
            
            <tag> mit-idss </tag>
            
            <tag> self-study </tag>
            
            <tag> machine-learning </tag>
            
            <tag> data-science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Regression &amp; Hypothesis Testing</title>
      <link href="/regression-hypothesis-testing/"/>
      <url>/regression-hypothesis-testing/</url>
      
        <content type="html"><![CDATA[<h2 id="wip">WIP?</h2>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Personal Development </category>
          
          <category> Notebooks </category>
          
          <category> Online Courses </category>
          
          <category> MIT &amp; IDSS - AI &amp; ML </category>
          
          <category> Machine Learning &amp; AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ai </tag>
            
            <tag> mit-idss </tag>
            
            <tag> self-study </tag>
            
            <tag> machine-learning </tag>
            
            <tag> data-science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Regression &amp; Prediction</title>
      <link href="/regression-prediction/"/>
      <url>/regression-prediction/</url>
      
        <content type="html"><![CDATA[<h2 id="wip">WIP?</h2>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Personal Development </category>
          
          <category> Notebooks </category>
          
          <category> Online Courses </category>
          
          <category> MIT &amp; IDSS - AI &amp; ML </category>
          
          <category> Machine Learning &amp; AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> machine-learning </tag>
            
            <tag> data-science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Making Sense of Unstructured Data: A Dive into Clustering and Dimensionality Reduction</title>
      <link href="/making-sense-of-unstructured-data-a-dive-into-clustering-and-dimensionality-reduction/"/>
      <url>/making-sense-of-unstructured-data-a-dive-into-clustering-and-dimensionality-reduction/</url>
      
        <content type="html"><![CDATA[<p>Unstructured data, the kind that doesn't fit neatly into traditionalrow and column databases, poses unique challenges and opportunities fordata scientists. Let's explore how unsupervised learning, particularlyclustering and dimensionality reduction, helps in making sense of thisdata chaos.</p><h2id="unsupervised-learning-clustering-vs.-classification">UnsupervisedLearning: Clustering vs. Classification</h2><p>Unlike classification, clustering is an unsupervised learningtechnique used to group a set of objects in such a way that objects inthe same group (or cluster) are more similar to each other than to thosein other groups. It's about finding structure in the data without priorlabels.</p><h3 id="k-means-clustering">K-means Clustering</h3><p>K-means is a popular method that partitions data into K distinct,non-overlapping subgroups. It involves the following steps: -<strong>Initialization</strong>: Start by guessing the initialcentroids, often randomly. - <strong>Assignment</strong>: Assign eachdata point to the nearest cluster by calculating its distance to eachcentroid. - <strong>Update</strong>: Calculate new centroids as thecenters of the observations in the clusters.</p><p>One must choose the number of clusters in advance and the algorithmis sensitive to the initial placement of centroids, hence oftenrequiring multiple runs to get a satisfactory result.</p><h3 id="gaussian-mixture-models-gmm">Gaussian Mixture Models (GMM)</h3><p>GMM allows for soft clustering, where each point belongs to eachcluster to a different degree. This degree is based on the probabilityof the point being generated from each cluster's normal distribution,with its own mean and variance. It's more flexible than K-means becauseit allows for mixed membership.</p><h2 id="dimensionality-reduction-techniques">Dimensionality ReductionTechniques</h2><p>To deal with the high dimensionality of unstructured data,dimensionality reduction techniques like PCA (Principal ComponentAnalysis) and t-SNE (t-Distributed Stochastic Neighbor Embedding) arecrucial.</p><h3 id="principal-component-analysis-pca">Principal Component Analysis(PCA)</h3><p>PCA reduces the dimensionality of data by transforming the originalvariables into a new set of variables, which are linear combinations ofthe original variables. These new variables (principal components) arechosen in such a way that they maximize the variance and are orthogonalto each other.</p><h3 id="t-sne">t-SNE</h3><p>t-SNE is particularly good at preserving small pairwise distances orlocal similarities and is often used for the visualization ofhigh-dimensional datasets. It converts similarities between data pointsto joint probabilities and tries to minimize the Kullback-Leiblerdivergence between the joint probabilities of the low-dimensionalembedding and the high-dimensional data.</p><h2 id="practical-applications-and-considerations">PracticalApplications and Considerations</h2><p>Clustering and dimensionality reduction are not just academicexercises; they have practical implications in areas such as: -<strong>Market Segmentation</strong>: Identifying different customergroups for targeted marketing. - <strong>Anomaly Detection</strong>:Identifying unusual data points which could indicate fraudulentbehavior. - <strong>Image Segmentation</strong>: In computer vision,clustering is used to locate objects and boundaries in images.</p><h2 id="conclusion-the-road-ahead-in-unstructured-data">Conclusion: TheRoad Ahead in Unstructured Data</h2><p>Understanding and implementing clustering and dimensionalityreduction techniques allow data scientists to extract insights fromunstructured data efficiently. While tools like K-means and PCA arefoundational, continually evolving tools like GMM and t-SNE areenhancing our capability to handle complex data structures.</p><p>As we continue to explore the vast seas of unstructured data, thetechniques discussed here will be invaluable in navigating these waters,ensuring that we can harness the true power of data in making informeddecisions.</p><p>Feel free to dive deeper into each concept and explore how thesestrategies can be applied in real-world scenarios. Each tool andtechnique opens up new possibilities and solutions, shaping the futureof data-driven decision making.</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Personal Development </category>
          
          <category> Notebooks </category>
          
          <category> Online Courses </category>
          
          <category> MIT &amp; IDSS - AI &amp; ML </category>
          
          <category> Machine Learning &amp; AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> machine-learning </tag>
            
            <tag> data-science </tag>
            
            <tag> unsupervised-learning </tag>
            
            <tag> clustering </tag>
            
            <tag> dimensionality-reduction </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Foundations of Data Science: Navigating Through Inferential Statistics</title>
      <link href="/foundations-of-data-science-navigating-through-inferential-statistics/"/>
      <url>/foundations-of-data-science-navigating-through-inferential-statistics/</url>
      
        <content type="html"><![CDATA[<p>For myself: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /Users/enkr/Personal/_mit_idss/week_2/Notebook_Inferential_Statistics.ipynb</span><br></pre></td></tr></table></figure></p><h2 id="getting-started-with-inferential-statistics">Getting Startedwith Inferential Statistics</h2><p>Inferential statistics provide the backbone for making predictionsand decisions in data science. By examining a sample of data, we caninfer properties about a larger population. This approach is not onlypractical but necessary, as it is often impractical or impossible toexamine an entire population.</p><ul><li>Inferential statistics involve using sample data to makegeneralisations and predictions about a larger population.</li></ul><img data-src="/foundations-of-data-science-navigating-through-inferential-statistics/desc-vs-inf-stats.png" class=""><h3 id="key-concepts-in-inferential-statistics">Key Concepts inInferential Statistics:</h3><ul><li><strong>Confidence Intervals:</strong> These help us estimate apopulation parameter with a stated level of confidence. For example, a95% confidence interval suggests that we can be 95% certain that thepopulation parameter falls within this range.</li><li><strong>Hypothesis Testing:</strong> This allows us to makedecisions about the data. Is there a significant effect? Does a samplemeet a certain standard? We use hypothesis tests to answer thesequestions, relying on the formulation of null and alternativehypotheses.</li></ul><h3 id="important-statistical-tests">Important Statistical Tests:</h3><ul><li><strong>T-tests and ANOVA:</strong> Useful for comparing meansacross groups.</li><li><strong>Chi-Square Tests:</strong> Often used to examinerelationships between categorical variables.</li><li><strong>Regression Analysis:</strong> Helps in understanding therelationships among variables.</li></ul><h2 id="diving-into-distributions">Diving Into Distributions</h2><p>Understanding different types of distributions is crucial ininferential statistics as they describe how values are dispersed orspread. This section explores common distributions encountered in dataanalysis.</p><h3 id="common-statistical-distributions">Common StatisticalDistributions:</h3><ul><li><strong>Binomial Distribution:</strong> Used for binary outcomes(e.g., success/failure) across a set number of experiments.</li><li><strong>Normal Distribution:</strong> Applies to many naturalphenomena and indicates how data points are symmetrically distributedaround the mean.</li><li><strong>Poisson Distribution:</strong> Ideal for modelling thenumber of times an event occurs within a fixed interval of time orspace.</li></ul><h2 id="sampling-and-estimation">Sampling and Estimation</h2><p>Sampling techniques are fundamental in statistics, allowing us todraw conclusions about populations without needing to survey everyindividual.</p><h3 id="techniques-and-theories">Techniques and Theories:</h3><ul><li><strong>Sampling Methods:</strong> Include random, stratified, andcluster sampling, each with specific uses depending on the researchquestion.</li><li><strong>Central Limit Theorem:</strong> A key statistical theorythat justifies using the sample mean to estimate the population mean,assuming the sample size is sufficiently large.</li></ul><h2id="practical-application-using-statistics-to-make-decisions">PracticalApplication: Using Statistics to Make Decisions</h2><p>Statistics is not just about understanding data; it's about makingdecisions based on that data. Whether you're in marketing, finance,health, or any other sector, the ability to make informed decisionsthrough statistical methods is invaluable.</p><h3 id="real-world-examples">Real-World Examples:</h3><ul><li>Determining the effectiveness of a new drug.</li><li>Forecasting sales based on historical data.</li><li>Optimizing logistical operations to improve efficiency.</li></ul><h2 id="random-variable">Random Variable</h2><blockquote><p>A random variable is a variable whose possible values are numericaloutcomes of a random phenomenon. There are two types of randomvariables. e.g. If i dont buy bread today, doesnt mean i will buytomorrow. <img data-src="/foundations-of-data-science-navigating-through-inferential-statistics/random-variable.png" class=""></p></blockquote><ol type="1"><li><p><strong>Discrete Random Variable</strong></p><p>This type of variable assumes specific values and results from acountable number of outcomes. Examples include the number of heads whenflipping a coin multiple times, or the number of students present in aclass. &gt; e.g. 1, 2, 3 students</p></li><li><p><strong>Continuous Random Variable</strong></p><p>This type takes on an infinite number of possible values, oftenmeasurements, and results from a continuum of outcomes. An example wouldbe the time it takes for a computer to boot up or the amount of milk ina jug. &gt; e.g. 120.213 ml for a jug of milk</p></li></ol><h3 id="probability-distribution-for-rv">Probability Distribution forRV</h3><img data-src="/foundations-of-data-science-navigating-through-inferential-statistics/rv-pd-diagram.png" class=""><img data-src="/foundations-of-data-science-navigating-through-inferential-statistics/rv-pd-example.png" class=""><ul><li>Think of a random variable (RV) as a box of surprises. Every timeyou reach into the box, you pull out a surprise, and that surprise is aresult of some random event, like a number or an outcome.</li><li>A discrete random variable is like a box with labeled balls: you cancount them, and each one has a number. For example, if you have a boxwith balls labeled 1, 2, 3, ... up to 10, picking a ball is a discreterandom event because there are a countable number of balls.</li><li>The probability distribution for a discrete RV is like a recipe thattells you how likely each ball is to be picked. It's like saying, "Ballnumber 1 has a 10% chance, ball number 2 has a 20% chance, and soon."</li><li>A continuous random variable, on the other hand, is like a spectrumof colors in a rainbow. You can't count them because they smoothlytransition from one to another. For instance, the exact amount of milkin a jug could be any number between 0 liters and the jug'scapacity.</li><li>The probability distribution for a continuous RV tells you thelikelihood of getting a color in a certain range, like "there's a 30%chance of seeing shades of blue between these two points on therainbow." Since there are infinitely many points, the chance of pickingone exact point (or one exact amount of milk) is practically zero.</li></ul><p>To sum it up, a random variable represents the outcomes from a randomevent, and the probability distribution is like a guide that tells youhow likely each outcome is. Discrete RVs have countable outcomes, andtheir probability distribution is a list of chances, while continuousRVs have an infinite range of outcomes, and their distribution is morelike a continuous curve that shows the chances over a range.</p><h3id="discrete-vs-continuous-data-understanding-probability-distributions">Discretevs Continuous Data: Understanding Probability Distributions</h3><table><colgroup><col style="width: 22%" /><col style="width: 37%" /><col style="width: 39%" /></colgroup><thead><tr class="header"><th><strong>Aspect</strong></th><th><strong>Discrete Data</strong></th><th><strong>Continuous Data</strong></th></tr></thead><tbody><tr class="odd"><td><strong>Definition</strong></td><td>Values that are countable and distinct</td><td>Values that can take on any value within a range</td></tr><tr class="even"><td><strong>Examples</strong></td><td>Number of students, die rolls</td><td>Height, weight, temperature</td></tr><tr class="odd"><td><strong>Nature</strong></td><td>Can only take specific values</td><td>Can take any value within a range</td></tr><tr class="even"><td><strong>Measurement</strong></td><td>Counted</td><td>Measured</td></tr><tr class="odd"><td><strong>Graphical Representation</strong></td><td>Bar charts, pie charts, frequency distribution</td><td>Histograms, line graphs, scatter plots</td></tr><tr class="even"><td><strong>Variability</strong></td><td>Limited by the number of outcomes</td><td>Infinite possibilities within intervals</td></tr><tr class="odd"><td><strong>Value Changes</strong></td><td>Jump from one value to another</td><td>Can change gradually</td></tr><tr class="even"><td><strong>Type of Analysis</strong></td><td>Frequencies, mode, probability</td><td>Mean, median, mode, standard deviation, variance</td></tr></tbody></table><h2 id="types-of-distributions">Types of Distributions</h2><h3 id="bernoulli-distribution-discrete-random-variable---drv">1.Bernoulli Distribution (Discrete Random Variable - DRV)</h3><p>Imagine flipping a coin. There are only two possible outcomes: headsor tails. This is a Bernoulli distribution, where an event has only twooutcomes: success (1) or failure (0). For example, flipping a coin andgetting heads (success) or tails (failure).</p><h3 id="binomial-distribution-drv">2. Binomial Distribution (DRV)</h3><p>Think about flipping a coin multiple times. Let's say you flip it 10times and you're interested in how many times it lands on heads. Thebinomial distribution is used when you have a certain number ofindependent Bernoulli trials (like multiple coin flips) and you countthe number of successes (like landing on heads). - The number of trials,<code>n</code>, is fixed. - There are only two possible outcomes pertrial. - The probability of success, <code>p</code>, remains constantacross trials.</p><h3 id="probability-mass-function">Probability Mass Function</h3><p>The probability mass function for the binomial distribution is givenby:</p><p><span class="math display">\[P(X = x) = \binom{n}{x} p^x (1 - p)^{n -x}\]</span></p><hr /><p>Where:</p><p><span class="math display">\[\binom{n}{x}\]</span> is the binomialcoefficient, calculated as <spanclass="math display">\[\frac{n!}{x!(n-x)!}\]</span></p><ul><li><code>n</code> is the number of trials</li><li><code>x</code> is the number of successes</li><li><code>p</code> is the probability of success on an individualtrial</li></ul><h3 id="uniform-distribution-continuous-random-variable---crv">3.Uniform Distribution (Continuous Random Variable - CRV)</h3><p>Imagine you have a bag of marbles, and every marble is a differentcolour. If each marble is just as likely to be picked as every othermarble, this is a uniform distribution. It's like having an equal chanceof drawing any number between 1 and 6 when you roll a fair die.</p><h3 id="normal-distribution-crv">4. Normal Distribution (CRV)</h3><p>Picture a classic bell-shaped curve. This is a normal distribution,often seen in nature and human-made processes. For example, the heightsof people in a population are normally distributed—most people are ofaverage height, a few are very short, and a few are very tall. Thisdistribution is symmetrical around the mean (average), and it describesmany natural phenomena where values cluster around a central mean.</p><p>To remember these, think:</p><ul><li><strong>Bernoulli</strong>: Coin flip (2 outcomes).</li><li><strong>Binomial</strong>: Multiple coin flips (countingsuccesses).</li><li><strong>Uniform</strong>: Fair die roll (equal chance for alloutcomes).</li><li><strong>Normal</strong>: Human heights (average is most common,extremes are less so).</li></ul><p>Each distribution tells a story about the likelihood of differentoutcomes and helps us understand and predict patterns in the realworld.</p><p>wip ...</p><p><span class="math display">\[CI = \bar{x} \pm z \times\left(\frac{\sigma}{\sqrt{n}}\right)\]</span></p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Personal Development </category>
          
          <category> Notebooks </category>
          
          <category> Online Courses </category>
          
          <category> MIT &amp; IDSS - AI &amp; ML </category>
          
          <category> Machine Learning &amp; AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ai </tag>
            
            <tag> mit-idss </tag>
            
            <tag> self-study </tag>
            
            <tag> machine-learning </tag>
            
            <tag> data-science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pre Work: Introduction to Data Science &amp; AI</title>
      <link href="/pre-work-introduction-to-data-science-ai/"/>
      <url>/pre-work-introduction-to-data-science-ai/</url>
      
        <content type="html"><![CDATA[<p>Welcome to my exploration into the incredible worlds of Data Scienceand Artificial Intelligence (AI)—arenas that are totally reshaping howwe interact with technology, business, and beyond. I am really excitedto share this learning journey with you as we dive into the nuts andbolts of these fascinating fields.</p><h2 id="whats-the-deal-with-ds-ai">What's the Deal with DS &amp;AI?</h2><p>So, what exactly are Data Science and AI? They are like thesuperheroes of the tech world. Data Science dives into massive datasetsto fish out insights that help us make smart decisions, while AI is allabout crafting cool systems that <em>can think and act like humans</em>.Seriously, together, they're changing the game in pretty much everyindustry.</p><h2 id="quizzes">Quizzes</h2><p>I have compiled some practical casual quizzes along the way duringthe session, I thought it would be fun to share as well:</p><ol type="1"><li><strong>Inferential Data Science</strong>:<ul><li><strong>Question</strong>: What's the scoop on the inferentialaspect of data science?</li><li><strong>Answer</strong>: It's about using stats to guess stuff abouta whole population from a tiny sample. Super handy for predicting trendsand behaviours.</li></ul></li><li><strong>Limits of Guesswork</strong>:<ul><li><strong>Question</strong>: What trips up inferential thinking?</li><li><strong>Answer</strong>: You need good data and solid know-how ofthe subject. Missing these? Well, your guesses might be way off.</li></ul></li><li><strong>Computational Paradigm</strong>:<ul><li><strong>Question</strong>: What's a big deal about the computationalapproach in data science?</li><li><strong>Answer</strong>: It's all about letting computers do theheavy lifting to process and analyse data faster and moreaccurately.</li></ul></li><li><strong>Aiming High in Computations</strong>:<ul><li><strong>Question</strong>: What's the endgame for computational datascience?</li><li><strong>Answer</strong>: To cook up some smart algorithms thatstreamline how we handle and make sense of data.</li></ul></li><li><strong>When Things Get Tricky</strong>:<ul><li><strong>Question</strong>: What's the headache with computationalthinking?</li><li><strong>Answer</strong>: The bigger or more complex the data, thetougher the computing challenge. You need some serious computing powerto tackle it.</li></ul></li><li><strong>Example Time!</strong>:<ul><li><strong>Question</strong>: Can you think of a real-worldcomputational headache?</li><li><strong>Answer</strong>: Think about planning the quickest deliveryroutes for trucks or finding the fastest flight path. Yep, that's thekind of puzzle we solve here.</li></ul></li></ol><h2 id="wrapping-up-whats-next-on-our-adventure">Wrapping Up: What'sNext on Our Adventure</h2><p>As I jot down these foundational ideas, I am really excited to divedeeper into how Data Science and AI can transform everyday challengesinto opportunities for innovation. It's like being on a treasure huntwhere each concept and tool unlocks a part of the map. I am lookingforward to sharing these discoveries and insights as they unfold, makingthis notebook not just informative, but also a fun ride through the techlandscape.</p><p>Stay tuned for more snippets from my Data Science and AI diary. Let'skeep making learning an adventure!</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Personal Development </category>
          
          <category> Notebooks </category>
          
          <category> Online Courses </category>
          
          <category> MIT &amp; IDSS - AI &amp; ML </category>
          
          <category> Machine Learning &amp; AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ai </tag>
            
            <tag> mit-idss </tag>
            
            <tag> self-study </tag>
            
            <tag> machine-learning </tag>
            
            <tag> data-science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kicking Off My ML &amp; AI Journey with MIT IDSS and Great Learning</title>
      <link href="/kicking-off-my-ml-ai-journey-with-mit-idss-and-great-learning/"/>
      <url>/kicking-off-my-ml-ai-journey-with-mit-idss-and-great-learning/</url>
      
        <content type="html"><![CDATA[<p>Embarking on a new adventure is always thrilling, and it's even moreso when it plunges me into the fascinating realms of <strong>MachineLearning and Artificial Intelligence</strong> through the <ahref="https://www.mygreatlearning.com/mit-idss-data-science-machine-learning-program">MITIDSS program</a>, in partnership with <ahref="https://www.mygreatlearning.com/">Great Learning</a>. This journeyisn't just about boosting my technical skills—it's about deepening myunderstanding of the complex world of data. With a keen interest in ML&amp; AI, I'm eager to build a solid foundation of fundamentals thatwill propel my journey toward greater success!</p><span id="more"></span><h2 id="why-i-chose-mit-idss-by-great-learning">Why I Chose MIT IDSS byGreat Learning</h2><p>Selecting the optimal path to advance my career in data science wascrucial. The collaboration between MIT IDSS and Great Learning grabbedmy attention due to its unique blend of academic rigor and real-worldindustry exposure. The program promises a manageable yet intenseworkload of 8-12 hours per week, fitting seamlessly into my busyschedule as a working professional eager to enhance my skills.</p><p>After comparing options like SkillsFuture Singapore, Udemy, andCoursera, the choice became clear. The faculty from MIT, seasonedexperts in Data Science and AI, alongside the promise of interactive,mentor-led sessions at least once a month, convinced me of its value.These elements suggest not just learning opportunities but also thechance to engage with accomplished peers.</p><p>I'm approaching this program with an open mind and a critical eye,fully prepared to explore its potential to boost my career. Restassured, I plan to share candid feedback about my experience and theprogram's impact once I've made significant progress. Stay tuned for anhonest review of whether MIT IDSS meets my expectations and trulyenhances my expertise in the field.</p><h2 id="program-overview">Program Overview</h2><p>The Data Science and Machine Learning Program by MIT IDSS, incollaboration with Great Learning, blends rigorous academic content withpractical industry insights. This structured program requires acommitment of 8-12 hours per week and is designed to fit seamlessly intothe schedules of busy professionals.</p><h3 id="curriculum-and-structure">Curriculum and Structure</h3><p>The curriculum starts with foundational topics and escalates tocomplex areas in data science and machine learning. Courses areorganized into weekly modules that include:</p><ul><li><strong>Recorded Lectures</strong> by MIT Faculty</li><li><strong>Interactive Mentor-Led Sessions</strong></li><li><strong>Hands-On Case Studies</strong></li><li><strong>Weekly Assessments</strong></li></ul><h3 id="scoring-and-evaluation">Scoring and Evaluation</h3><p>The program uses a detailed scoring system to evaluate participantperformance:</p><table><colgroup><col style="width: 23%" /><col style="width: 46%" /><col style="width: 16%" /><col style="width: 14%" /></colgroup><thead><tr class="header"><th>Component</th><th>Description</th><th>Marks (Without Project)</th><th>Marks (With Project)</th></tr></thead><tbody><tr class="odd"><td><strong>Weekly Quizzes</strong></td><td>Quizzes based on lecture and reading materials</td><td>90</td><td>50</td></tr><tr class="even"><td><strong>Project Work</strong></td><td>Practical projects to apply learning</td><td>N/A</td><td>40</td></tr><tr class="odd"><td><strong>Attendance (Mentored Sessions)</strong></td><td>Participation in weekly live sessions</td><td>10</td><td>10</td></tr></tbody></table><h3 id="attendance-and-participation">Attendance and Participation</h3><p>Active participation and attendance are crucial for succeeding in theprogram:</p><table><colgroup><col style="width: 34%" /><col style="width: 65%" /></colgroup><thead><tr class="header"><th>Criteria</th><th>Scoring</th></tr></thead><tbody><tr class="odd"><td><strong>Less than 60%</strong></td><td>Incomplete (IC)</td></tr><tr class="even"><td><strong>60% - 80%</strong></td><td>Complete (C)</td></tr><tr class="odd"><td><strong>Above 80%</strong></td><td>Excel (E)</td></tr></tbody></table><h3 id="extension-policy">Extension Policy</h3><p>The program has a strict timeline to ensure consistent progress:</p><ul><li><strong>Assessments</strong>: Must be submitted by the duedates.</li><li><strong>Extensions</strong>: Limited to one per program foremergencies, evaluated on a case-by-case basis.</li></ul><blockquote><p>This program not only aims to enhance your skills but also preparesyou to lead in the ever-evolving field of data science and machinelearning. As you step into this journey, remember that your instructorsand peers are your support network, ready to assist and guide youtowards your career aspirations.</p></blockquote><h2 id="first-impressions-introduction-to-python">First Impressions:Introduction to Python</h2><p>The program kicked off with an orientation followed by our firstsession, "<strong>Prework - Introduction to Python</strong>". Thissession was designed to lay the groundwork for upcoming topics andrefresh fundamental programming skills. As someone who already possessesa solid foundation in programming, the content felt quite basic.However, revisiting these fundamentals is always beneficial instrengthening my understanding and ensuring no detail is overlooked.</p><img data-src="/kicking-off-my-ml-ai-journey-with-mit-idss-and-great-learning/first-lesson.png" class="" title="First lesson!"><p>Despite the straightforward nature of the material, the firstmentored session did not quite meet my expectations in terms ofinteraction. It felt more like a standard online course rather than anengaging classroom experience. This <em>lack of dynamic interaction wasa bit of a letdown, yet I am optimistic about future sessions</em>. Ilook forward to them fostering a more collaborative and engagingatmosphere, one that is crucial for deeper learning and professionalgrowth.</p><h2 id="my-plan">My Plan</h2><p>Accoridng to my schedule: <img data-src="/kicking-off-my-ml-ai-journey-with-mit-idss-and-great-learning/schedule.png" class="" title="Schedule"></p><p>I want to make the most out of this program and I have set a fewpersonal goals: 1. <strong>Engage Fully</strong>: Actively participatein all mentored learning sessions and group discussions. 2. <strong>StayOrganised</strong>: Keep up with the weekly schedule and assessments toavoid falling below total score of 95% and to keep attendance at 100%.3. <strong>Apply Learning</strong>: Implement concepts through personalprojects or at my current job to solidify understanding whenever itspossible!</p><h2 id="conclusion-a-journey-of-learning-and-growth">Conclusion: AJourney of Learning and Growth</h2><p>For me, this program extends beyond just mastering algorithms orenhancing my Python coding skills; it's about grasping the broaderimpact of Machine Learning and Artificial Intelligence in tacklingreal-world challenges. I am eager to discover where this journey willtake me and how it will refine my contributions to the field of datascience.</p><p>I look forward to sharing more insights and developments as I divedeeper into this fascinating field! Feel free to join theconversation—share your thoughts and experiences in ML &amp; AI eitherhere in the comments or in my upcoming posts. Let's explore thesetransformative technologies together!</p><h2 id="references-links-might-be-useful">References (Links might beuseful)</h2><ul><li><ahref="https://datasciencedojo.com/blog/data-science-interview-questions/">Masterdata science interview questions: Learn the top 100+ questions</a></li><li><span class="exturl" data-url="aHR0cHM6Ly9ib29rcmlvdC5jb20vZGF0YS1zY2llbmNlLWJvb2tzLw==">8 Of The BestData Science Books for Learning The Science Of Data<i class="fa fa-external-link-alt"></i></span></li><li><ahref="https://techbeacon.com/enterprise-it/14-data-scientists-you-should-follow-twitter">14data scientists you should follow on Twitter</a></li><li><ahref="https://towardsdatascience.com/data-science-vs-artificial-intelligence-vs-machine-learning-vs-deep-learning-9fadd8bda583">DataScience vs. Artificial Intelligence vs. Machine Learning vs. DeepLearning</a></li><li><ahref="https://builtin.com/data-science/data-science-applications-examples">25Data Science Applications and Examples</a></li></ul><hr /><!--TODO: Use it for last class![alt text](image.png)-->]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Personal Development </category>
          
          <category> Online Courses </category>
          
          <category> MIT &amp; IDSS - AI &amp; ML </category>
          
          <category> Machine Learning &amp; AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ai </tag>
            
            <tag> mit-idss </tag>
            
            <tag> self-study </tag>
            
            <tag> machine-learning </tag>
            
            <tag> data-science </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Elixir Notebook</title>
      <link href="/elixir-notebook/"/>
      <url>/elixir-notebook/</url>
      
        <content type="html"><![CDATA[<p>Coming soon ...</p><span id="more"></span><h2 id="todo">TODO</h2><h3 id="links-on-how-to-deploy-an-elixir-app">Links on how to deploy anElixir app</h3><ul><li>https://elixirforum.com/t/whats-the-best-way-to-deploy-a-phoenix-app-in-production/26420/20</li><li>https://damonvjanis.medium.com/optimizing-for-free-hosting-elixir-deployments-6bfc119a1f44</li><li>https://www.gigalixir.com/docs/</li><li>https://github.com/fly-apps/hello_elixir?tab=readme-ov-file</li><li>Github Action -https://noozo.medium.com/elixir-phoenix-deployments-using-github-actions-ec4178ba5fb</li><li>https://hexdocs.pm/phoenix/deployment.html#starting-your-server-in-production</li><li>https://practical-elixir.woojiahao.com/</li></ul><h2 id="ref">Ref</h2><ul><li>https://curiosum.com/phoenix-framework-guide#modern-web-frameworks---what-are-the-expectations</li></ul>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Programming Languages </category>
          
          <category> Notebooks </category>
          
          <category> Elixir </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Notebook</title>
      <link href="/python-notebook/"/>
      <url>/python-notebook/</url>
      
        <content type="html"><![CDATA[<p>My python notebook!</p><span id="more"></span><h2 id="variables">Variables</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello&quot;</span>, <span class="string">&quot;World&quot;</span>)</span><br><span class="line"><span class="comment"># &quot;Hello World&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello&quot;</span>, <span class="string">&quot;World&quot;</span>, sep=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="comment"># &quot;HelloWorld&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>()</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">// <span class="comment"># this forces the output to be integer</span></span><br></pre></td></tr></table></figure><h3id="type-conversion-the-process-of-converting-one-data-type-to-another-data-type-is-called-type-conversion.">TypeConversion: The process of converting one data type to another data typeis called type conversion.</h3><p>In Python, we can perform two types of type conversion. 1. ImplicitType Conversion - Here, Python automatically converts one data type toanother in order to avoid data loss. &gt; e.g. 1 * 1.23 = 1.23 as thereis no data loss 2. Explicit Type Conversion - Here, the user can convertthe data type of a variable to the required data type by using thein-built functions int(), float(), str(), etc. &gt; e.g.<code>"Hello " + str(123)</code></p><h2 id="data-structures">Data Structures</h2><h3 id="list">List</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="built_in">len</span>(<span class="built_in">list</span>)</span><br><span class="line"><span class="comment"># 4</span></span><br><span class="line"><span class="built_in">min</span>(<span class="built_in">list</span>)</span><br><span class="line"><span class="comment"># 0</span></span><br><span class="line"><span class="built_in">max</span>(<span class="built_in">list</span>)</span><br><span class="line"><span class="comment"># 3</span></span><br></pre></td></tr></table></figure><h4 id="first-n-items-in-list">first N items in list</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>[<span class="number">0</span>:<span class="number">3</span>]) <span class="comment"># Exclusive 3 - incl:excl</span></span><br><span class="line"><span class="comment"># [0, 1, 2]</span></span><br></pre></td></tr></table></figure><h4 id="last-item">Last item</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>[-<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h4 id="remove-last-and-return">Remove last and return</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>.pop()</span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>)</span><br><span class="line"><span class="comment"># [0,1,2]</span></span><br></pre></td></tr></table></figure><h4 id="add-to-last">Add to last</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>.append(<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>)</span><br><span class="line"><span class="comment"># [0,1,2,4]</span></span><br></pre></td></tr></table></figure><h3 id="tuples">Tuples</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">storage = (<span class="number">32</span>,<span class="number">64</span>,<span class="number">128</span>,<span class="number">256</span>)</span><br><span class="line"><span class="built_in">print</span>(storage)</span><br><span class="line"><span class="comment"># (32, 64, 128, 256)</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(storage[<span class="number">1</span>])</span><br><span class="line"><span class="comment"># 64</span></span><br></pre></td></tr></table></figure><p><em>Tuples are immutable</em></p><h3 id="dictionary-map">Dictionary (Map)</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># creating a dictionary</span></span><br><span class="line">attributes = &#123;</span><br><span class="line">    <span class="string">&#x27;Brand&#x27;</span>: <span class="string">&#x27;Apple&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;RAM (in GB)&#x27;</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="string">&#x27;Storage (in GB)&#x27;</span>: <span class="number">128</span>,</span><br><span class="line">    <span class="string">&#x27;Price (in $)&#x27;</span>: <span class="number">800</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="built_in">print</span>(attributes)</span><br><span class="line"><span class="comment"># &#123;&#x27;Brand&#x27;: &#x27;Apple&#x27;, &#x27;RAM (in GB)&#x27;: 4, &#x27;Storage (in GB)&#x27;: 128, &#x27;Price (in $)&#x27;: 800&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>(attributes)</span><br><span class="line"><span class="comment"># dict</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># creating a dictionary for storing data.</span></span><br><span class="line">products = &#123;</span><br><span class="line">    <span class="string">&#x27;Brand&#x27;</span>: brand_list,</span><br><span class="line">    <span class="string">&#x27;RAM (in GB)&#x27;</span>: ram_list,</span><br><span class="line">    <span class="string">&#x27;Storage (in GB)&#x27;</span>: storage_list,</span><br><span class="line">    <span class="string">&#x27;Price (in $)&#x27;</span>: price_list</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(products)</span><br><span class="line"><span class="comment"># &#123;&#x27;Brand&#x27;: [&#x27;Apple&#x27;, &#x27;Samsung&#x27;, &#x27;LG&#x27;, &#x27;Motorola&#x27;], &#x27;RAM (in GB)&#x27;: [4, 12, 8, 8], &#x27;Storage (in GB)&#x27;: [128, 128, 64, 128], &#x27;Price (in $)&#x27;: [900, 899, 600, 1000]&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># keys of a dictionary</span></span><br><span class="line">keys = products.keys()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The keys of the dictionary are :\n&#x27;</span>,keys)</span><br><span class="line"><span class="comment"># [&#x27;Brand&#x27;, &#x27;RAM (in GB)&#x27;, &#x27;Storage (in GB)&#x27;, &#x27;Price (in $)&#x27;]</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># values of a dictionary</span></span><br><span class="line">values = products.values()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The values of the dictionary are :\n&#x27;</span>, values)</span><br><span class="line"><span class="comment"># [[&#x27;Apple&#x27;, &#x27;Samsung&#x27;, &#x27;LG&#x27;, &#x27;Motorola&#x27;], [4, 12, 8, 8], [128, 128, 64, 128], [900, 899, 600, 1000]]</span></span><br></pre></td></tr></table></figure><h4 id="updatekey-value">update({key: value})</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dictionary=&#123;<span class="number">1</span>: <span class="string">&quot;USA&quot;</span>, <span class="number">2</span>: <span class="string">&quot;India&quot;</span>, <span class="number">3</span>: <span class="string">&quot;China&quot;</span>&#125;</span><br><span class="line">dictionary.update(&#123;<span class="number">3</span>:<span class="string">&quot;Japan&quot;</span>&#125;)</span><br><span class="line"><span class="built_in">print</span>(dictionary)</span><br><span class="line"><span class="comment"># &#123;1: &#x27;USA&#x27;, 2: &#x27;India&#x27;, 3: &#x27;Japan&#x27;&#125;</span></span><br></pre></td></tr></table></figure><h4 id="popkey">pop(key)</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dictionary=&#123;<span class="number">1</span>:<span class="string">&quot;USA&quot;</span>, <span class="number">2</span>:<span class="string">&quot;India&quot;</span>, <span class="number">3</span>:<span class="string">&quot;China&quot;</span>&#125;</span><br><span class="line">dictionary.pop(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(dictionary)</span><br><span class="line"><span class="comment"># &#123;1: &#x27;USA&#x27;, 3: &#x27;China&#x27;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="conditional-statements">Conditional Statements</h2><p>... nth much <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">price = <span class="number">900</span></span><br><span class="line"><span class="comment"># define the budget price</span></span><br><span class="line">budget = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;Enter your budget(in dollars): &#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># if-else statement</span></span><br><span class="line"><span class="keyword">if</span> price &lt;= budget:</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;Congrats! You can buy the Iphone&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;Sorry! The mobile price is more than your budget&#x27;</span>)</span><br></pre></td></tr></table></figure></p><h2 id="looping-statements">Looping Statements</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">range</span>(<span class="number">6</span>))</span><br><span class="line"><span class="comment"># range(0, 6)</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">6</span>)))</span><br><span class="line"><span class="comment"># [0, 1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">2</span>,<span class="number">6</span>)))</span><br><span class="line"><span class="comment"># [2, 3, 4, 5]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">6</span>, <span class="number">14</span>, <span class="number">2</span>))) <span class="comment"># Iterating by 2</span></span><br><span class="line"><span class="comment"># [6, 8, 10, 12]</span></span><br></pre></td></tr></table></figure><h2 id="list-comprehensions">List Comprehensions</h2><p>Example 1: from: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">discounted_price_list=[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> price_list:</span><br><span class="line">  discounted_price = x - (x*(<span class="number">5</span>/<span class="number">100</span>))</span><br><span class="line">  discounted_price_list.append(discounted_price)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(discounted_price_list)</span><br></pre></td></tr></table></figure> to: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">discounted_price_list = [x - (x*(<span class="number">5</span>/<span class="number">100</span>)) <span class="keyword">for</span> x <span class="keyword">in</span> price_list]</span><br><span class="line"><span class="built_in">print</span>(discounted_price_list)</span><br></pre></td></tr></table></figure></p><p>Example 2: from: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">within_budget = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> discounted_price_list:</span><br><span class="line">  <span class="keyword">if</span> x &lt;= budget:</span><br><span class="line">    within_budget.append(<span class="string">&#x27;Yes&#x27;</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    within_budget.append(<span class="string">&#x27;No&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(within_budget)</span><br></pre></td></tr></table></figure> to: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># asking for customer&#x27;s budget</span></span><br><span class="line">budget = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;Enter your budget(in dollars): &#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># creating a list of Yes/No based on budget and discounted prices</span></span><br><span class="line">within_budget = [<span class="string">&#x27;Yes&#x27;</span> <span class="keyword">if</span> x &lt;= budget <span class="keyword">else</span> <span class="string">&#x27;No&#x27;</span> <span class="keyword">for</span> x <span class="keyword">in</span> discounted_price_list]</span><br><span class="line"><span class="built_in">print</span>(within_budget)</span><br></pre></td></tr></table></figure></p><h2 id="functions">Functions</h2><h3 id="lambda-functions">lambda functions</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dis_price_lambda = <span class="keyword">lambda</span> discount : <span class="number">900</span> - ( <span class="number">900</span> * (discount / <span class="number">100</span>) )</span><br><span class="line"><span class="comment"># call the function with discount = 10%</span></span><br><span class="line">dis_price_lambda(<span class="number">10</span>)</span><br><span class="line"><span class="comment"># 810.0</span></span><br></pre></td></tr></table></figure><blockquote><p>Wow ...</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">say</span>(<span class="params">message, times</span>):</span><br><span class="line">    <span class="built_in">print</span>(message*times)</span><br><span class="line">say(<span class="string">&quot;How are you&quot;</span>, <span class="number">2</span>)</span><br><span class="line"><span class="comment"># How are youHow are you</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">lambda</span> x: (x+<span class="number">2</span>)*<span class="number">5</span>/<span class="number">2</span>)(<span class="number">4</span>)</span><br><span class="line"><span class="comment"># 15.0</span></span><br></pre></td></tr></table></figure><blockquote><p>Due to the division operation in the expression, which produces afloating-point result in Python 3. Use <code>//</code> instead, if youwant to perform floor division.</p></blockquote><h2 id="args-and-kwargs">*args and **kwargs</h2><p>from: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">total_amount</span>(<span class="params">price1, price2, price3, price4, price5</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    This function takes the price of five phones ordered</span></span><br><span class="line"><span class="string">    and returns the total order amount.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># computing the total order amount</span></span><br><span class="line">    total = price1 + price2 + price3 + price4 + price5</span><br><span class="line"></span><br><span class="line">    <span class="comment"># return the total amount</span></span><br><span class="line">    <span class="keyword">return</span> total</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Total order amount:&#x27;</span>, total_amount(<span class="number">700</span>, <span class="number">599</span>, <span class="number">650</span>, <span class="number">900</span>, <span class="number">820</span>))</span><br><span class="line"><span class="comment"># Total order amount: 3669</span></span><br></pre></td></tr></table></figure> to: <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">total_amount</span>(<span class="params">*args</span>): <span class="comment"># can be renamed to *prices</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    This function takes the prices of phones ordered</span></span><br><span class="line"><span class="string">    and returns the total order amount.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="comment"># computing the total order amount</span></span><br><span class="line">    <span class="keyword">for</span> arg <span class="keyword">in</span> args:</span><br><span class="line">        total += arg</span><br><span class="line"></span><br><span class="line">    <span class="comment"># return the total amount</span></span><br><span class="line">    <span class="keyword">return</span> total</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Total order amount:&#x27;</span>, total_amount(<span class="number">700</span>, <span class="number">599</span>, <span class="number">650</span>, <span class="number">900</span>, <span class="number">820</span>))</span><br><span class="line"><span class="comment"># Total order amount: 3669</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Total order amount:&#x27;</span>, total_amount(<span class="number">700</span>, <span class="number">599</span>, <span class="number">650</span>, <span class="number">900</span>, <span class="number">820</span>, <span class="number">630</span>, <span class="number">520</span>, <span class="number">799</span>, <span class="number">999</span>, <span class="number">840</span>))</span><br><span class="line"><span class="comment"># Total order amount: 7457</span></span><br></pre></td></tr></table></figure> &gt; like a general param inElixir</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">customer_net_spend</span>(<span class="params">*prices, discount=<span class="number">0.0</span>, **kwargs</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    This function takes the prices of phones ordered,</span></span><br><span class="line"><span class="string">    the discount percentage, and any other cost additions/subtractions,</span></span><br><span class="line"><span class="string">    and returns the customer&#x27;s net spend on the order.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="comment"># computing the total order amount</span></span><br><span class="line">    <span class="keyword">for</span> price <span class="keyword">in</span> prices:</span><br><span class="line">        total += price</span><br><span class="line"></span><br><span class="line">    total_discounted_price = total - discount*total</span><br><span class="line"></span><br><span class="line">    net_spend = total_discounted_price - kwargs[<span class="string">&#x27;cashback&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># return the total amount</span></span><br><span class="line">    <span class="keyword">return</span> net_spend</span><br><span class="line"></span><br><span class="line">additionals = &#123;<span class="string">&#x27;cashback&#x27;</span>: <span class="number">5</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Customer net spend (during last day of festive season):&#x27;</span>, customer_net_spend(<span class="number">700</span>, <span class="number">599</span>, <span class="number">650</span>, discount=<span class="number">0.05</span>, **additionals))</span><br><span class="line"><span class="comment"># Customer net spend (during last day of festive season): 1846.55</span></span><br></pre></td></tr></table></figure><blockquote><p>kwargs is like a %{key: value} in Elixir</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">order_summary</span>(<span class="params">*prices, **additionals</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    This function takes the prices of phones ordered</span></span><br><span class="line"><span class="string">    and any other cost additions/subtractions,</span></span><br><span class="line"><span class="string">    and returns the total amount, net spend,</span></span><br><span class="line"><span class="string">    and rewards points earned for the order.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    total = <span class="number">0</span></span><br><span class="line">    <span class="comment"># computing the total order amount</span></span><br><span class="line">    <span class="keyword">for</span> price <span class="keyword">in</span> prices:</span><br><span class="line">        total += price</span><br><span class="line"></span><br><span class="line">    net_spend = total - additionals[<span class="string">&#x27;discount&#x27;</span>]*total - additionals[<span class="string">&#x27;cashback&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> total &gt;= <span class="number">10000</span>:</span><br><span class="line">        reward_points = <span class="number">300</span></span><br><span class="line">    <span class="keyword">elif</span> total &gt;= <span class="number">5000</span>:</span><br><span class="line">        reward_points = <span class="number">200</span></span><br><span class="line">    <span class="keyword">elif</span> total &gt;= <span class="number">2000</span>:</span><br><span class="line">        reward_points = <span class="number">100</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        reward_points = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># return the total amount</span></span><br><span class="line">    <span class="keyword">return</span> total, net_spend, reward_points <span class="comment"># Is going to return as tuple</span></span><br><span class="line"></span><br><span class="line">additionals = &#123;<span class="string">&#x27;discount&#x27;</span>:<span class="number">0.05</span>, <span class="string">&#x27;cashback&#x27;</span>: <span class="number">5</span>&#125;</span><br><span class="line">ta, ns, rp = order_summary(<span class="number">700</span>, <span class="number">599</span>, <span class="number">750</span>, **additionals)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Customer Order Summary:\n&#x27;</span>, <span class="string">&#x27;\nTotal Amount:&#x27;</span>, ta, <span class="string">&#x27;\nTotal Discounted Amount:&#x27;</span>, ns, <span class="string">&#x27;\nReward Points Earned:&#x27;</span>, rp)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Customer Order Summary:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Total Amount: 2049</span></span><br><span class="line"><span class="comment"># Total Discounted Amount: 1941.55</span></span><br><span class="line"><span class="comment"># Reward Points Earned: 100</span></span><br></pre></td></tr></table></figure><h3 id="invalid-syntax">Invalid Syntax</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">my_function</span>(<span class="params">a, b, **kwargs, *args</span>):</span><br><span class="line">    <span class="keyword">return</span> a+b</span><br><span class="line">my_function(<span class="number">5</span>,<span class="number">6</span>)</span><br></pre></td></tr></table></figure><blockquote><p>because *args (for variable-length positional arguments) must beplaced before **kwargs (for variable-length keyword arguments).</p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">my_function</span>(<span class="params">a, b, *args, **kwargs</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;a:&quot;</span>, a)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;b:&quot;</span>, b)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;args:&quot;</span>, args)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;kwargs:&quot;</span>, kwargs)</span><br><span class="line"></span><br><span class="line">my_function(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, x=<span class="number">6</span>, y=<span class="number">7</span>)</span><br><span class="line"><span class="comment"># a: 1</span></span><br><span class="line"><span class="comment"># b: 2</span></span><br><span class="line"><span class="comment"># args: (3, 4, 5)</span></span><br><span class="line"><span class="comment"># kwargs: &#123;&#x27;x&#x27;: 6, &#x27;y&#x27;: 7&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fun</span>(<span class="params">A, B=<span class="number">30</span></span>):</span><br><span class="line">    <span class="keyword">return</span> A + B</span><br><span class="line"></span><br><span class="line"><span class="comment"># A is a positional argument and B is a keyword argument</span></span><br></pre></td></tr></table></figure><hr /><h2 id="some-findings">Some findings</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list_mul = [<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;2&#x27;</span>]</span><br><span class="line">list_mul*<span class="number">2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Programming Languages </category>
          
          <category> Notebooks </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>24 Hours Harvard CS50 By David Malan</title>
      <link href="/24-hours-harvard-cs50-by-david-malan/"/>
      <url>/24-hours-harvard-cs50-by-david-malan/</url>
      
        <content type="html"><![CDATA[<p><strong>References</strong> - YouTube: <ahref="https://youtu.be/LfaMVlDaQ24?si=8Iv9r7XYzZBxDpW0">Harvard CS50(2023) – Full Computer Science University Course</a></p><h2 id="lecture-1---scratch">Lecture 1 - Scratch</h2><h3 id="what-is-computer-science">What is Computer Science?</h3><p>Computational thinking</p><p>Problem solving?</p><span id="more"></span><img data-src="/24-hours-harvard-cs50-by-david-malan/image.png" class=""><p>Taking attendance - <strong>unary</strong> - which is ur finger,toes, etc.</p><p>Computer uses <strong>bi</strong>nary digi<strong>t</strong> a.k.abit Human uses <strong>dec</strong>imal digit</p><h4 id="binary-01">Binary (0,1)</h4><p>Light bulb example</p><p>Metaphorically as light bulb, computer has millions oftransistors</p><p>8 bits = 1 byte (e.g. file size)</p><h2 id="todo">TODO!</h2><ul><li><span class="exturl" data-url="aHR0cHM6Ly95b3V0dS5iZS9ma0l2bWZxWC10MD9zaT1PMS1JekxWdFRwanpTMEd1">HarvardProfessor Explains Algorithms in 5 Levels of Difficulty | WIRED<i class="fa fa-external-link-alt"></i></span></li><li>https://www.youtube.com/cs50/videos</li></ul>]]></content>
      
      
      <categories>
          
          <category> Personal Development </category>
          
          <category> Notebooks </category>
          
          <category> Online Courses </category>
          
          <category> CS50 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My Journey with Hexo - Building a Blog from Scratch</title>
      <link href="/my-journey-with-hexo-building-a-blog-from-scratch/"/>
      <url>/my-journey-with-hexo-building-a-blog-from-scratch/</url>
      
        <content type="html"><![CDATA[<h2 id="hello...-world">Hello... World!</h2><p>Welcome to my very first blog post! 🎉 I am super excited to share myjourney with you. Combining tech and creativity has always been my jam,and what better way to do that than by building my own blog, right? So,I dived into the world of Hexo - a super cool blog framework that's allabout speed and simplicity.</p><h2 id="why-hexo-good-question">Why Hexo? Good Question!</h2><p>I chose Hexo for a few kick-ass reasons:</p><ul><li><strong>Lightning Fast</strong>: Hexo zips through generating pageslike a race car. 🏎️💨</li><li><strong>Markdown Magic</strong>: Writing in Markdown is liketexting, but cooler. And Hexo totally gets that.</li><li><strong>Plugin Paradise</strong>: Hexo's got this treasure trove ofplugins and themes that let me tweak my blog just the way I like.</li></ul><span id="more"></span><h2 id="getting-my-hands-dirty-with-hexo">Getting My Hands Dirty withHexo</h2><p>Getting started was as easy as pie:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>Then I kicked off my new blog project:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo serve</span><br></pre></td></tr></table></figure><blockquote><p>Now you have it!</p></blockquote><h2 id="writing-a-post">Writing a Post</h2><p>Let me break it down for you. It's as simple as making a cup ofcoffee – well, almost!</p><h3 id="the-magic-command">The Magic Command</h3><p>All it takes is one command to start a new post. Here it is:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;The Title of Your Post&quot;</span></span><br></pre></td></tr></table></figure><p>Replace <code>"The Title of Your Post"</code> with whatevermind-blowing title you've cooked up for your next blog entry. When yourun this command, Hexo creates a new Markdown file in the<code>source/_posts</code> directory. It's prepped and ready for you topour your thoughts into.</p><h3 id="the-markdown-charm">The Markdown Charm</h3><p>Now, the fun part begins! Open this new file, and you'll see somedefault content called front-matter at the top. It looks something likethis:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: The Title of Your Post</span><br><span class="line"><span class="section">date: 2023-12-12 10:00:00</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>After this front-matter, it's your stage! Write your post usingMarkdown, a super intuitive way to format text. If you haven't usedMarkdown before, don't sweat it. It's pretty straightforward – like,<code>*italic*</code> for <em>italic</em> and <code>**bold**</code> for<strong>bold</strong>. You'll get the hang of it in no time!</p><h3 id="preview-as-you-go">Preview as You Go</h3><p>Want to see how your post looks as you write? Just run<code>hexo server</code> in your blog directory, and you can see yourwork in progress in real-time by visiting <code>localhost:4000</code> inyour browser. It's like having a live preview – pretty cool, huh? &gt;Without live reload plugin, you will have to constantly<code>cmd + r</code>.</p><h2 id="dont-forget-set-up-your-github-pages">Don't Forget: Set Up YourGitHub Pages!</h2><p>Let's not forget an essential piece of the puzzle – setting up GitHubPages. It's like finding the perfect stage to perform on! 🎭 Here's howyou get this stage ready for your Hexo blog's grand debut.</p><h3 id="github-pages-101">GitHub Pages 101</h3><p>First things first, GitHub Pages is this awesome service provided byGitHub that turns your repository into a website. It's free and supereasy to use.</p><h3 id="steps-to-stardom">Steps to Stardom</h3><ol type="1"><li><strong>Create a GitHub Repository</strong>:</li></ol><ul><li>If you haven't already, create a repository on GitHub. This is whereyour blog's content will live and be served from.</li></ul><ol start="2" type="1"><li><strong>Create a Deploy Key</strong>:</li></ol><ul><li>Use the <code>~/.ssh/id_rsa.pub</code> to generate a deploy key tohave the right permission &amp; check the wirte access box.</li></ul><ol start="3" type="1"><li><strong>Configure Hexo</strong>:</li></ol><ul><li>In your Hexo blog's <code>_config.yml</code> file, update the<code>deploy</code> section with your repository details. It should looksomething like this: <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/enkr1/blog</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li></ul><ol start="4" type="1"><li><strong>First Deployment</strong>:</li></ol><ul><li>Run<code>hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</code></li><li>This will push your generated blog to the <code>master</code> branchof your GitHub repository.</li></ul><ol start="5" type="1"><li><strong>Check It Out</strong>:</li></ol><ul><li>After a few minutes, your blog should be live at<code>https://enkr1.github.io/blog</code>.</li><li>Go on, open your browser and bask in the glory of your new Hexoblog!</li></ul><h2 id="deployment">Deployment! 🔧</h2><h3 id="simple-deployment-script">Simple Deployment Script 🚀</h3><p>Alright, here comes the tech wizardry part! 🧙‍♂️ When I am ready todeploy your blog. As it could've been a chore, but I've got this neatlittle trick up my sleeve. I created a custom command(<strong>alias</strong>, in geek speak) that does all the heavy liftingin one go. Check this out:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> hd=<span class="string">&#x27;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy&#x27;</span></span><br></pre></td></tr></table></figure><p>What does it do? Well, it's like a magic spell that cleans up oldfiles, generates new ones, and then, whoosh, deploys everything to mysite! 🚀 So, instead of typing three separate commands every time, Ijust type <code>hd</code>, and bam – my updates are live!</p><h3 id="supercharging-deployment-script-with-git-push">SuperchargingDeployment Script with Git Push 🚀</h3><p>Now that you're familiar with my basic deployment alias, let's takethis automation a step further. I've enhanced my deployment process witha custom shell function that not only handles the Hexo operations butalso manages the Git commits and pushes updates to the repository.Here's how it works:</p><h4 id="the-hd-function-more-than-just-deployment">The <code>hd</code>Function: More than Just Deployment</h4><p>Rather than just cleaning, generating, and deploying, this functionalso handles version control automatically. Here's the script I use:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">hd</span></span>() &#123;</span><br><span class="line">    hexo clean</span><br><span class="line">    hexo generate</span><br><span class="line">    hexo deploy</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Stage all changes, including new files</span></span><br><span class="line">    git add .</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Set the default commit message</span></span><br><span class="line">    commit_message=<span class="string">&quot;[auto-commit] Deployed&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Update commit message if $1 is provided</span></span><br><span class="line">    <span class="keyword">if</span> [[ -n <span class="variable">$1</span> ]]; <span class="keyword">then</span></span><br><span class="line">        commit_message=<span class="string">&quot;[deploy] <span class="variable">$1</span>&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Commit with the determined message</span></span><br><span class="line">    git commit -m <span class="string">&quot;<span class="variable">$commit_message</span>&quot;</span></span><br><span class="line">    git push origin master</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="how-it-enhances-the-workflow">How It Enhances the Workflow</h4><p>This script is a real time-saver. Let me break it down:</p><ol type="1"><li><strong>Cleaning, Generating, and Deploying:</strong> Just like thealias, it starts by cleaning up old files, generating new ones, anddeploying them to the server.</li><li><strong>Git Integration:</strong> After deploying, it automaticallyadds all changes to Git (<code>git add .</code>), sets a default commitmessage, and checks if a custom message has been provided when callingthe function. It then commits(<code>git commit -a -m "$commit_message"</code>) and pushes the changesto the master branch on the repository(<code>git push origin master</code>).</li></ol><h4 id="why-use-this-function">Why Use This Function?</h4><p>With this enhanced deployment function, you can significantlystreamline your publishing workflow. It's not just about makingdeployment easier; it's about integrating the entire process from localchanges to live updates on your blog, all with a single command. Thismethod ensures that your latest changes are not only deployed but alsotracked and version-controlled seamlessly.</p><p>Feel free to adapt this script to fit your workflow or systemconfiguration. It's all about enhancing efficiency and reducingrepetitive tasks, allowing you more time to focus on creating greatcontent!</p><h3 id="lastly-making-it-stick---saving-to-.profile">Lastly, Making ItStick! - Saving to .profile</h3><p>I didn't want to type this alias every time I open a new terminalsession, right? So, I went a step further and saved it into my .profilefile. This means my hd command is always ready to go, no matter when orwhere I start my work. Here's how you can do it:</p><p>Use <code>vim</code> to edit your <code>.profile</code> or<code>~/.bash_profil</code> (the file of your main profile):<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># In my case, I saved it in ~/.profile</span></span><br><span class="line">vim ~/.profile</span><br></pre></td></tr></table></figure> &gt; Add the alias line to the file and save it and closethe editor by <code>:x</code></p><p>To make the changes take effect, you can restart your terminal ortype <code>source ~/.profile</code>.</p><p>And voilà! 🎩✨ Now, every time I fire up my terminal, my<code>hd</code> command is there, waiting to deploy my latest musingsand tech adventures. Feel free to use this trick for your own blog. It'sall about working smarter, not harder!</p><h2 id="theme-time">Theme Time!</h2><p>I started playing dress-up with my blog by messing around withthemes:</p><ul><li>Poked around in the <code>themes</code> directory to make myown.</li><li>Toyed with layout files like <code>index.ejs</code> and<code>post.ejs</code>.</li><li>Jazzed things up with CSS and a dash of Sass.</li><li>Sprinkled some JavaScript for that extra zing.</li></ul><p>But you know what? There are so many awesome ready-made themes outthere. I ended up picking the Next theme! It's pretty rad – check itout: <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy8=">Next Theme<i class="fa fa-external-link-alt"></i></span>.</p><p><code>_config.yml:</code> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure></p><h2 id="bumps-along-the-road">Bumps Along the Road</h2><p>Not gonna lie, there were a few hiccups:</p><ul><li>Figuring out Hexo's maze of directories and config files was a bitof a brain teaser.</li><li>Tweaking the theme was a tricky dance, especially when trying tolayer global CSS styles.</li><li>Ran into a few head-scratchers with the config, but hey, nothing Dr.Google couldn't fix!</li></ul><p>That's a great idea! Acknowledging inspiration and sharing resourcescan add a lot of value to your post. Here's how you can include thesecredits and references in a friendly and appreciative manner:</p><h2 id="wrapping-up">Wrapping Up</h2><p>All in all, crafting this blog with Hexo has been a blast! It's asweet spot where my geeky side meets my creative spirit. I can't wait tofill this space with cool tech stuff and maybe some beatbox beats.Because why not?</p><h2 id="references-useful-links">References (Useful links)</h2><ul><li>Set limit of post body on Home page -https://stackoverflow.com/a/45767005/11910691</li><li>How to show "Read More"<ul><li>https://orcmid.com/BlunderDome/wingnut/2017/12/01/Excerpt/</li><li>https://github.com/hexojs/hexo/issues/2524#issuecomment-2048231875</li></ul></li><li>https://github.com/TenviLi/awesome-hexo-plugins</li><li>https://github.com/theme-next/theme-next-pjax</li><li>https://github.com/hexojs/awesome-hexo?tab=readme-ov-file</li><li>https://theme-next.js.org/plugins/</li><li>https://hexo.io/themes/</li><li>https://hexo.io/docs/configuration.html</li><li>https://hexo.io/api/tag</li><li><ahref="https://andrewliang25.github.io/2020/07/14/SEO-hexo-next/">Theblog that taught me how to integrate Google Console</a></li><li>https://hexo.io/news/2019/12/24/how-we-make-hexo-30-percent-faster/</li><li><ahref="https://github.com/hexojs/hexo-renderer-marked/issues/71">How toadd video in Hexo</a></li><li><span class="exturl" data-url="aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzU5NTY0OTIzLzExOTEwNjkx">How to addclass in asset_img<i class="fa fa-external-link-alt"></i></span></li></ul><hr /><p>Got questions or wanna chat? Drop me a text! Till next time, happycoding!</p>]]></content>
      
      
      <categories>
          
          <category> Software Engineering </category>
          
          <category> Notebooks </category>
          
          <category> Frameworks </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> programming </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
